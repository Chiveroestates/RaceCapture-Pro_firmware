
main.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001c08  00100000  00100000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ctors        00000000  00101c08  00101c08  0001005c  2**0
                  CONTENTS
  2 .dtors        00000000  00101c08  00101c08  0001005c  2**0
                  CONTENTS
  3 .rodata       00000144  00101c08  00101c08  00009c08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .data         00000058  00200000  00101d4c  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data.ulCriticalNesting 00000004  00200058  00101da4  00010058  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          00000004  0020005c  0020005c  0001005c  2**2
                  ALLOC
  7 .bss.ulNextMessage.2587 00000004  00200060  00200060  0001005c  2**2
                  ALLOC
  8 .bss.xISRMessages 00000040  00200064  00200064  0001005c  2**2
                  ALLOC
  9 .bss.pxCurrentTCB 00000004  002000a4  002000a4  0001005c  2**2
                  ALLOC
 10 .bss.xMissedYield 00000004  002000a8  002000a8  0001005c  2**2
                  ALLOC
 11 .bss.xTickCount 00000004  002000ac  002000ac  0001005c  2**2
                  ALLOC
 12 .bss.xNumOfOverflows 00000004  002000b0  002000b0  0001005c  2**2
                  ALLOC
 13 .bss.uxTopReadyPriority 00000004  002000b4  002000b4  0001005c  2**2
                  ALLOC
 14 .bss.uxSchedulerSuspended 00000004  002000b8  002000b8  0001005c  2**2
                  ALLOC
 15 .bss.uxMissedTicks 00000004  002000bc  002000bc  0001005c  2**2
                  ALLOC
 16 .bss.uxCurrentNumberOfTasks 00000004  002000c0  002000c0  0001005c  2**2
                  ALLOC
 17 .bss.xSchedulerRunning 00000004  002000c4  002000c4  0001005c  2**2
                  ALLOC
 18 .bss.uxTopUsedPriority 00000004  002000c8  002000c8  0001005c  2**2
                  ALLOC
 19 .bss.uxTaskNumber.3709 00000004  002000cc  002000cc  0001005c  2**2
                  ALLOC
 20 .bss.xSuspendedTaskList 00000014  002000d0  002000d0  0001005c  2**2
                  ALLOC
 21 .bss.xPendingReadyList 00000014  002000e4  002000e4  0001005c  2**2
                  ALLOC
 22 .bss.pxOverflowDelayedTaskList 00000004  002000f8  002000f8  0001005c  2**2
                  ALLOC
 23 .bss.pxDelayedTaskList 00000004  002000fc  002000fc  0001005c  2**2
                  ALLOC
 24 .bss.xDelayedTaskList2 00000014  00200100  00200100  0001005c  2**2
                  ALLOC
 25 .bss.xDelayedTaskList1 00000014  00200114  00200114  0001005c  2**2
                  ALLOC
 26 .bss.pxReadyTasksLists 00000064  00200128  00200128  0001005c  2**2
                  ALLOC
 27 .bss.xHeapHasBeenInitialised.3010 00000004  0020018c  0020018c  0001005c  2**2
                  ALLOC
 28 .bss.xEnd     00000008  00200190  00200190  0001005c  2**2
                  ALLOC
 29 .bss.xStart   00000008  00200198  00200198  0001005c  2**2
                  ALLOC
 30 .bss.xHeap    00002714  002001a0  002001a0  0001005c  2**2
                  ALLOC
 31 .bss.usbIntefacedInitialized 00000004  002028b4  002028b4  0001005c  2**2
                  ALLOC
 32 .bss.eDriverState 00000004  002028b8  002028b8  0001005c  2**2
                  ALLOC
 33 .bss.ucUSBConfig 00000001  002028bc  002028bc  0001005c  2**0
                  ALLOC
 34 .bss.ulReceivedAddress 00000004  002028c0  002028c0  0001005c  2**2
                  ALLOC
 35 .bss.xRequest.3556 00000008  002028c4  002028c4  0001005c  2**2
                  ALLOC
 36 .bss.uiCurrentBank 00000004  002028cc  002028cc  0001005c  2**2
                  ALLOC
 37 .bss.ucControlState 00000001  002028d0  002028d0  0001005c  2**0
                  ALLOC
 38 .bss.xTxCDC   00000004  002028d4  002028d4  0001005c  2**2
                  ALLOC
 39 .bss.xRxCDC   00000004  002028d8  002028d8  0001005c  2**2
                  ALLOC
 40 .bss.pxControlRx 00000088  002028dc  002028dc  0001005c  2**2
                  ALLOC
 41 .bss.pxControlTx 00000088  00202964  00202964  0001005c  2**2
                  ALLOC
 42 .comment      00000156  00000000  00000000  0001005c  2**0
                  CONTENTS, READONLY
 43 .debug_aranges 00000120  00000000  00000000  000101b8  2**3
                  CONTENTS, READONLY, DEBUGGING
 44 .debug_pubnames 00000092  00000000  00000000  000102d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 45 .debug_info   000006cd  00000000  00000000  0001036a  2**0
                  CONTENTS, READONLY, DEBUGGING
 46 .debug_abbrev 0000031b  00000000  00000000  00010a37  2**0
                  CONTENTS, READONLY, DEBUGGING
 47 .debug_line   00000536  00000000  00000000  00010d52  2**0
                  CONTENTS, READONLY, DEBUGGING
 48 .debug_frame  000000e0  00000000  00000000  00011288  2**2
                  CONTENTS, READONLY, DEBUGGING
 49 .debug_str    00000249  00000000  00000000  00011368  2**0
                  CONTENTS, READONLY, DEBUGGING
 50 .debug_loc    00000497  00000000  00000000  000115b1  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00100000 <Vectors>:
  100000:	e59ff018 	ldr	pc, [pc, #24]	; 100020 <Reset_Addr>
  100004:	e59ff018 	ldr	pc, [pc, #24]	; 100024 <Undef_Addr>
  100008:	e59ff018 	ldr	pc, [pc, #24]	; 100028 <SWI_Addr>
  10000c:	e59ff018 	ldr	pc, [pc, #24]	; 10002c <PAbt_Addr>
  100010:	e59ff018 	ldr	pc, [pc, #24]	; 100030 <DAbt_Addr>
  100014:	e1a00000 	nop			(mov r0,r0)
  100018:	e51fff20 	ldr	pc, [pc, #-3872]	; ff100 <PMC_OSCOUNT+0xef200>
  10001c:	e51fff20 	ldr	pc, [pc, #-3872]	; ff104 <PMC_OSCOUNT+0xef204>

00100020 <Reset_Addr>:
  100020:	0010005c 	andeqs	r0, r0, ip, asr r0

00100024 <Undef_Addr>:
  100024:	00100040 	andeqs	r0, r0, r0, asr #32

00100028 <SWI_Addr>:
  100028:	0010020c 	andeqs	r0, r0, ip, lsl #4

0010002c <PAbt_Addr>:
  10002c:	00100048 	andeqs	r0, r0, r8, asr #32

00100030 <DAbt_Addr>:
  100030:	0010004c 	andeqs	r0, r0, ip, asr #32
  100034:	00000000 	andeq	r0, r0, r0

00100038 <IRQ_Addr>:
  100038:	00100050 	andeqs	r0, r0, r0, asr r0

0010003c <FIQ_Addr>:
  10003c:	00100054 	andeqs	r0, r0, r4, asr r0

00100040 <Undef_Handler>:
  100040:	eafffffe 	b	100040 <Undef_Handler>
  100044:	ea000070 	b	10020c <SWI_Handler>

00100048 <PAbt_Handler>:
  100048:	eafffffe 	b	100048 <PAbt_Handler>

0010004c <DAbt_Handler>:
  10004c:	eafffffe 	b	10004c <DAbt_Handler>

00100050 <IRQ_Handler>:
  100050:	eafffffe 	b	100050 <IRQ_Handler>

00100054 <FIQ_Handler>:
  100054:	eafffffe 	b	100054 <FIQ_Handler>

00100058 <_startup>:
  100058:	e59ff120 	ldr	pc, [pc, #288]	; 100180 <.text+0x180>

0010005c <Reset_Handler>:
  10005c:	e3e000ff 	mvn	r0, #255	; 0xff
  100060:	e59f111c 	ldr	r1, [pc, #284]	; 100184 <.text+0x184>
  100064:	e5801060 	str	r1, [r0, #96]
  100068:	e59f0118 	ldr	r0, [pc, #280]	; 100188 <.text+0x188>
  10006c:	e3a01902 	mov	r1, #32768	; 0x8000
  100070:	e5801004 	str	r1, [r0, #4]
  100074:	e59f0110 	ldr	r0, [pc, #272]	; 10018c <.text+0x18c>
  100078:	e59f1110 	ldr	r1, [pc, #272]	; 100190 <.text+0x190>
  10007c:	e5801020 	str	r1, [r0, #32]

00100080 <MOSCS_Loop>:
  100080:	e5902068 	ldr	r2, [r0, #104]
  100084:	e2122001 	ands	r2, r2, #1	; 0x1
  100088:	0afffffc 	beq	100080 <MOSCS_Loop>
  10008c:	e59f1100 	ldr	r1, [pc, #256]	; 100194 <.text+0x194>
  100090:	e580102c 	str	r1, [r0, #44]

00100094 <PLL_Loop>:
  100094:	e5902068 	ldr	r2, [r0, #104]
  100098:	e2122004 	ands	r2, r2, #4	; 0x4
  10009c:	0afffffc 	beq	100094 <PLL_Loop>
  1000a0:	e3a01007 	mov	r1, #7	; 0x7
  1000a4:	e5801030 	str	r1, [r0, #48]
  1000a8:	e3a00981 	mov	r0, #2113536	; 0x204000
  1000ac:	e321f0db 	msr	CPSR_c, #219	; 0xdb
  1000b0:	e1a0d000 	mov	sp, r0
  1000b4:	e2400004 	sub	r0, r0, #4	; 0x4
  1000b8:	e321f0d7 	msr	CPSR_c, #215	; 0xd7
  1000bc:	e1a0d000 	mov	sp, r0
  1000c0:	e2400004 	sub	r0, r0, #4	; 0x4
  1000c4:	e321f0d1 	msr	CPSR_c, #209	; 0xd1
  1000c8:	e1a0d000 	mov	sp, r0
  1000cc:	e2400004 	sub	r0, r0, #4	; 0x4
  1000d0:	e321f0d2 	msr	CPSR_c, #210	; 0xd2
  1000d4:	e1a0d000 	mov	sp, r0
  1000d8:	e2400c01 	sub	r0, r0, #256	; 0x100
  1000dc:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
  1000e0:	e1a0d000 	mov	sp, r0
  1000e4:	e2400c01 	sub	r0, r0, #256	; 0x100
  1000e8:	e321f0df 	msr	CPSR_c, #223	; 0xdf
  1000ec:	e1a0d000 	mov	sp, r0
  1000f0:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
  1000f4:	e59f109c 	ldr	r1, [pc, #156]	; 100198 <.text+0x198>
  1000f8:	e59f209c 	ldr	r2, [pc, #156]	; 10019c <.text+0x19c>
  1000fc:	e59f309c 	ldr	r3, [pc, #156]	; 1001a0 <.text+0x1a0>

00100100 <LoopRel>:
  100100:	e1520003 	cmp	r2, r3
  100104:	34910004 	ldrcc	r0, [r1], #4
  100108:	34820004 	strcc	r0, [r2], #4
  10010c:	3afffffb 	bcc	100100 <LoopRel>
  100110:	e3a00000 	mov	r0, #0	; 0x0
  100114:	e59f1088 	ldr	r1, [pc, #136]	; 1001a4 <.text+0x1a4>
  100118:	e59f2088 	ldr	r2, [pc, #136]	; 1001a8 <.text+0x1a8>

0010011c <LoopZI>:
  10011c:	e1510002 	cmp	r1, r2
  100120:	34810004 	strcc	r0, [r1], #4
  100124:	3afffffc 	bcc	10011c <LoopZI>
  100128:	e3e000ff 	mvn	r0, #255	; 0xff
  10012c:	e3a01001 	mov	r1, #1	; 0x1
  100130:	e5801000 	str	r1, [r0]
  100134:	e59f0070 	ldr	r0, [pc, #112]	; 1001ac <.text+0x1ac>
  100138:	e59f1070 	ldr	r1, [pc, #112]	; 1001b0 <.text+0x1b0>

0010013c <ctor_loop>:
  10013c:	e1500001 	cmp	r0, r1
  100140:	0a000005 	beq	10015c <ctor_end>
  100144:	e4902004 	ldr	r2, [r0], #4
  100148:	e92d0003 	stmdb	sp!, {r0, r1}
  10014c:	e1a0e00f 	mov	lr, pc
  100150:	e12fff12 	bx	r2
  100154:	e8bd0003 	ldmia	sp!, {r0, r1}
  100158:	eafffff7 	b	10013c <ctor_loop>

0010015c <ctor_end>:
  10015c:	e3a00000 	mov	r0, #0	; 0x0
  100160:	e1a01000 	mov	r1, r0
  100164:	e1a02000 	mov	r2, r0
  100168:	e1a0b000 	mov	fp, r0
  10016c:	e1a07000 	mov	r7, r0
  100170:	e59fa03c 	ldr	sl, [pc, #60]	; 1001b4 <.text+0x1b4>
  100174:	e28fe000 	add	lr, pc, #0	; 0x0
  100178:	e12fff1a 	bx	sl

0010017c <__main_exit>:
  10017c:	eafffffe 	b	10017c <__main_exit>
  100180:	0010005c 	andeqs	r0, r0, ip, asr r0
  100184:	00320100 	eoreqs	r0, r2, r0, lsl #2
  100188:	fffffd40 	swinv	0x00fffd40
  10018c:	fffffc00 	swinv	0x00fffc00
  100190:	00000601 	andeq	r0, r0, r1, lsl #12
  100194:	00191c05 	andeqs	r1, r9, r5, lsl #24
  100198:	00101d4c 	andeqs	r1, r0, ip, asr #26
  10019c:	00200000 	eoreq	r0, r0, r0
  1001a0:	0020005c 	eoreq	r0, r0, ip, asr r0
  1001a4:	0020005c 	eoreq	r0, r0, ip, asr r0
  1001a8:	002029ec 	eoreq	r2, r0, ip, ror #19
  1001ac:	00101c08 	andeqs	r1, r0, r8, lsl #24
  1001b0:	00101c08 	andeqs	r1, r0, r8, lsl #24
  1001b4:	0010063d 	andeqs	r0, r0, sp, lsr r6

001001b8 <vPortISRStartFirstTask>:
  1001b8:	e59f0044 	ldr	r0, [pc, #68]	; 100204 <.text+0x204>
  1001bc:	e5900000 	ldr	r0, [r0]
  1001c0:	e590e000 	ldr	lr, [r0]
  1001c4:	e59f003c 	ldr	r0, [pc, #60]	; 100208 <.text+0x208>
  1001c8:	e8be0002 	ldmia	lr!, {r1}
  1001cc:	e5801000 	str	r1, [r0]
  1001d0:	e8be0001 	ldmia	lr!, {r0}
  1001d4:	e169f000 	msr	SPSR_fc, r0
  1001d8:	e8de7fff 	ldmia	lr, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}^
  1001dc:	e1a00000 	nop			(mov r0,r0)
  1001e0:	e59ee03c 	ldr	lr, [lr, #60]
  1001e4:	e25ef004 	subs	pc, lr, #4	; 0x4
  1001e8:	e59f300c 	ldr	r3, [pc, #12]	; 1001fc <.text+0x1fc>
  1001ec:	e5933000 	ldr	r3, [r3]
  1001f0:	e59f3008 	ldr	r3, [pc, #8]	; 100200 <.text+0x200>
  1001f4:	e5933000 	ldr	r3, [r3]
  1001f8:	e12fff1e 	bx	lr
  1001fc:	00200058 	eoreq	r0, r0, r8, asr r0
  100200:	002000a4 	eoreq	r0, r0, r4, lsr #1
  100204:	002000a4 	eoreq	r0, r0, r4, lsr #1
  100208:	00200058 	eoreq	r0, r0, r8, asr r0

0010020c <SWI_Handler>:
  10020c:	e28ee004 	add	lr, lr, #4	; 0x4
  100210:	e92d0001 	stmdb	sp!, {r0}
  100214:	e94d2000 	stmdb	sp, {sp}^
  100218:	e1a00000 	nop			(mov r0,r0)
  10021c:	e24dd004 	sub	sp, sp, #4	; 0x4
  100220:	e8bd0001 	ldmia	sp!, {r0}
  100224:	e9204000 	stmdb	r0!, {lr}
  100228:	e1a0e000 	mov	lr, r0
  10022c:	e8bd0001 	ldmia	sp!, {r0}
  100230:	e94e7fff 	stmdb	lr, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}^
  100234:	e1a00000 	nop			(mov r0,r0)
  100238:	e24ee03c 	sub	lr, lr, #60	; 0x3c
  10023c:	e14f0000 	mrs	r0, SPSR
  100240:	e92e0001 	stmdb	lr!, {r0}
  100244:	e59f0064 	ldr	r0, [pc, #100]	; 1002b0 <.text+0x2b0>
  100248:	e5900000 	ldr	r0, [r0]
  10024c:	e92e0001 	stmdb	lr!, {r0}
  100250:	e59f005c 	ldr	r0, [pc, #92]	; 1002b4 <.text+0x2b4>
  100254:	e5900000 	ldr	r0, [r0]
  100258:	e580e000 	str	lr, [r0]
  10025c:	e59f4044 	ldr	r4, [pc, #68]	; 1002a8 <.text+0x2a8>
  100260:	e59f5044 	ldr	r5, [pc, #68]	; 1002ac <.text+0x2ac>
  100264:	e5943000 	ldr	r3, [r4]
  100268:	e5953000 	ldr	r3, [r5]
  10026c:	eb000654 	bl	101bc4 <__vTaskSwitchContext_from_arm>
  100270:	e59f003c 	ldr	r0, [pc, #60]	; 1002b4 <.text+0x2b4>
  100274:	e5900000 	ldr	r0, [r0]
  100278:	e590e000 	ldr	lr, [r0]
  10027c:	e59f002c 	ldr	r0, [pc, #44]	; 1002b0 <.text+0x2b0>
  100280:	e8be0002 	ldmia	lr!, {r1}
  100284:	e5801000 	str	r1, [r0]
  100288:	e8be0001 	ldmia	lr!, {r0}
  10028c:	e169f000 	msr	SPSR_fc, r0
  100290:	e8de7fff 	ldmia	lr, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}^
  100294:	e1a00000 	nop			(mov r0,r0)
  100298:	e59ee03c 	ldr	lr, [lr, #60]
  10029c:	e25ef004 	subs	pc, lr, #4	; 0x4
  1002a0:	e5943000 	ldr	r3, [r4]
  1002a4:	e5953000 	ldr	r3, [r5]
  1002a8:	00200058 	eoreq	r0, r0, r8, asr r0
  1002ac:	002000a4 	eoreq	r0, r0, r4, lsr #1
  1002b0:	00200058 	eoreq	r0, r0, r8, asr r0
  1002b4:	002000a4 	eoreq	r0, r0, r4, lsr #1

001002b8 <vPreemptiveTick>:
  1002b8:	e92d0001 	stmdb	sp!, {r0}
  1002bc:	e94d2000 	stmdb	sp, {sp}^
  1002c0:	e1a00000 	nop			(mov r0,r0)
  1002c4:	e24dd004 	sub	sp, sp, #4	; 0x4
  1002c8:	e8bd0001 	ldmia	sp!, {r0}
  1002cc:	e9204000 	stmdb	r0!, {lr}
  1002d0:	e1a0e000 	mov	lr, r0
  1002d4:	e8bd0001 	ldmia	sp!, {r0}
  1002d8:	e94e7fff 	stmdb	lr, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}^
  1002dc:	e1a00000 	nop			(mov r0,r0)
  1002e0:	e24ee03c 	sub	lr, lr, #60	; 0x3c
  1002e4:	e14f0000 	mrs	r0, SPSR
  1002e8:	e92e0001 	stmdb	lr!, {r0}
  1002ec:	e59f007c 	ldr	r0, [pc, #124]	; 100370 <.text+0x370>
  1002f0:	e5900000 	ldr	r0, [r0]
  1002f4:	e92e0001 	stmdb	lr!, {r0}
  1002f8:	e59f0074 	ldr	r0, [pc, #116]	; 100374 <.text+0x374>
  1002fc:	e5900000 	ldr	r0, [r0]
  100300:	e580e000 	str	lr, [r0]
  100304:	e59f4058 	ldr	r4, [pc, #88]	; 100364 <.text+0x364>
  100308:	e59f5058 	ldr	r5, [pc, #88]	; 100368 <.text+0x368>
  10030c:	e5943000 	ldr	r3, [r4]
  100310:	e5953000 	ldr	r3, [r5]
  100314:	eb00062d 	bl	101bd0 <__vTaskIncrementTick_from_arm>
  100318:	eb000629 	bl	101bc4 <__vTaskSwitchContext_from_arm>
  10031c:	e59f3048 	ldr	r3, [pc, #72]	; 10036c <.text+0x36c>
  100320:	e5932008 	ldr	r2, [r3, #8]
  100324:	e2433ed3 	sub	r3, r3, #3376	; 0xd30
  100328:	e5832130 	str	r2, [r3, #304]
  10032c:	e59f0040 	ldr	r0, [pc, #64]	; 100374 <.text+0x374>
  100330:	e5900000 	ldr	r0, [r0]
  100334:	e590e000 	ldr	lr, [r0]
  100338:	e59f0030 	ldr	r0, [pc, #48]	; 100370 <.text+0x370>
  10033c:	e8be0002 	ldmia	lr!, {r1}
  100340:	e5801000 	str	r1, [r0]
  100344:	e8be0001 	ldmia	lr!, {r0}
  100348:	e169f000 	msr	SPSR_fc, r0
  10034c:	e8de7fff 	ldmia	lr, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}^
  100350:	e1a00000 	nop			(mov r0,r0)
  100354:	e59ee03c 	ldr	lr, [lr, #60]
  100358:	e25ef004 	subs	pc, lr, #4	; 0x4
  10035c:	e5943000 	ldr	r3, [r4]
  100360:	e5953000 	ldr	r3, [r5]
  100364:	00200058 	eoreq	r0, r0, r8, asr r0
  100368:	002000a4 	eoreq	r0, r0, r4, lsr #1
  10036c:	fffffd30 	swinv	0x00fffd30
  100370:	00200058 	eoreq	r0, r0, r8, asr r0
  100374:	002000a4 	eoreq	r0, r0, r4, lsr #1

00100378 <vPortDisableInterruptsFromThumb>:
  100378:	e92d0001 	stmdb	sp!, {r0}
  10037c:	e10f0000 	mrs	r0, CPSR
  100380:	e38000c0 	orr	r0, r0, #192	; 0xc0
  100384:	e129f000 	msr	CPSR_fc, r0
  100388:	e8bd0001 	ldmia	sp!, {r0}
  10038c:	e12fff1e 	bx	lr

00100390 <vPortEnterCritical>:
  100390:	e92d0001 	stmdb	sp!, {r0}
  100394:	e10f0000 	mrs	r0, CPSR
  100398:	e38000c0 	orr	r0, r0, #192	; 0xc0
  10039c:	e129f000 	msr	CPSR_fc, r0
  1003a0:	e8bd0001 	ldmia	sp!, {r0}
  1003a4:	e59f200c 	ldr	r2, [pc, #12]	; 1003b8 <.text+0x3b8>
  1003a8:	e5923000 	ldr	r3, [r2]
  1003ac:	e2833001 	add	r3, r3, #1	; 0x1
  1003b0:	e5823000 	str	r3, [r2]
  1003b4:	e12fff1e 	bx	lr
  1003b8:	00200058 	eoreq	r0, r0, r8, asr r0

001003bc <vPortExitCritical>:
  1003bc:	e59f2038 	ldr	r2, [pc, #56]	; 1003fc <.text+0x3fc>
  1003c0:	e5923000 	ldr	r3, [r2]
  1003c4:	e3530000 	cmp	r3, #0	; 0x0
  1003c8:	012fff1e 	bxeq	lr
  1003cc:	e5923000 	ldr	r3, [r2]
  1003d0:	e2433001 	sub	r3, r3, #1	; 0x1
  1003d4:	e5823000 	str	r3, [r2]
  1003d8:	e5923000 	ldr	r3, [r2]
  1003dc:	e3530000 	cmp	r3, #0	; 0x0
  1003e0:	112fff1e 	bxne	lr
  1003e4:	e92d0001 	stmdb	sp!, {r0}
  1003e8:	e10f0000 	mrs	r0, CPSR
  1003ec:	e3c000c0 	bic	r0, r0, #192	; 0xc0
  1003f0:	e129f000 	msr	CPSR_fc, r0
  1003f4:	e8bd0001 	ldmia	sp!, {r0}
  1003f8:	e12fff1e 	bx	lr
  1003fc:	00200058 	eoreq	r0, r0, r8, asr r0

00100400 <vUSB_ISR>:
  100400:	e92d0001 	stmdb	sp!, {r0}
  100404:	e94d2000 	stmdb	sp, {sp}^
  100408:	e1a00000 	nop			(mov r0,r0)
  10040c:	e24dd004 	sub	sp, sp, #4	; 0x4
  100410:	e8bd0001 	ldmia	sp!, {r0}
  100414:	e9204000 	stmdb	r0!, {lr}
  100418:	e1a0e000 	mov	lr, r0
  10041c:	e8bd0001 	ldmia	sp!, {r0}
  100420:	e94e7fff 	stmdb	lr, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}^
  100424:	e1a00000 	nop			(mov r0,r0)
  100428:	e24ee03c 	sub	lr, lr, #60	; 0x3c
  10042c:	e14f0000 	mrs	r0, SPSR
  100430:	e92e0001 	stmdb	lr!, {r0}
  100434:	e59f01f8 	ldr	r0, [pc, #504]	; 100634 <.text+0x634>
  100438:	e5900000 	ldr	r0, [r0]
  10043c:	e92e0001 	stmdb	lr!, {r0}
  100440:	e59f01f0 	ldr	r0, [pc, #496]	; 100638 <.text+0x638>
  100444:	e5900000 	ldr	r0, [r0]
  100448:	e580e000 	str	lr, [r0]
  10044c:	e59f31c4 	ldr	r3, [pc, #452]	; 100618 <.text+0x618>
  100450:	e5933000 	ldr	r3, [r3]
  100454:	e59f31c0 	ldr	r3, [pc, #448]	; 10061c <.text+0x61c>
  100458:	e5933000 	ldr	r3, [r3]
  10045c:	e24eb004 	sub	fp, lr, #4	; 0x4
  100460:	e59f21b8 	ldr	r2, [pc, #440]	; 100620 <.text+0x620>
  100464:	e5921000 	ldr	r1, [r2]
  100468:	e5923000 	ldr	r3, [r2]
  10046c:	e2833001 	add	r3, r3, #1	; 0x1
  100470:	e5823000 	str	r3, [r2]
  100474:	e59f21a8 	ldr	r2, [pc, #424]	; 100624 <.text+0x624>
  100478:	e592401c 	ldr	r4, [r2, #28]
  10047c:	e592c030 	ldr	ip, [r2, #48]
  100480:	e59fe1a0 	ldr	lr, [pc, #416]	; 100628 <.text+0x628>
  100484:	e5923018 	ldr	r3, [r2, #24]
  100488:	e2011003 	and	r1, r1, #3	; 0x3
  10048c:	e1a01201 	mov	r1, r1, lsl #4
  100490:	e1a0082c 	mov	r0, ip, lsr #16
  100494:	e1a05a80 	mov	r5, r0, lsl #21
  100498:	e31c0006 	tst	ip, #6	; 0x6
  10049c:	e081000e 	add	r0, r1, lr
  1004a0:	e3833a01 	orr	r3, r3, #4096	; 0x1000
  1004a4:	e580c004 	str	ip, [r0, #4]
  1004a8:	e58d0000 	str	r0, [sp]
  1004ac:	e781400e 	str	r4, [r1, lr]
  1004b0:	e5823020 	str	r3, [r2, #32]
  1004b4:	e1a05aa5 	mov	r5, r5, lsr #21
  1004b8:	13a00000 	movne	r0, #0	; 0x0
  1004bc:	1a000005 	bne	1004d8 <vUSB_ISR+0xd8>
  1004c0:	ea000029 	b	10056c <vUSB_ISR+0x16c>
  1004c4:	e59f3158 	ldr	r3, [pc, #344]	; 100624 <.text+0x624>
  1004c8:	e5932050 	ldr	r2, [r3, #80]
  1004cc:	e59d3000 	ldr	r3, [sp]
  1004d0:	e0813003 	add	r3, r1, r3
  1004d4:	e5c32008 	strb	r2, [r3, #8]
  1004d8:	e20010ff 	and	r1, r0, #255	; 0xff
  1004dc:	e1510005 	cmp	r1, r5
  1004e0:	e2800001 	add	r0, r0, #1	; 0x1
  1004e4:	3afffff6 	bcc	1004c4 <vUSB_ISR+0xc4>
  1004e8:	e59f2134 	ldr	r2, [pc, #308]	; 100624 <.text+0x624>
  1004ec:	e5923030 	ldr	r3, [r2, #48]
  1004f0:	e3130004 	tst	r3, #4	; 0x4
  1004f4:	05923030 	ldreq	r3, [r2, #48]
  1004f8:	03c33002 	biceq	r3, r3, #2	; 0x2
  1004fc:	05823030 	streq	r3, [r2, #48]
  100500:	0a000015 	beq	10055c <vUSB_ISR+0x15c>
  100504:	e3550000 	cmp	r5, #0	; 0x0
  100508:	0a00000a 	beq	100538 <vUSB_ISR+0x138>
  10050c:	e59d3000 	ldr	r3, [sp]
  100510:	e1d330d8 	ldrsb	r3, [r3, #8]
  100514:	e3530000 	cmp	r3, #0	; 0x0
  100518:	aa000006 	bge	100538 <vUSB_ISR+0x138>
  10051c:	e5923030 	ldr	r3, [r2, #48]
  100520:	e3833080 	orr	r3, r3, #128	; 0x80
  100524:	e5823030 	str	r3, [r2, #48]
  100528:	e59f30f4 	ldr	r3, [pc, #244]	; 100624 <.text+0x624>
  10052c:	e5933030 	ldr	r3, [r3, #48]
  100530:	e3130080 	tst	r3, #128	; 0x80
  100534:	0afffffb 	beq	100528 <vUSB_ISR+0x128>
  100538:	e59f20e4 	ldr	r2, [pc, #228]	; 100624 <.text+0x624>
  10053c:	e5923030 	ldr	r3, [r2, #48]
  100540:	e3c33004 	bic	r3, r3, #4	; 0x4
  100544:	e5823030 	str	r3, [r2, #48]
  100548:	e59f30d4 	ldr	r3, [pc, #212]	; 100624 <.text+0x624>
  10054c:	e5933030 	ldr	r3, [r3, #48]
  100550:	e3130004 	tst	r3, #4	; 0x4
  100554:	0a000004 	beq	10056c <vUSB_ISR+0x16c>
  100558:	eafffffa 	b	100548 <vUSB_ISR+0x148>
  10055c:	e59f30c0 	ldr	r3, [pc, #192]	; 100624 <.text+0x624>
  100560:	e5933030 	ldr	r3, [r3, #48]
  100564:	e3130002 	tst	r3, #2	; 0x2
  100568:	1afffffb 	bne	10055c <vUSB_ISR+0x15c>
  10056c:	e59fe0b0 	ldr	lr, [pc, #176]	; 100624 <.text+0x624>
  100570:	e59e3034 	ldr	r3, [lr, #52]
  100574:	e3130042 	tst	r3, #66	; 0x42
  100578:	13a03002 	movne	r3, #2	; 0x2
  10057c:	158e3014 	strne	r3, [lr, #20]
  100580:	e59e3030 	ldr	r3, [lr, #48]
  100584:	e3c33009 	bic	r3, r3, #9	; 0x9
  100588:	e58e3030 	str	r3, [lr, #48]
  10058c:	e59e3034 	ldr	r3, [lr, #52]
  100590:	e3c3300d 	bic	r3, r3, #13	; 0xd
  100594:	e58e3034 	str	r3, [lr, #52]
  100598:	e59e3038 	ldr	r3, [lr, #56]
  10059c:	e3c3304f 	bic	r3, r3, #79	; 0x4f
  1005a0:	e58e3038 	str	r3, [lr, #56]
  1005a4:	e59ec03c 	ldr	ip, [lr, #60]
  1005a8:	e59f307c 	ldr	r3, [pc, #124]	; 10062c <.text+0x62c>
  1005ac:	e3ccc04f 	bic	ip, ip, #79	; 0x4f
  1005b0:	e5930000 	ldr	r0, [r3]
  1005b4:	e3a02000 	mov	r2, #0	; 0x0
  1005b8:	e1a0100d 	mov	r1, sp
  1005bc:	e58ec03c 	str	ip, [lr, #60]
  1005c0:	eb000585 	bl	101bdc <__xQueueSendFromISR_from_arm>
  1005c4:	e59f3064 	ldr	r3, [pc, #100]	; 100630 <.text+0x630>
  1005c8:	e3a02000 	mov	r2, #0	; 0x0
  1005cc:	e31000ff 	tst	r0, #255	; 0xff
  1005d0:	e5832130 	str	r2, [r3, #304]
  1005d4:	1b00057a 	blne	101bc4 <__vTaskSwitchContext_from_arm>
  1005d8:	e59f0058 	ldr	r0, [pc, #88]	; 100638 <.text+0x638>
  1005dc:	e5900000 	ldr	r0, [r0]
  1005e0:	e590e000 	ldr	lr, [r0]
  1005e4:	e59f0048 	ldr	r0, [pc, #72]	; 100634 <.text+0x634>
  1005e8:	e8be0002 	ldmia	lr!, {r1}
  1005ec:	e5801000 	str	r1, [r0]
  1005f0:	e8be0001 	ldmia	lr!, {r0}
  1005f4:	e169f000 	msr	SPSR_fc, r0
  1005f8:	e8de7fff 	ldmia	lr, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}^
  1005fc:	e1a00000 	nop			(mov r0,r0)
  100600:	e59ee03c 	ldr	lr, [lr, #60]
  100604:	e25ef004 	subs	pc, lr, #4	; 0x4
  100608:	e59f3008 	ldr	r3, [pc, #8]	; 100618 <.text+0x618>
  10060c:	e5933000 	ldr	r3, [r3]
  100610:	e59f3004 	ldr	r3, [pc, #4]	; 10061c <.text+0x61c>
  100614:	e5933000 	ldr	r3, [r3]
  100618:	00200058 	eoreq	r0, r0, r8, asr r0
  10061c:	002000a4 	eoreq	r0, r0, r4, lsr #1
  100620:	00200060 	eoreq	r0, r0, r0, rrx
  100624:	fffb0000 	swinv	0x00fb0000
  100628:	00200064 	eoreq	r0, r0, r4, rrx
  10062c:	0020005c 	eoreq	r0, r0, ip, asr r0
  100630:	fffff000 	swinv	0x00fff000
  100634:	00200058 	eoreq	r0, r0, r8, asr r0
  100638:	002000a4 	eoreq	r0, r0, r4, lsr #1

0010063c <main>:
  10063c:	b570      	push	{r4, r5, r6, lr}
  10063e:	4b1e      	ldr	r3, [pc, #120]	(1006b8 <.text+0x6b8>)
  100640:	2500      	mov	r5, #0
  100642:	b082      	sub	sp, #8
  100644:	635d      	str	r5, [r3, #52]
  100646:	481d      	ldr	r0, [pc, #116]	(1006bc <.text+0x6bc>)
  100648:	491d      	ldr	r1, [pc, #116]	(1006c0 <.text+0x6c0>)
  10064a:	f87bf000 	bl	100744 <AT91F_PMC_EnablePeriphClock>
  10064e:	481d      	ldr	r0, [pc, #116]	(1006c4 <.text+0x6c4>)
  100650:	2101      	mov	r1, #1
  100652:	f879f000 	bl	100748 <AT91F_RSTSetMode>
  100656:	fe09f000 	bl	10126c <Init_LEDs>
  10065a:	2296      	mov	r2, #150
  10065c:	2401      	mov	r4, #1
  10065e:	491a      	ldr	r1, [pc, #104]	(1006c8 <.text+0x6c8>)
  100660:	0052      	lsl	r2, r2, #1
  100662:	2300      	mov	r3, #0
  100664:	4819      	ldr	r0, [pc, #100]	(1006cc <.text+0x6cc>)
  100666:	9400      	str	r4, [sp, #0]
  100668:	9501      	str	r5, [sp, #4]
  10066a:	fa3bf000 	bl	100ae4 <xTaskCreate>
  10066e:	22af      	mov	r2, #175
  100670:	4917      	ldr	r1, [pc, #92]	(1006d0 <.text+0x6d0>)
  100672:	0092      	lsl	r2, r2, #2
  100674:	2300      	mov	r3, #0
  100676:	4817      	ldr	r0, [pc, #92]	(1006d4 <.text+0x6d4>)
  100678:	9400      	str	r4, [sp, #0]
  10067a:	9501      	str	r5, [sp, #4]
  10067c:	fa32f000 	bl	100ae4 <xTaskCreate>
  100680:	4e15      	ldr	r6, [pc, #84]	(1006d8 <.text+0x6d8>)
  100682:	2264      	mov	r2, #100
  100684:	1c31      	mov	r1, r6		(add r1, r6, #0)
  100686:	2300      	mov	r3, #0
  100688:	4814      	ldr	r0, [pc, #80]	(1006dc <.text+0x6dc>)
  10068a:	9400      	str	r4, [sp, #0]
  10068c:	9501      	str	r5, [sp, #4]
  10068e:	fa29f000 	bl	100ae4 <xTaskCreate>
  100692:	1c31      	mov	r1, r6		(add r1, r6, #0)
  100694:	2264      	mov	r2, #100
  100696:	2300      	mov	r3, #0
  100698:	4811      	ldr	r0, [pc, #68]	(1006e0 <.text+0x6e0>)
  10069a:	9400      	str	r4, [sp, #0]
  10069c:	9501      	str	r5, [sp, #4]
  10069e:	fa21f000 	bl	100ae4 <xTaskCreate>
  1006a2:	fae5f000 	bl	100c70 <vTaskStartScheduler>
  1006a6:	2004      	mov	r0, #4
  1006a8:	fdf0f000 	bl	10128c <Toggle_LED>
  1006ac:	4b0d      	ldr	r3, [pc, #52]	(1006e4 <.text+0x6e4>)
  1006ae:	3b01      	sub	r3, #1
  1006b0:	2b00      	cmp	r3, #0
  1006b2:	d1fc      	bne	1006ae <main+0x72>
  1006b4:	e7f7      	b	1006a6 <main+0x6a>
  1006b6:	0000      	lsl	r0, r0, #0
  1006b8:	fffff0fc 	bl	1fd6ba <PMC_PLLR_Val+0x6bab5>
  1006bc:	fc00      	second half of BL instruction 0xfc00
  1006be:	ffff      	second half of BL instruction 0xffff
  1006c0:	0044      	lsl	r4, r0, #1
  1006c2:	4000      	and	r0, r0
  1006c4:	fd00      	second half of BL instruction 0xfd00
  1006c6:	ffff      	second half of BL instruction 0xffff
  1006c8:	1c08      	mov	r0, r1		(add r0, r1, #0)
  1006ca:	0010      	lsl	r0, r2, #0
  1006cc:	14dd      	asr	r5, r3, #19
  1006ce:	0010      	lsl	r0, r2, #0
  1006d0:	1c0c      	mov	r4, r1		(add r4, r1, #0)
  1006d2:	0010      	lsl	r0, r2, #0
  1006d4:	12d9      	asr	r1, r3, #11
  1006d6:	0010      	lsl	r0, r2, #0
  1006d8:	1c18      	mov	r0, r3		(add r0, r3, #0)
  1006da:	0010      	lsl	r0, r2, #0
  1006dc:	06f9      	lsl	r1, r7, #27
  1006de:	0010      	lsl	r0, r2, #0
  1006e0:	06e9      	lsl	r1, r5, #27
  1006e2:	0010      	lsl	r0, r2, #0
  1006e4:	8480      	strh	r0, [r0, #36]
  1006e6:	001e      	lsl	r6, r3, #0

001006e8 <StatusLED2>:
  1006e8:	b500      	push	{lr}
  1006ea:	20fa      	mov	r0, #250
  1006ec:	f900f000 	bl	1008f0 <vTaskDelay>
  1006f0:	2004      	mov	r0, #4
  1006f2:	fdcbf000 	bl	10128c <Toggle_LED>
  1006f6:	e7f8      	b	1006ea <StatusLED2+0x2>

001006f8 <StatusLED1>:
  1006f8:	b500      	push	{lr}
  1006fa:	207d      	mov	r0, #125
  1006fc:	f8f8f000 	bl	1008f0 <vTaskDelay>
  100700:	2002      	mov	r0, #2
  100702:	fdc3f000 	bl	10128c <Toggle_LED>
  100706:	e7f8      	b	1006fa <StatusLED1+0x2>

00100708 <AT91F_AIC_ConfigureIt>:
  100708:	b5f0      	push	{r4, r5, r6, r7, lr}
  10070a:	008d      	lsl	r5, r1, #2
  10070c:	182d      	add	r5, r5, r0
  10070e:	1d2e      	add	r6, r5, #4
  100710:	6ff4      	ldr	r4, [r6, #124]
  100712:	9f05      	ldr	r7, [sp, #20]
  100714:	46a4      	mov	ip, r4
  100716:	2401      	mov	r4, #1
  100718:	408c      	lsl	r4, r1
  10071a:	30fc      	add	r0, #252
  10071c:	4313      	orr	r3, r2
  10071e:	6284      	str	r4, [r0, #40]
  100720:	67f7      	str	r7, [r6, #124]
  100722:	602b      	str	r3, [r5, #0]
  100724:	62c4      	str	r4, [r0, #44]
  100726:	4660      	mov	r0, ip
  100728:	bcf0      	pop	{r4, r5, r6, r7}
  10072a:	bc02      	pop	{r1}
  10072c:	4708      	bx	r1
  10072e:	46c0      	nop			(mov r8, r8)

00100730 <AT91F_PIO_CfgOutput>:
  100730:	6001      	str	r1, [r0, #0]
  100732:	6101      	str	r1, [r0, #16]
  100734:	4770      	bx	lr
  100736:	46c0      	nop			(mov r8, r8)

00100738 <AT91F_PIO_GetInput>:
  100738:	6bc0      	ldr	r0, [r0, #60]
  10073a:	4770      	bx	lr

0010073c <AT91F_PIO_SetOutput>:
  10073c:	6301      	str	r1, [r0, #48]
  10073e:	4770      	bx	lr

00100740 <AT91F_PIO_ClearOutput>:
  100740:	6341      	str	r1, [r0, #52]
  100742:	4770      	bx	lr

00100744 <AT91F_PMC_EnablePeriphClock>:
  100744:	6101      	str	r1, [r0, #16]
  100746:	4770      	bx	lr

00100748 <AT91F_RSTSetMode>:
  100748:	23a5      	mov	r3, #165
  10074a:	061b      	lsl	r3, r3, #24
  10074c:	4319      	orr	r1, r3
  10074e:	6081      	str	r1, [r0, #8]
  100750:	4770      	bx	lr
  100752:	46c0      	nop			(mov r8, r8)

00100754 <vTaskSuspendAll>:
  100754:	b500      	push	{lr}
  100756:	fa47f001 	bl	101be8 <__vPortEnterCritical_from_thumb>
  10075a:	4a04      	ldr	r2, [pc, #16]	(10076c <.text+0x76c>)
  10075c:	6813      	ldr	r3, [r2, #0]
  10075e:	3301      	add	r3, #1
  100760:	6013      	str	r3, [r2, #0]
  100762:	fa45f001 	bl	101bf0 <__vPortExitCritical_from_thumb>
  100766:	bc01      	pop	{r0}
  100768:	4700      	bx	r0
  10076a:	0000      	lsl	r0, r0, #0
  10076c:	00b8      	lsl	r0, r7, #2
  10076e:	0020      	lsl	r0, r4, #0

00100770 <vTaskIncrementTick>:
  100770:	b530      	push	{r4, r5, lr}
  100772:	4b23      	ldr	r3, [pc, #140]	(100800 <.text+0x800>)
  100774:	681b      	ldr	r3, [r3, #0]
  100776:	2b00      	cmp	r3, #0
  100778:	d13a      	bne	1007f0 <vTaskIncrementTick+0x80>
  10077a:	4b22      	ldr	r3, [pc, #136]	(100804 <.text+0x804>)
  10077c:	681a      	ldr	r2, [r3, #0]
  10077e:	3201      	add	r2, #1
  100780:	601a      	str	r2, [r3, #0]
  100782:	681b      	ldr	r3, [r3, #0]
  100784:	2b00      	cmp	r3, #0
  100786:	d128      	bne	1007da <vTaskIncrementTick+0x6a>
  100788:	4a1f      	ldr	r2, [pc, #124]	(100808 <.text+0x808>)
  10078a:	4920      	ldr	r1, [pc, #128]	(10080c <.text+0x80c>)
  10078c:	6808      	ldr	r0, [r1, #0]
  10078e:	6813      	ldr	r3, [r2, #0]
  100790:	600b      	str	r3, [r1, #0]
  100792:	6010      	str	r0, [r2, #0]
  100794:	4a1e      	ldr	r2, [pc, #120]	(100810 <.text+0x810>)
  100796:	6813      	ldr	r3, [r2, #0]
  100798:	3301      	add	r3, #1
  10079a:	6013      	str	r3, [r2, #0]
  10079c:	e01d      	b	1007da <vTaskIncrementTick+0x6a>
  10079e:	4b19      	ldr	r3, [pc, #100]	(100804 <.text+0x804>)
  1007a0:	681a      	ldr	r2, [r3, #0]
  1007a2:	6863      	ldr	r3, [r4, #4]
  1007a4:	429a      	cmp	r2, r3
  1007a6:	d327      	bcc	1007f8 <vTaskIncrementTick+0x88>
  1007a8:	1d25      	add	r5, r4, #4
  1007aa:	1c28      	mov	r0, r5		(add r0, r5, #0)
  1007ac:	fc6af000 	bl	101084 <vListRemove>
  1007b0:	6aa3      	ldr	r3, [r4, #40]
  1007b2:	2b00      	cmp	r3, #0
  1007b4:	d003      	beq	1007be <vTaskIncrementTick+0x4e>
  1007b6:	1c20      	mov	r0, r4		(add r0, r4, #0)
  1007b8:	3018      	add	r0, #24
  1007ba:	fc63f000 	bl	101084 <vListRemove>
  1007be:	4915      	ldr	r1, [pc, #84]	(100814 <.text+0x814>)
  1007c0:	6ae2      	ldr	r2, [r4, #44]
  1007c2:	680b      	ldr	r3, [r1, #0]
  1007c4:	429a      	cmp	r2, r3
  1007c6:	d900      	bls	1007ca <vTaskIncrementTick+0x5a>
  1007c8:	600a      	str	r2, [r1, #0]
  1007ca:	0090      	lsl	r0, r2, #2
  1007cc:	1880      	add	r0, r0, r2
  1007ce:	4b12      	ldr	r3, [pc, #72]	(100818 <.text+0x818>)
  1007d0:	0080      	lsl	r0, r0, #2
  1007d2:	18c0      	add	r0, r0, r3
  1007d4:	1c29      	mov	r1, r5		(add r1, r5, #0)
  1007d6:	fc2df000 	bl	101034 <vListInsertEnd>
  1007da:	4a0c      	ldr	r2, [pc, #48]	(10080c <.text+0x80c>)
  1007dc:	6813      	ldr	r3, [r2, #0]
  1007de:	681b      	ldr	r3, [r3, #0]
  1007e0:	2b00      	cmp	r3, #0
  1007e2:	d009      	beq	1007f8 <vTaskIncrementTick+0x88>
  1007e4:	6813      	ldr	r3, [r2, #0]
  1007e6:	68db      	ldr	r3, [r3, #12]
  1007e8:	68dc      	ldr	r4, [r3, #12]
  1007ea:	2c00      	cmp	r4, #0
  1007ec:	d1d7      	bne	10079e <vTaskIncrementTick+0x2e>
  1007ee:	e003      	b	1007f8 <vTaskIncrementTick+0x88>
  1007f0:	4a0a      	ldr	r2, [pc, #40]	(10081c <.text+0x81c>)
  1007f2:	6813      	ldr	r3, [r2, #0]
  1007f4:	3301      	add	r3, #1
  1007f6:	6013      	str	r3, [r2, #0]
  1007f8:	bc30      	pop	{r4, r5}
  1007fa:	bc01      	pop	{r0}
  1007fc:	4700      	bx	r0
  1007fe:	0000      	lsl	r0, r0, #0
  100800:	00b8      	lsl	r0, r7, #2
  100802:	0020      	lsl	r0, r4, #0
  100804:	00ac      	lsl	r4, r5, #2
  100806:	0020      	lsl	r0, r4, #0
  100808:	00f8      	lsl	r0, r7, #3
  10080a:	0020      	lsl	r0, r4, #0
  10080c:	00fc      	lsl	r4, r7, #3
  10080e:	0020      	lsl	r0, r4, #0
  100810:	00b0      	lsl	r0, r6, #2
  100812:	0020      	lsl	r0, r4, #0
  100814:	00b4      	lsl	r4, r6, #2
  100816:	0020      	lsl	r0, r4, #0
  100818:	0128      	lsl	r0, r5, #4
  10081a:	0020      	lsl	r0, r4, #0
  10081c:	00bc      	lsl	r4, r7, #2
  10081e:	0020      	lsl	r0, r4, #0

00100820 <xTaskResumeAll>:
  100820:	b570      	push	{r4, r5, r6, lr}
  100822:	f9e1f001 	bl	101be8 <__vPortEnterCritical_from_thumb>
  100826:	4b2a      	ldr	r3, [pc, #168]	(1008d0 <.text+0x8d0>)
  100828:	681a      	ldr	r2, [r3, #0]
  10082a:	3a01      	sub	r2, #1
  10082c:	601a      	str	r2, [r3, #0]
  10082e:	681b      	ldr	r3, [r3, #0]
  100830:	2b00      	cmp	r3, #0
  100832:	d145      	bne	1008c0 <xTaskResumeAll+0xa0>
  100834:	4b27      	ldr	r3, [pc, #156]	(1008d4 <.text+0x8d4>)
  100836:	681b      	ldr	r3, [r3, #0]
  100838:	2b00      	cmp	r3, #0
  10083a:	d041      	beq	1008c0 <xTaskResumeAll+0xa0>
  10083c:	2600      	mov	r6, #0
  10083e:	e01c      	b	10087a <xTaskResumeAll+0x5a>
  100840:	1c20      	mov	r0, r4		(add r0, r4, #0)
  100842:	3018      	add	r0, #24
  100844:	1d25      	add	r5, r4, #4
  100846:	fc1df000 	bl	101084 <vListRemove>
  10084a:	1c28      	mov	r0, r5		(add r0, r5, #0)
  10084c:	fc1af000 	bl	101084 <vListRemove>
  100850:	4921      	ldr	r1, [pc, #132]	(1008d8 <.text+0x8d8>)
  100852:	6ae2      	ldr	r2, [r4, #44]
  100854:	680b      	ldr	r3, [r1, #0]
  100856:	429a      	cmp	r2, r3
  100858:	d900      	bls	10085c <xTaskResumeAll+0x3c>
  10085a:	600a      	str	r2, [r1, #0]
  10085c:	0090      	lsl	r0, r2, #2
  10085e:	1880      	add	r0, r0, r2
  100860:	4b1e      	ldr	r3, [pc, #120]	(1008dc <.text+0x8dc>)
  100862:	0080      	lsl	r0, r0, #2
  100864:	18c0      	add	r0, r0, r3
  100866:	1c29      	mov	r1, r5		(add r1, r5, #0)
  100868:	fbe4f000 	bl	101034 <vListInsertEnd>
  10086c:	4b1c      	ldr	r3, [pc, #112]	(1008e0 <.text+0x8e0>)
  10086e:	681b      	ldr	r3, [r3, #0]
  100870:	6ae2      	ldr	r2, [r4, #44]
  100872:	6adb      	ldr	r3, [r3, #44]
  100874:	429a      	cmp	r2, r3
  100876:	d300      	bcc	10087a <xTaskResumeAll+0x5a>
  100878:	2601      	mov	r6, #1
  10087a:	4a1a      	ldr	r2, [pc, #104]	(1008e4 <.text+0x8e4>)
  10087c:	6813      	ldr	r3, [r2, #0]
  10087e:	2b00      	cmp	r3, #0
  100880:	d003      	beq	10088a <xTaskResumeAll+0x6a>
  100882:	68d3      	ldr	r3, [r2, #12]
  100884:	68dc      	ldr	r4, [r3, #12]
  100886:	2c00      	cmp	r4, #0
  100888:	d1da      	bne	100840 <xTaskResumeAll+0x20>
  10088a:	4b17      	ldr	r3, [pc, #92]	(1008e8 <.text+0x8e8>)
  10088c:	681b      	ldr	r3, [r3, #0]
  10088e:	2b00      	cmp	r3, #0
  100890:	d105      	bne	10089e <xTaskResumeAll+0x7e>
  100892:	e009      	b	1008a8 <xTaskResumeAll+0x88>
  100894:	ff6cf7ff 	bl	100770 <vTaskIncrementTick>
  100898:	6823      	ldr	r3, [r4, #0]
  10089a:	3b01      	sub	r3, #1
  10089c:	6023      	str	r3, [r4, #0]
  10089e:	4c12      	ldr	r4, [pc, #72]	(1008e8 <.text+0x8e8>)
  1008a0:	6823      	ldr	r3, [r4, #0]
  1008a2:	2b00      	cmp	r3, #0
  1008a4:	d1f6      	bne	100894 <xTaskResumeAll+0x74>
  1008a6:	e005      	b	1008b4 <xTaskResumeAll+0x94>
  1008a8:	2e01      	cmp	r6, #1
  1008aa:	d003      	beq	1008b4 <xTaskResumeAll+0x94>
  1008ac:	4b0f      	ldr	r3, [pc, #60]	(1008ec <.text+0x8ec>)
  1008ae:	681b      	ldr	r3, [r3, #0]
  1008b0:	2b01      	cmp	r3, #1
  1008b2:	d105      	bne	1008c0 <xTaskResumeAll+0xa0>
  1008b4:	4a0d      	ldr	r2, [pc, #52]	(1008ec <.text+0x8ec>)
  1008b6:	2300      	mov	r3, #0
  1008b8:	6013      	str	r3, [r2, #0]
  1008ba:	df00      	swi	0
  1008bc:	2401      	mov	r4, #1
  1008be:	e000      	b	1008c2 <xTaskResumeAll+0xa2>
  1008c0:	2400      	mov	r4, #0
  1008c2:	f995f001 	bl	101bf0 <__vPortExitCritical_from_thumb>
  1008c6:	1c20      	mov	r0, r4		(add r0, r4, #0)
  1008c8:	bc70      	pop	{r4, r5, r6}
  1008ca:	bc02      	pop	{r1}
  1008cc:	4708      	bx	r1
  1008ce:	0000      	lsl	r0, r0, #0
  1008d0:	00b8      	lsl	r0, r7, #2
  1008d2:	0020      	lsl	r0, r4, #0
  1008d4:	00c0      	lsl	r0, r0, #3
  1008d6:	0020      	lsl	r0, r4, #0
  1008d8:	00b4      	lsl	r4, r6, #2
  1008da:	0020      	lsl	r0, r4, #0
  1008dc:	0128      	lsl	r0, r5, #4
  1008de:	0020      	lsl	r0, r4, #0
  1008e0:	00a4      	lsl	r4, r4, #2
  1008e2:	0020      	lsl	r0, r4, #0
  1008e4:	00e4      	lsl	r4, r4, #3
  1008e6:	0020      	lsl	r0, r4, #0
  1008e8:	00bc      	lsl	r4, r7, #2
  1008ea:	0020      	lsl	r0, r4, #0
  1008ec:	00a8      	lsl	r0, r5, #2
  1008ee:	0020      	lsl	r0, r4, #0

001008f0 <vTaskDelay>:
  1008f0:	b570      	push	{r4, r5, r6, lr}
  1008f2:	1c06      	mov	r6, r0		(add r6, r0, #0)
  1008f4:	2800      	cmp	r0, #0
  1008f6:	d01a      	beq	10092e <vTaskDelay+0x3e>
  1008f8:	ff2cf7ff 	bl	100754 <vTaskSuspendAll>
  1008fc:	4d0e      	ldr	r5, [pc, #56]	(100938 <.text+0x938>)
  1008fe:	682c      	ldr	r4, [r5, #0]
  100900:	19a4      	add	r4, r4, r6
  100902:	4e0e      	ldr	r6, [pc, #56]	(10093c <.text+0x93c>)
  100904:	6830      	ldr	r0, [r6, #0]
  100906:	3004      	add	r0, #4
  100908:	fbbcf000 	bl	101084 <vListRemove>
  10090c:	6833      	ldr	r3, [r6, #0]
  10090e:	605c      	str	r4, [r3, #4]
  100910:	682b      	ldr	r3, [r5, #0]
  100912:	429c      	cmp	r4, r3
  100914:	d201      	bcs	10091a <vTaskDelay+0x2a>
  100916:	4b0a      	ldr	r3, [pc, #40]	(100940 <.text+0x940>)
  100918:	e000      	b	10091c <vTaskDelay+0x2c>
  10091a:	4b0a      	ldr	r3, [pc, #40]	(100944 <.text+0x944>)
  10091c:	6818      	ldr	r0, [r3, #0]
  10091e:	6831      	ldr	r1, [r6, #0]
  100920:	3104      	add	r1, #4
  100922:	fb95f000 	bl	101050 <vListInsert>
  100926:	ff7bf7ff 	bl	100820 <xTaskResumeAll>
  10092a:	2800      	cmp	r0, #0
  10092c:	d100      	bne	100930 <vTaskDelay+0x40>
  10092e:	df00      	swi	0
  100930:	bc70      	pop	{r4, r5, r6}
  100932:	bc01      	pop	{r0}
  100934:	4700      	bx	r0
  100936:	0000      	lsl	r0, r0, #0
  100938:	00ac      	lsl	r4, r5, #2
  10093a:	0020      	lsl	r0, r4, #0
  10093c:	00a4      	lsl	r4, r4, #2
  10093e:	0020      	lsl	r0, r4, #0
  100940:	00f8      	lsl	r0, r7, #3
  100942:	0020      	lsl	r0, r4, #0
  100944:	00fc      	lsl	r4, r7, #3
  100946:	0020      	lsl	r0, r4, #0

00100948 <vTaskSwitchContext>:
  100948:	b510      	push	{r4, lr}
  10094a:	4b24      	ldr	r3, [pc, #144]	(1009dc <.text+0x9dc>)
  10094c:	681b      	ldr	r3, [r3, #0]
  10094e:	2b00      	cmp	r3, #0
  100950:	d006      	beq	100960 <vTaskSwitchContext+0x18>
  100952:	4a23      	ldr	r2, [pc, #140]	(1009e0 <.text+0x9e0>)
  100954:	2301      	mov	r3, #1
  100956:	6013      	str	r3, [r2, #0]
  100958:	e03d      	b	1009d6 <vTaskSwitchContext+0x8e>
  10095a:	6803      	ldr	r3, [r0, #0]
  10095c:	3b01      	sub	r3, #1
  10095e:	6003      	str	r3, [r0, #0]
  100960:	4820      	ldr	r0, [pc, #128]	(1009e4 <.text+0x9e4>)
  100962:	6803      	ldr	r3, [r0, #0]
  100964:	009a      	lsl	r2, r3, #2
  100966:	18d2      	add	r2, r2, r3
  100968:	4c1f      	ldr	r4, [pc, #124]	(1009e8 <.text+0x9e8>)
  10096a:	0092      	lsl	r2, r2, #2
  10096c:	1912      	add	r2, r2, r4
  10096e:	6813      	ldr	r3, [r2, #0]
  100970:	2b00      	cmp	r3, #0
  100972:	d0f2      	beq	10095a <vTaskSwitchContext+0x12>
  100974:	6801      	ldr	r1, [r0, #0]
  100976:	6802      	ldr	r2, [r0, #0]
  100978:	0093      	lsl	r3, r2, #2
  10097a:	189b      	add	r3, r3, r2
  10097c:	009b      	lsl	r3, r3, #2
  10097e:	191b      	add	r3, r3, r4
  100980:	685b      	ldr	r3, [r3, #4]
  100982:	685a      	ldr	r2, [r3, #4]
  100984:	008b      	lsl	r3, r1, #2
  100986:	185b      	add	r3, r3, r1
  100988:	009b      	lsl	r3, r3, #2
  10098a:	191b      	add	r3, r3, r4
  10098c:	605a      	str	r2, [r3, #4]
  10098e:	6801      	ldr	r1, [r0, #0]
  100990:	6803      	ldr	r3, [r0, #0]
  100992:	009a      	lsl	r2, r3, #2
  100994:	18d2      	add	r2, r2, r3
  100996:	008b      	lsl	r3, r1, #2
  100998:	185b      	add	r3, r3, r1
  10099a:	009b      	lsl	r3, r3, #2
  10099c:	0092      	lsl	r2, r2, #2
  10099e:	191b      	add	r3, r3, r4
  1009a0:	1912      	add	r2, r2, r4
  1009a2:	685b      	ldr	r3, [r3, #4]
  1009a4:	3208      	add	r2, #8
  1009a6:	4293      	cmp	r3, r2
  1009a8:	d10c      	bne	1009c4 <vTaskSwitchContext+0x7c>
  1009aa:	6801      	ldr	r1, [r0, #0]
  1009ac:	6802      	ldr	r2, [r0, #0]
  1009ae:	0093      	lsl	r3, r2, #2
  1009b0:	189b      	add	r3, r3, r2
  1009b2:	009b      	lsl	r3, r3, #2
  1009b4:	191b      	add	r3, r3, r4
  1009b6:	685b      	ldr	r3, [r3, #4]
  1009b8:	685a      	ldr	r2, [r3, #4]
  1009ba:	008b      	lsl	r3, r1, #2
  1009bc:	185b      	add	r3, r3, r1
  1009be:	009b      	lsl	r3, r3, #2
  1009c0:	191b      	add	r3, r3, r4
  1009c2:	605a      	str	r2, [r3, #4]
  1009c4:	6802      	ldr	r2, [r0, #0]
  1009c6:	0093      	lsl	r3, r2, #2
  1009c8:	189b      	add	r3, r3, r2
  1009ca:	009b      	lsl	r3, r3, #2
  1009cc:	191b      	add	r3, r3, r4
  1009ce:	685b      	ldr	r3, [r3, #4]
  1009d0:	68da      	ldr	r2, [r3, #12]
  1009d2:	4b06      	ldr	r3, [pc, #24]	(1009ec <.text+0x9ec>)
  1009d4:	601a      	str	r2, [r3, #0]
  1009d6:	bc10      	pop	{r4}
  1009d8:	bc01      	pop	{r0}
  1009da:	4700      	bx	r0
  1009dc:	00b8      	lsl	r0, r7, #2
  1009de:	0020      	lsl	r0, r4, #0
  1009e0:	00a8      	lsl	r0, r5, #2
  1009e2:	0020      	lsl	r0, r4, #0
  1009e4:	00b4      	lsl	r4, r6, #2
  1009e6:	0020      	lsl	r0, r4, #0
  1009e8:	0128      	lsl	r0, r5, #4
  1009ea:	0020      	lsl	r0, r4, #0
  1009ec:	00a4      	lsl	r4, r4, #2
  1009ee:	0020      	lsl	r0, r4, #0

001009f0 <vTaskPlaceOnEventList>:
  1009f0:	b5f0      	push	{r4, r5, r6, r7, lr}
  1009f2:	4f0e      	ldr	r7, [pc, #56]	(100a2c <.text+0xa2c>)
  1009f4:	1c0e      	mov	r6, r1		(add r6, r1, #0)
  1009f6:	6839      	ldr	r1, [r7, #0]
  1009f8:	3118      	add	r1, #24
  1009fa:	fb29f000 	bl	101050 <vListInsert>
  1009fe:	4d0c      	ldr	r5, [pc, #48]	(100a30 <.text+0xa30>)
  100a00:	682c      	ldr	r4, [r5, #0]
  100a02:	6838      	ldr	r0, [r7, #0]
  100a04:	3004      	add	r0, #4
  100a06:	fb3df000 	bl	101084 <vListRemove>
  100a0a:	683b      	ldr	r3, [r7, #0]
  100a0c:	19a4      	add	r4, r4, r6
  100a0e:	605c      	str	r4, [r3, #4]
  100a10:	682b      	ldr	r3, [r5, #0]
  100a12:	429c      	cmp	r4, r3
  100a14:	d201      	bcs	100a1a <vTaskPlaceOnEventList+0x2a>
  100a16:	4b07      	ldr	r3, [pc, #28]	(100a34 <.text+0xa34>)
  100a18:	e000      	b	100a1c <vTaskPlaceOnEventList+0x2c>
  100a1a:	4b07      	ldr	r3, [pc, #28]	(100a38 <.text+0xa38>)
  100a1c:	6818      	ldr	r0, [r3, #0]
  100a1e:	6839      	ldr	r1, [r7, #0]
  100a20:	3104      	add	r1, #4
  100a22:	fb15f000 	bl	101050 <vListInsert>
  100a26:	bcf0      	pop	{r4, r5, r6, r7}
  100a28:	bc01      	pop	{r0}
  100a2a:	4700      	bx	r0
  100a2c:	00a4      	lsl	r4, r4, #2
  100a2e:	0020      	lsl	r0, r4, #0
  100a30:	00ac      	lsl	r4, r5, #2
  100a32:	0020      	lsl	r0, r4, #0
  100a34:	00f8      	lsl	r0, r7, #3
  100a36:	0020      	lsl	r0, r4, #0
  100a38:	00fc      	lsl	r4, r7, #3
  100a3a:	0020      	lsl	r0, r4, #0

00100a3c <xTaskRemoveFromEventList>:
  100a3c:	b530      	push	{r4, r5, lr}
  100a3e:	6803      	ldr	r3, [r0, #0]
  100a40:	2b00      	cmp	r3, #0
  100a42:	d101      	bne	100a48 <xTaskRemoveFromEventList+0xc>
  100a44:	2500      	mov	r5, #0
  100a46:	e001      	b	100a4c <xTaskRemoveFromEventList+0x10>
  100a48:	68c3      	ldr	r3, [r0, #12]
  100a4a:	68dd      	ldr	r5, [r3, #12]
  100a4c:	1c2c      	mov	r4, r5		(add r4, r5, #0)
  100a4e:	3418      	add	r4, #24
  100a50:	1c20      	mov	r0, r4		(add r0, r4, #0)
  100a52:	fb17f000 	bl	101084 <vListRemove>
  100a56:	4b11      	ldr	r3, [pc, #68]	(100a9c <.text+0xa9c>)
  100a58:	681b      	ldr	r3, [r3, #0]
  100a5a:	2b00      	cmp	r3, #0
  100a5c:	d10f      	bne	100a7e <xTaskRemoveFromEventList+0x42>
  100a5e:	1d2c      	add	r4, r5, #4
  100a60:	1c20      	mov	r0, r4		(add r0, r4, #0)
  100a62:	fb0ff000 	bl	101084 <vListRemove>
  100a66:	490e      	ldr	r1, [pc, #56]	(100aa0 <.text+0xaa0>)
  100a68:	6aea      	ldr	r2, [r5, #44]
  100a6a:	680b      	ldr	r3, [r1, #0]
  100a6c:	429a      	cmp	r2, r3
  100a6e:	d900      	bls	100a72 <xTaskRemoveFromEventList+0x36>
  100a70:	600a      	str	r2, [r1, #0]
  100a72:	0090      	lsl	r0, r2, #2
  100a74:	1880      	add	r0, r0, r2
  100a76:	4b0b      	ldr	r3, [pc, #44]	(100aa4 <.text+0xaa4>)
  100a78:	0080      	lsl	r0, r0, #2
  100a7a:	18c0      	add	r0, r0, r3
  100a7c:	e000      	b	100a80 <xTaskRemoveFromEventList+0x44>
  100a7e:	480a      	ldr	r0, [pc, #40]	(100aa8 <.text+0xaa8>)
  100a80:	1c21      	mov	r1, r4		(add r1, r4, #0)
  100a82:	fad7f000 	bl	101034 <vListInsertEnd>
  100a86:	4b09      	ldr	r3, [pc, #36]	(100aac <.text+0xaac>)
  100a88:	681b      	ldr	r3, [r3, #0]
  100a8a:	6aea      	ldr	r2, [r5, #44]
  100a8c:	6adb      	ldr	r3, [r3, #44]
  100a8e:	2000      	mov	r0, #0
  100a90:	429a      	cmp	r2, r3
  100a92:	d300      	bcc	100a96 <xTaskRemoveFromEventList+0x5a>
  100a94:	2001      	mov	r0, #1
  100a96:	bc30      	pop	{r4, r5}
  100a98:	bc02      	pop	{r1}
  100a9a:	4708      	bx	r1
  100a9c:	00b8      	lsl	r0, r7, #2
  100a9e:	0020      	lsl	r0, r4, #0
  100aa0:	00b4      	lsl	r4, r6, #2
  100aa2:	0020      	lsl	r0, r4, #0
  100aa4:	0128      	lsl	r0, r5, #4
  100aa6:	0020      	lsl	r0, r4, #0
  100aa8:	00e4      	lsl	r4, r4, #3
  100aaa:	0020      	lsl	r0, r4, #0
  100aac:	00a4      	lsl	r4, r4, #2
  100aae:	0020      	lsl	r0, r4, #0

00100ab0 <vTaskSetTimeOutState>:
  100ab0:	4b03      	ldr	r3, [pc, #12]	(100ac0 <.text+0xac0>)
  100ab2:	681b      	ldr	r3, [r3, #0]
  100ab4:	6003      	str	r3, [r0, #0]
  100ab6:	4b03      	ldr	r3, [pc, #12]	(100ac4 <.text+0xac4>)
  100ab8:	681b      	ldr	r3, [r3, #0]
  100aba:	6043      	str	r3, [r0, #4]
  100abc:	4770      	bx	lr
  100abe:	0000      	lsl	r0, r0, #0
  100ac0:	00b0      	lsl	r0, r6, #2
  100ac2:	0020      	lsl	r0, r4, #0
  100ac4:	00ac      	lsl	r4, r5, #2
  100ac6:	0020      	lsl	r0, r4, #0

00100ac8 <vTaskMissedYield>:
  100ac8:	4a01      	ldr	r2, [pc, #4]	(100ad0 <.text+0xad0>)
  100aca:	2301      	mov	r3, #1
  100acc:	6013      	str	r3, [r2, #0]
  100ace:	4770      	bx	lr
  100ad0:	00a8      	lsl	r0, r5, #2
  100ad2:	0020      	lsl	r0, r4, #0

00100ad4 <prvIdleTask>:
  100ad4:	4a02      	ldr	r2, [pc, #8]	(100ae0 <.text+0xae0>)
  100ad6:	6813      	ldr	r3, [r2, #0]
  100ad8:	2b01      	cmp	r3, #1
  100ada:	d9fc      	bls	100ad6 <prvIdleTask+0x2>
  100adc:	df00      	swi	0
  100ade:	e7fa      	b	100ad6 <prvIdleTask+0x2>
  100ae0:	0128      	lsl	r0, r5, #4
  100ae2:	0020      	lsl	r0, r4, #0

00100ae4 <xTaskCreate>:
  100ae4:	b5f0      	push	{r4, r5, r6, r7, lr}
  100ae6:	b084      	sub	sp, #16
  100ae8:	9002      	str	r0, [sp, #8]
  100aea:	0412      	lsl	r2, r2, #16
  100aec:	204c      	mov	r0, #76
  100aee:	9101      	str	r1, [sp, #4]
  100af0:	9300      	str	r3, [sp, #0]
  100af2:	9f09      	ldr	r7, [sp, #36]
  100af4:	0c15      	lsr	r5, r2, #16
  100af6:	fad5f000 	bl	1010a4 <pvPortMalloc>
  100afa:	1c06      	mov	r6, r0		(add r6, r0, #0)
  100afc:	2800      	cmp	r0, #0
  100afe:	d009      	beq	100b14 <xTaskCreate+0x30>
  100b00:	00ac      	lsl	r4, r5, #2
  100b02:	1c20      	mov	r0, r4		(add r0, r4, #0)
  100b04:	facef000 	bl	1010a4 <pvPortMalloc>
  100b08:	6330      	str	r0, [r6, #48]
  100b0a:	2800      	cmp	r0, #0
  100b0c:	d105      	bne	100b1a <xTaskCreate+0x36>
  100b0e:	1c30      	mov	r0, r6		(add r0, r6, #0)
  100b10:	fb22f000 	bl	101158 <vPortFree>
  100b14:	2001      	mov	r0, #1
  100b16:	4240      	neg	r0, r0
  100b18:	e089      	b	100c2e <xTaskCreate+0x14a>
  100b1a:	21a5      	mov	r1, #165
  100b1c:	1c22      	mov	r2, r4		(add r2, r4, #0)
  100b1e:	ff87f000 	bl	101a30 <memset>
  100b22:	1c33      	mov	r3, r6		(add r3, r6, #0)
  100b24:	3348      	add	r3, #72
  100b26:	1c30      	mov	r0, r6		(add r0, r6, #0)
  100b28:	801d      	strh	r5, [r3, #0]
  100b2a:	2210      	mov	r2, #16
  100b2c:	3038      	add	r0, #56
  100b2e:	9901      	ldr	r1, [sp, #4]
  100b30:	f806f001 	bl	101b40 <strncpy>
  100b34:	1c32      	mov	r2, r6		(add r2, r6, #0)
  100b36:	3247      	add	r2, #71
  100b38:	2300      	mov	r3, #0
  100b3a:	7013      	strb	r3, [r2, #0]
  100b3c:	2f04      	cmp	r7, #4
  100b3e:	d901      	bls	100b44 <xTaskCreate+0x60>
  100b40:	2404      	mov	r4, #4
  100b42:	e000      	b	100b46 <xTaskCreate+0x62>
  100b44:	1c3c      	mov	r4, r7		(add r4, r7, #0)
  100b46:	1d33      	add	r3, r6, #4
  100b48:	1c18      	mov	r0, r3		(add r0, r3, #0)
  100b4a:	62f4      	str	r4, [r6, #44]
  100b4c:	9303      	str	r3, [sp, #12]
  100b4e:	fa6df000 	bl	10102c <vListInitialiseItem>
  100b52:	1c30      	mov	r0, r6		(add r0, r6, #0)
  100b54:	3018      	add	r0, #24
  100b56:	fa69f000 	bl	10102c <vListInitialiseItem>
  100b5a:	2305      	mov	r3, #5
  100b5c:	1b1b      	sub	r3, r3, r4
  100b5e:	61b3      	str	r3, [r6, #24]
  100b60:	6136      	str	r6, [r6, #16]
  100b62:	6276      	str	r6, [r6, #36]
  100b64:	1c33      	mov	r3, r6		(add r3, r6, #0)
  100b66:	3348      	add	r3, #72
  100b68:	881b      	ldrh	r3, [r3, #0]
  100b6a:	6b30      	ldr	r0, [r6, #48]
  100b6c:	009b      	lsl	r3, r3, #2
  100b6e:	18c0      	add	r0, r0, r3
  100b70:	9a00      	ldr	r2, [sp, #0]
  100b72:	9902      	ldr	r1, [sp, #8]
  100b74:	3804      	sub	r0, #4
  100b76:	fb07f000 	bl	101188 <pxPortInitialiseStack>
  100b7a:	6030      	str	r0, [r6, #0]
  100b7c:	f834f001 	bl	101be8 <__vPortEnterCritical_from_thumb>
  100b80:	4a2d      	ldr	r2, [pc, #180]	(100c38 <.text+0xc38>)
  100b82:	6813      	ldr	r3, [r2, #0]
  100b84:	3301      	add	r3, #1
  100b86:	6013      	str	r3, [r2, #0]
  100b88:	6813      	ldr	r3, [r2, #0]
  100b8a:	2b01      	cmp	r3, #1
  100b8c:	d11c      	bne	100bc8 <xTaskCreate+0xe4>
  100b8e:	4b2b      	ldr	r3, [pc, #172]	(100c3c <.text+0xc3c>)
  100b90:	4c2b      	ldr	r4, [pc, #172]	(100c40 <.text+0xc40>)
  100b92:	601e      	str	r6, [r3, #0]
  100b94:	1c20      	mov	r0, r4		(add r0, r4, #0)
  100b96:	fa3df000 	bl	101014 <vListInitialise>
  100b9a:	4b2a      	ldr	r3, [pc, #168]	(100c44 <.text+0xc44>)
  100b9c:	3414      	add	r4, #20
  100b9e:	429c      	cmp	r4, r3
  100ba0:	d1f8      	bne	100b94 <xTaskCreate+0xb0>
  100ba2:	4d29      	ldr	r5, [pc, #164]	(100c48 <.text+0xc48>)
  100ba4:	1c28      	mov	r0, r5		(add r0, r5, #0)
  100ba6:	fa35f000 	bl	101014 <vListInitialise>
  100baa:	4c28      	ldr	r4, [pc, #160]	(100c4c <.text+0xc4c>)
  100bac:	1c20      	mov	r0, r4		(add r0, r4, #0)
  100bae:	fa31f000 	bl	101014 <vListInitialise>
  100bb2:	4827      	ldr	r0, [pc, #156]	(100c50 <.text+0xc50>)
  100bb4:	fa2ef000 	bl	101014 <vListInitialise>
  100bb8:	4826      	ldr	r0, [pc, #152]	(100c54 <.text+0xc54>)
  100bba:	fa2bf000 	bl	101014 <vListInitialise>
  100bbe:	4b26      	ldr	r3, [pc, #152]	(100c58 <.text+0xc58>)
  100bc0:	601d      	str	r5, [r3, #0]
  100bc2:	4b26      	ldr	r3, [pc, #152]	(100c5c <.text+0xc5c>)
  100bc4:	601c      	str	r4, [r3, #0]
  100bc6:	e009      	b	100bdc <xTaskCreate+0xf8>
  100bc8:	4b25      	ldr	r3, [pc, #148]	(100c60 <.text+0xc60>)
  100bca:	681b      	ldr	r3, [r3, #0]
  100bcc:	2b00      	cmp	r3, #0
  100bce:	d105      	bne	100bdc <xTaskCreate+0xf8>
  100bd0:	4a1a      	ldr	r2, [pc, #104]	(100c3c <.text+0xc3c>)
  100bd2:	6813      	ldr	r3, [r2, #0]
  100bd4:	6adb      	ldr	r3, [r3, #44]
  100bd6:	42bb      	cmp	r3, r7
  100bd8:	d800      	bhi	100bdc <xTaskCreate+0xf8>
  100bda:	6016      	str	r6, [r2, #0]
  100bdc:	4a21      	ldr	r2, [pc, #132]	(100c64 <.text+0xc64>)
  100bde:	6af1      	ldr	r1, [r6, #44]
  100be0:	6813      	ldr	r3, [r2, #0]
  100be2:	4299      	cmp	r1, r3
  100be4:	d900      	bls	100be8 <xTaskCreate+0x104>
  100be6:	6011      	str	r1, [r2, #0]
  100be8:	4b1f      	ldr	r3, [pc, #124]	(100c68 <.text+0xc68>)
  100bea:	681a      	ldr	r2, [r3, #0]
  100bec:	6372      	str	r2, [r6, #52]
  100bee:	3201      	add	r2, #1
  100bf0:	601a      	str	r2, [r3, #0]
  100bf2:	4a1e      	ldr	r2, [pc, #120]	(100c6c <.text+0xc6c>)
  100bf4:	6813      	ldr	r3, [r2, #0]
  100bf6:	4299      	cmp	r1, r3
  100bf8:	d900      	bls	100bfc <xTaskCreate+0x118>
  100bfa:	6011      	str	r1, [r2, #0]
  100bfc:	0088      	lsl	r0, r1, #2
  100bfe:	4b10      	ldr	r3, [pc, #64]	(100c40 <.text+0xc40>)
  100c00:	1840      	add	r0, r0, r1
  100c02:	0080      	lsl	r0, r0, #2
  100c04:	18c0      	add	r0, r0, r3
  100c06:	9903      	ldr	r1, [sp, #12]
  100c08:	fa14f000 	bl	101034 <vListInsertEnd>
  100c0c:	fff0f000 	bl	101bf0 <__vPortExitCritical_from_thumb>
  100c10:	9b0a      	ldr	r3, [sp, #40]
  100c12:	2b00      	cmp	r3, #0
  100c14:	d000      	beq	100c18 <xTaskCreate+0x134>
  100c16:	601e      	str	r6, [r3, #0]
  100c18:	4b11      	ldr	r3, [pc, #68]	(100c60 <.text+0xc60>)
  100c1a:	681b      	ldr	r3, [r3, #0]
  100c1c:	2b00      	cmp	r3, #0
  100c1e:	d005      	beq	100c2c <xTaskCreate+0x148>
  100c20:	4b06      	ldr	r3, [pc, #24]	(100c3c <.text+0xc3c>)
  100c22:	681b      	ldr	r3, [r3, #0]
  100c24:	6adb      	ldr	r3, [r3, #44]
  100c26:	42bb      	cmp	r3, r7
  100c28:	d200      	bcs	100c2c <xTaskCreate+0x148>
  100c2a:	df00      	swi	0
  100c2c:	2001      	mov	r0, #1
  100c2e:	b004      	add	sp, #16
  100c30:	bcf0      	pop	{r4, r5, r6, r7}
  100c32:	bc02      	pop	{r1}
  100c34:	4708      	bx	r1
  100c36:	0000      	lsl	r0, r0, #0
  100c38:	00c0      	lsl	r0, r0, #3
  100c3a:	0020      	lsl	r0, r4, #0
  100c3c:	00a4      	lsl	r4, r4, #2
  100c3e:	0020      	lsl	r0, r4, #0
  100c40:	0128      	lsl	r0, r5, #4
  100c42:	0020      	lsl	r0, r4, #0
  100c44:	018c      	lsl	r4, r1, #6
  100c46:	0020      	lsl	r0, r4, #0
  100c48:	0114      	lsl	r4, r2, #4
  100c4a:	0020      	lsl	r0, r4, #0
  100c4c:	0100      	lsl	r0, r0, #4
  100c4e:	0020      	lsl	r0, r4, #0
  100c50:	00e4      	lsl	r4, r4, #3
  100c52:	0020      	lsl	r0, r4, #0
  100c54:	00d0      	lsl	r0, r2, #3
  100c56:	0020      	lsl	r0, r4, #0
  100c58:	00fc      	lsl	r4, r7, #3
  100c5a:	0020      	lsl	r0, r4, #0
  100c5c:	00f8      	lsl	r0, r7, #3
  100c5e:	0020      	lsl	r0, r4, #0
  100c60:	00c4      	lsl	r4, r0, #3
  100c62:	0020      	lsl	r0, r4, #0
  100c64:	00c8      	lsl	r0, r1, #3
  100c66:	0020      	lsl	r0, r4, #0
  100c68:	00cc      	lsl	r4, r1, #3
  100c6a:	0020      	lsl	r0, r4, #0
  100c6c:	00b4      	lsl	r4, r6, #2
  100c6e:	0020      	lsl	r0, r4, #0

00100c70 <vTaskStartScheduler>:
  100c70:	b530      	push	{r4, r5, lr}
  100c72:	b082      	sub	sp, #8
  100c74:	2500      	mov	r5, #0
  100c76:	490b      	ldr	r1, [pc, #44]	(100ca4 <.text+0xca4>)
  100c78:	480b      	ldr	r0, [pc, #44]	(100ca8 <.text+0xca8>)
  100c7a:	2264      	mov	r2, #100
  100c7c:	2300      	mov	r3, #0
  100c7e:	9500      	str	r5, [sp, #0]
  100c80:	9501      	str	r5, [sp, #4]
  100c82:	ff2ff7ff 	bl	100ae4 <xTaskCreate>
  100c86:	1c04      	mov	r4, r0		(add r4, r0, #0)
  100c88:	2801      	cmp	r0, #1
  100c8a:	d107      	bne	100c9c <vTaskStartScheduler+0x2c>
  100c8c:	ffb4f000 	bl	101bf8 <__vPortDisableInterruptsFromThumb_from_thumb>
  100c90:	4b06      	ldr	r3, [pc, #24]	(100cac <.text+0xcac>)
  100c92:	601c      	str	r4, [r3, #0]
  100c94:	4b06      	ldr	r3, [pc, #24]	(100cb0 <.text+0xcb0>)
  100c96:	601d      	str	r5, [r3, #0]
  100c98:	fac8f000 	bl	10122c <xPortStartScheduler>
  100c9c:	b002      	add	sp, #8
  100c9e:	bc30      	pop	{r4, r5}
  100ca0:	bc01      	pop	{r0}
  100ca2:	4700      	bx	r0
  100ca4:	1c24      	mov	r4, r4		(add r4, r4, #0)
  100ca6:	0010      	lsl	r0, r2, #0
  100ca8:	0ad5      	lsr	r5, r2, #11
  100caa:	0010      	lsl	r0, r2, #0
  100cac:	00c4      	lsl	r4, r0, #3
  100cae:	0020      	lsl	r0, r4, #0
  100cb0:	00ac      	lsl	r4, r5, #2
  100cb2:	0020      	lsl	r0, r4, #0

00100cb4 <xTaskCheckForTimeOut>:
  100cb4:	b570      	push	{r4, r5, r6, lr}
  100cb6:	4e10      	ldr	r6, [pc, #64]	(100cf8 <.text+0xcf8>)
  100cb8:	6803      	ldr	r3, [r0, #0]
  100cba:	6832      	ldr	r2, [r6, #0]
  100cbc:	1c04      	mov	r4, r0		(add r4, r0, #0)
  100cbe:	1c0d      	mov	r5, r1		(add r5, r1, #0)
  100cc0:	429a      	cmp	r2, r3
  100cc2:	d004      	beq	100cce <xTaskCheckForTimeOut+0x1a>
  100cc4:	4b0d      	ldr	r3, [pc, #52]	(100cfc <.text+0xcfc>)
  100cc6:	681a      	ldr	r2, [r3, #0]
  100cc8:	6843      	ldr	r3, [r0, #4]
  100cca:	429a      	cmp	r2, r3
  100ccc:	d810      	bhi	100cf0 <xTaskCheckForTimeOut+0x3c>
  100cce:	4a0b      	ldr	r2, [pc, #44]	(100cfc <.text+0xcfc>)
  100cd0:	6860      	ldr	r0, [r4, #4]
  100cd2:	6813      	ldr	r3, [r2, #0]
  100cd4:	6829      	ldr	r1, [r5, #0]
  100cd6:	1a1b      	sub	r3, r3, r0
  100cd8:	428b      	cmp	r3, r1
  100cda:	d209      	bcs	100cf0 <xTaskCheckForTimeOut+0x3c>
  100cdc:	6813      	ldr	r3, [r2, #0]
  100cde:	1a1b      	sub	r3, r3, r0
  100ce0:	1acb      	sub	r3, r1, r3
  100ce2:	602b      	str	r3, [r5, #0]
  100ce4:	6833      	ldr	r3, [r6, #0]
  100ce6:	6023      	str	r3, [r4, #0]
  100ce8:	6813      	ldr	r3, [r2, #0]
  100cea:	2000      	mov	r0, #0
  100cec:	6063      	str	r3, [r4, #4]
  100cee:	e000      	b	100cf2 <xTaskCheckForTimeOut+0x3e>
  100cf0:	2001      	mov	r0, #1
  100cf2:	bc70      	pop	{r4, r5, r6}
  100cf4:	bc02      	pop	{r1}
  100cf6:	4708      	bx	r1
  100cf8:	00b0      	lsl	r0, r6, #2
  100cfa:	0020      	lsl	r0, r4, #0
  100cfc:	00ac      	lsl	r4, r5, #2
  100cfe:	0020      	lsl	r0, r4, #0

00100d00 <xQueueCreate>:
  100d00:	b5f0      	push	{r4, r5, r6, r7, lr}
  100d02:	1c05      	mov	r5, r0		(add r5, r0, #0)
  100d04:	1c0f      	mov	r7, r1		(add r7, r1, #0)
  100d06:	2800      	cmp	r0, #0
  100d08:	d028      	beq	100d5c <xQueueCreate+0x5c>
  100d0a:	204c      	mov	r0, #76
  100d0c:	f9caf000 	bl	1010a4 <pvPortMalloc>
  100d10:	1c04      	mov	r4, r0		(add r4, r0, #0)
  100d12:	2800      	cmp	r0, #0
  100d14:	d022      	beq	100d5c <xQueueCreate+0x5c>
  100d16:	1c3e      	mov	r6, r7		(add r6, r7, #0)
  100d18:	436e      	mul	r6, r5
  100d1a:	1c70      	add	r0, r6, #1
  100d1c:	f9c2f000 	bl	1010a4 <pvPortMalloc>
  100d20:	6020      	str	r0, [r4, #0]
  100d22:	2800      	cmp	r0, #0
  100d24:	d017      	beq	100d56 <xQueueCreate+0x56>
  100d26:	1983      	add	r3, r0, r6
  100d28:	6063      	str	r3, [r4, #4]
  100d2a:	2300      	mov	r3, #0
  100d2c:	63a3      	str	r3, [r4, #56]
  100d2e:	1e6b      	sub	r3, r5, #1
  100d30:	437b      	mul	r3, r7
  100d32:	18c3      	add	r3, r0, r3
  100d34:	60e3      	str	r3, [r4, #12]
  100d36:	2301      	mov	r3, #1
  100d38:	425b      	neg	r3, r3
  100d3a:	60a0      	str	r0, [r4, #8]
  100d3c:	1c20      	mov	r0, r4		(add r0, r4, #0)
  100d3e:	63e5      	str	r5, [r4, #60]
  100d40:	6427      	str	r7, [r4, #64]
  100d42:	6463      	str	r3, [r4, #68]
  100d44:	64a3      	str	r3, [r4, #72]
  100d46:	3010      	add	r0, #16
  100d48:	f964f000 	bl	101014 <vListInitialise>
  100d4c:	1c20      	mov	r0, r4		(add r0, r4, #0)
  100d4e:	3024      	add	r0, #36
  100d50:	f960f000 	bl	101014 <vListInitialise>
  100d54:	e003      	b	100d5e <xQueueCreate+0x5e>
  100d56:	1c20      	mov	r0, r4		(add r0, r4, #0)
  100d58:	f9fef000 	bl	101158 <vPortFree>
  100d5c:	2400      	mov	r4, #0
  100d5e:	1c20      	mov	r0, r4		(add r0, r4, #0)
  100d60:	bcf0      	pop	{r4, r5, r6, r7}
  100d62:	bc02      	pop	{r1}
  100d64:	4708      	bx	r1
  100d66:	46c0      	nop			(mov r8, r8)

00100d68 <xQueueSendFromISR>:
  100d68:	b530      	push	{r4, r5, lr}
  100d6a:	1c15      	mov	r5, r2		(add r5, r2, #0)
  100d6c:	6bc3      	ldr	r3, [r0, #60]
  100d6e:	6b82      	ldr	r2, [r0, #56]
  100d70:	1c04      	mov	r4, r0		(add r4, r0, #0)
  100d72:	429a      	cmp	r2, r3
  100d74:	d223      	bcs	100dbe <xQueueSendFromISR+0x56>
  100d76:	6c22      	ldr	r2, [r4, #64]
  100d78:	6880      	ldr	r0, [r0, #8]
  100d7a:	fe25f000 	bl	1019c8 <memcpy>
  100d7e:	6ba3      	ldr	r3, [r4, #56]
  100d80:	3301      	add	r3, #1
  100d82:	6c22      	ldr	r2, [r4, #64]
  100d84:	63a3      	str	r3, [r4, #56]
  100d86:	68a3      	ldr	r3, [r4, #8]
  100d88:	189b      	add	r3, r3, r2
  100d8a:	6862      	ldr	r2, [r4, #4]
  100d8c:	60a3      	str	r3, [r4, #8]
  100d8e:	4293      	cmp	r3, r2
  100d90:	d301      	bcc	100d96 <xQueueSendFromISR+0x2e>
  100d92:	6823      	ldr	r3, [r4, #0]
  100d94:	60a3      	str	r3, [r4, #8]
  100d96:	6ca3      	ldr	r3, [r4, #72]
  100d98:	1c5a      	add	r2, r3, #1
  100d9a:	d10c      	bne	100db6 <xQueueSendFromISR+0x4e>
  100d9c:	2d00      	cmp	r5, #0
  100d9e:	d10e      	bne	100dbe <xQueueSendFromISR+0x56>
  100da0:	6a63      	ldr	r3, [r4, #36]
  100da2:	2b00      	cmp	r3, #0
  100da4:	d00a      	beq	100dbc <xQueueSendFromISR+0x54>
  100da6:	1c20      	mov	r0, r4		(add r0, r4, #0)
  100da8:	3024      	add	r0, #36
  100daa:	fe47f7ff 	bl	100a3c <xTaskRemoveFromEventList>
  100dae:	2800      	cmp	r0, #0
  100db0:	d004      	beq	100dbc <xQueueSendFromISR+0x54>
  100db2:	2501      	mov	r5, #1
  100db4:	e003      	b	100dbe <xQueueSendFromISR+0x56>
  100db6:	3301      	add	r3, #1
  100db8:	64a3      	str	r3, [r4, #72]
  100dba:	e000      	b	100dbe <xQueueSendFromISR+0x56>
  100dbc:	2500      	mov	r5, #0
  100dbe:	1c28      	mov	r0, r5		(add r0, r5, #0)
  100dc0:	bc30      	pop	{r4, r5}
  100dc2:	bc02      	pop	{r1}
  100dc4:	4708      	bx	r1
  100dc6:	46c0      	nop			(mov r8, r8)

00100dc8 <uxQueueMessagesWaiting>:
  100dc8:	b510      	push	{r4, lr}
  100dca:	1c04      	mov	r4, r0		(add r4, r0, #0)
  100dcc:	ff0cf000 	bl	101be8 <__vPortEnterCritical_from_thumb>
  100dd0:	6ba4      	ldr	r4, [r4, #56]
  100dd2:	ff0df000 	bl	101bf0 <__vPortExitCritical_from_thumb>
  100dd6:	1c20      	mov	r0, r4		(add r0, r4, #0)
  100dd8:	bc10      	pop	{r4}
  100dda:	bc02      	pop	{r1}
  100ddc:	4708      	bx	r1
  100dde:	46c0      	nop			(mov r8, r8)

00100de0 <prvUnlockQueue>:
  100de0:	b510      	push	{r4, lr}
  100de2:	1c04      	mov	r4, r0		(add r4, r0, #0)
  100de4:	ff00f000 	bl	101be8 <__vPortEnterCritical_from_thumb>
  100de8:	6ca3      	ldr	r3, [r4, #72]
  100dea:	3b01      	sub	r3, #1
  100dec:	64a3      	str	r3, [r4, #72]
  100dee:	3301      	add	r3, #1
  100df0:	dd0d      	ble	100e0e <prvUnlockQueue+0x2e>
  100df2:	2301      	mov	r3, #1
  100df4:	425b      	neg	r3, r3
  100df6:	64a3      	str	r3, [r4, #72]
  100df8:	6a63      	ldr	r3, [r4, #36]
  100dfa:	2b00      	cmp	r3, #0
  100dfc:	d007      	beq	100e0e <prvUnlockQueue+0x2e>
  100dfe:	1c20      	mov	r0, r4		(add r0, r4, #0)
  100e00:	3024      	add	r0, #36
  100e02:	fe1bf7ff 	bl	100a3c <xTaskRemoveFromEventList>
  100e06:	2800      	cmp	r0, #0
  100e08:	d001      	beq	100e0e <prvUnlockQueue+0x2e>
  100e0a:	fe5df7ff 	bl	100ac8 <vTaskMissedYield>
  100e0e:	feeff000 	bl	101bf0 <__vPortExitCritical_from_thumb>
  100e12:	fee9f000 	bl	101be8 <__vPortEnterCritical_from_thumb>
  100e16:	6c63      	ldr	r3, [r4, #68]
  100e18:	3b01      	sub	r3, #1
  100e1a:	6463      	str	r3, [r4, #68]
  100e1c:	3301      	add	r3, #1
  100e1e:	dd0d      	ble	100e3c <prvUnlockQueue+0x5c>
  100e20:	2301      	mov	r3, #1
  100e22:	425b      	neg	r3, r3
  100e24:	6463      	str	r3, [r4, #68]
  100e26:	6923      	ldr	r3, [r4, #16]
  100e28:	2b00      	cmp	r3, #0
  100e2a:	d007      	beq	100e3c <prvUnlockQueue+0x5c>
  100e2c:	1c20      	mov	r0, r4		(add r0, r4, #0)
  100e2e:	3010      	add	r0, #16
  100e30:	fe04f7ff 	bl	100a3c <xTaskRemoveFromEventList>
  100e34:	2800      	cmp	r0, #0
  100e36:	d001      	beq	100e3c <prvUnlockQueue+0x5c>
  100e38:	fe46f7ff 	bl	100ac8 <vTaskMissedYield>
  100e3c:	fed8f000 	bl	101bf0 <__vPortExitCritical_from_thumb>
  100e40:	bc10      	pop	{r4}
  100e42:	bc01      	pop	{r0}
  100e44:	4700      	bx	r0
  100e46:	46c0      	nop			(mov r8, r8)

00100e48 <xQueueReceive>:
  100e48:	b570      	push	{r4, r5, r6, lr}
  100e4a:	b083      	sub	sp, #12
  100e4c:	1c05      	mov	r5, r0		(add r5, r0, #0)
  100e4e:	1c0e      	mov	r6, r1		(add r6, r1, #0)
  100e50:	9200      	str	r2, [sp, #0]
  100e52:	fc7ff7ff 	bl	100754 <vTaskSuspendAll>
  100e56:	a801      	add	r0, sp, #4
  100e58:	fe2af7ff 	bl	100ab0 <vTaskSetTimeOutState>
  100e5c:	fec4f000 	bl	101be8 <__vPortEnterCritical_from_thumb>
  100e60:	6c6b      	ldr	r3, [r5, #68]
  100e62:	3301      	add	r3, #1
  100e64:	646b      	str	r3, [r5, #68]
  100e66:	6cab      	ldr	r3, [r5, #72]
  100e68:	3301      	add	r3, #1
  100e6a:	64ab      	str	r3, [r5, #72]
  100e6c:	fec0f000 	bl	101bf0 <__vPortExitCritical_from_thumb>
  100e70:	febaf000 	bl	101be8 <__vPortEnterCritical_from_thumb>
  100e74:	6bac      	ldr	r4, [r5, #56]
  100e76:	febbf000 	bl	101bf0 <__vPortExitCritical_from_thumb>
  100e7a:	2c00      	cmp	r4, #0
  100e7c:	d11e      	bne	100ebc <xQueueReceive+0x74>
  100e7e:	9900      	ldr	r1, [sp, #0]
  100e80:	2900      	cmp	r1, #0
  100e82:	d01b      	beq	100ebc <xQueueReceive+0x74>
  100e84:	1c28      	mov	r0, r5		(add r0, r5, #0)
  100e86:	3024      	add	r0, #36
  100e88:	fdb2f7ff 	bl	1009f0 <vTaskPlaceOnEventList>
  100e8c:	feacf000 	bl	101be8 <__vPortEnterCritical_from_thumb>
  100e90:	1c28      	mov	r0, r5		(add r0, r5, #0)
  100e92:	ffa5f7ff 	bl	100de0 <prvUnlockQueue>
  100e96:	fcc3f7ff 	bl	100820 <xTaskResumeAll>
  100e9a:	2800      	cmp	r0, #0
  100e9c:	d100      	bne	100ea0 <xQueueReceive+0x58>
  100e9e:	df00      	swi	0
  100ea0:	fc58f7ff 	bl	100754 <vTaskSuspendAll>
  100ea4:	fea0f000 	bl	101be8 <__vPortEnterCritical_from_thumb>
  100ea8:	6c6b      	ldr	r3, [r5, #68]
  100eaa:	3301      	add	r3, #1
  100eac:	646b      	str	r3, [r5, #68]
  100eae:	6cab      	ldr	r3, [r5, #72]
  100eb0:	3301      	add	r3, #1
  100eb2:	64ab      	str	r3, [r5, #72]
  100eb4:	fe9cf000 	bl	101bf0 <__vPortExitCritical_from_thumb>
  100eb8:	fe9af000 	bl	101bf0 <__vPortExitCritical_from_thumb>
  100ebc:	fe94f000 	bl	101be8 <__vPortEnterCritical_from_thumb>
  100ec0:	6bab      	ldr	r3, [r5, #56]
  100ec2:	2b00      	cmp	r3, #0
  100ec4:	d101      	bne	100eca <xQueueReceive+0x82>
  100ec6:	2400      	mov	r4, #0
  100ec8:	e014      	b	100ef4 <xQueueReceive+0xac>
  100eca:	68eb      	ldr	r3, [r5, #12]
  100ecc:	6c2a      	ldr	r2, [r5, #64]
  100ece:	189b      	add	r3, r3, r2
  100ed0:	686a      	ldr	r2, [r5, #4]
  100ed2:	60eb      	str	r3, [r5, #12]
  100ed4:	4293      	cmp	r3, r2
  100ed6:	d301      	bcc	100edc <xQueueReceive+0x94>
  100ed8:	682b      	ldr	r3, [r5, #0]
  100eda:	60eb      	str	r3, [r5, #12]
  100edc:	6bab      	ldr	r3, [r5, #56]
  100ede:	3b01      	sub	r3, #1
  100ee0:	63ab      	str	r3, [r5, #56]
  100ee2:	68e9      	ldr	r1, [r5, #12]
  100ee4:	6c2a      	ldr	r2, [r5, #64]
  100ee6:	1c30      	mov	r0, r6		(add r0, r6, #0)
  100ee8:	fd6ef000 	bl	1019c8 <memcpy>
  100eec:	6c6b      	ldr	r3, [r5, #68]
  100eee:	3301      	add	r3, #1
  100ef0:	646b      	str	r3, [r5, #68]
  100ef2:	2401      	mov	r4, #1
  100ef4:	fe7cf000 	bl	101bf0 <__vPortExitCritical_from_thumb>
  100ef8:	2c00      	cmp	r4, #0
  100efa:	d109      	bne	100f10 <xQueueReceive+0xc8>
  100efc:	9b00      	ldr	r3, [sp, #0]
  100efe:	2b00      	cmp	r3, #0
  100f00:	d009      	beq	100f16 <xQueueReceive+0xce>
  100f02:	a801      	add	r0, sp, #4
  100f04:	4669      	mov	r1, sp
  100f06:	fed5f7ff 	bl	100cb4 <xTaskCheckForTimeOut>
  100f0a:	2800      	cmp	r0, #0
  100f0c:	d0b0      	beq	100e70 <xQueueReceive+0x28>
  100f0e:	e002      	b	100f16 <xQueueReceive+0xce>
  100f10:	1c63      	add	r3, r4, #1
  100f12:	d0ad      	beq	100e70 <xQueueReceive+0x28>
  100f14:	e000      	b	100f18 <xQueueReceive+0xd0>
  100f16:	2400      	mov	r4, #0
  100f18:	1c28      	mov	r0, r5		(add r0, r5, #0)
  100f1a:	ff61f7ff 	bl	100de0 <prvUnlockQueue>
  100f1e:	fc7ff7ff 	bl	100820 <xTaskResumeAll>
  100f22:	1c20      	mov	r0, r4		(add r0, r4, #0)
  100f24:	b003      	add	sp, #12
  100f26:	bc70      	pop	{r4, r5, r6}
  100f28:	bc02      	pop	{r1}
  100f2a:	4708      	bx	r1

00100f2c <xQueueSend>:
  100f2c:	b5f0      	push	{r4, r5, r6, r7, lr}
  100f2e:	b083      	sub	sp, #12
  100f30:	1c06      	mov	r6, r0		(add r6, r0, #0)
  100f32:	1c0f      	mov	r7, r1		(add r7, r1, #0)
  100f34:	9200      	str	r2, [sp, #0]
  100f36:	fc0df7ff 	bl	100754 <vTaskSuspendAll>
  100f3a:	a801      	add	r0, sp, #4
  100f3c:	fdb8f7ff 	bl	100ab0 <vTaskSetTimeOutState>
  100f40:	fe52f000 	bl	101be8 <__vPortEnterCritical_from_thumb>
  100f44:	6c73      	ldr	r3, [r6, #68]
  100f46:	3301      	add	r3, #1
  100f48:	6473      	str	r3, [r6, #68]
  100f4a:	6cb3      	ldr	r3, [r6, #72]
  100f4c:	3301      	add	r3, #1
  100f4e:	64b3      	str	r3, [r6, #72]
  100f50:	fe4ef000 	bl	101bf0 <__vPortExitCritical_from_thumb>
  100f54:	fe48f000 	bl	101be8 <__vPortEnterCritical_from_thumb>
  100f58:	6bb5      	ldr	r5, [r6, #56]
  100f5a:	6bf4      	ldr	r4, [r6, #60]
  100f5c:	fe48f000 	bl	101bf0 <__vPortExitCritical_from_thumb>
  100f60:	42a5      	cmp	r5, r4
  100f62:	d11e      	bne	100fa2 <xQueueSend+0x76>
  100f64:	9900      	ldr	r1, [sp, #0]
  100f66:	2900      	cmp	r1, #0
  100f68:	d01b      	beq	100fa2 <xQueueSend+0x76>
  100f6a:	1c30      	mov	r0, r6		(add r0, r6, #0)
  100f6c:	3010      	add	r0, #16
  100f6e:	fd3ff7ff 	bl	1009f0 <vTaskPlaceOnEventList>
  100f72:	fe39f000 	bl	101be8 <__vPortEnterCritical_from_thumb>
  100f76:	1c30      	mov	r0, r6		(add r0, r6, #0)
  100f78:	ff32f7ff 	bl	100de0 <prvUnlockQueue>
  100f7c:	fc50f7ff 	bl	100820 <xTaskResumeAll>
  100f80:	2800      	cmp	r0, #0
  100f82:	d100      	bne	100f86 <xQueueSend+0x5a>
  100f84:	df00      	swi	0
  100f86:	fbe5f7ff 	bl	100754 <vTaskSuspendAll>
  100f8a:	fe2df000 	bl	101be8 <__vPortEnterCritical_from_thumb>
  100f8e:	6c73      	ldr	r3, [r6, #68]
  100f90:	3301      	add	r3, #1
  100f92:	6473      	str	r3, [r6, #68]
  100f94:	6cb3      	ldr	r3, [r6, #72]
  100f96:	3301      	add	r3, #1
  100f98:	64b3      	str	r3, [r6, #72]
  100f9a:	fe29f000 	bl	101bf0 <__vPortExitCritical_from_thumb>
  100f9e:	fe27f000 	bl	101bf0 <__vPortExitCritical_from_thumb>
  100fa2:	fe21f000 	bl	101be8 <__vPortEnterCritical_from_thumb>
  100fa6:	6bb2      	ldr	r2, [r6, #56]
  100fa8:	6bf3      	ldr	r3, [r6, #60]
  100faa:	429a      	cmp	r2, r3
  100fac:	d301      	bcc	100fb2 <xQueueSend+0x86>
  100fae:	2400      	mov	r4, #0
  100fb0:	e014      	b	100fdc <xQueueSend+0xb0>
  100fb2:	6c32      	ldr	r2, [r6, #64]
  100fb4:	68b0      	ldr	r0, [r6, #8]
  100fb6:	1c39      	mov	r1, r7		(add r1, r7, #0)
  100fb8:	fd06f000 	bl	1019c8 <memcpy>
  100fbc:	6bb3      	ldr	r3, [r6, #56]
  100fbe:	3301      	add	r3, #1
  100fc0:	6c32      	ldr	r2, [r6, #64]
  100fc2:	63b3      	str	r3, [r6, #56]
  100fc4:	68b3      	ldr	r3, [r6, #8]
  100fc6:	189b      	add	r3, r3, r2
  100fc8:	6872      	ldr	r2, [r6, #4]
  100fca:	60b3      	str	r3, [r6, #8]
  100fcc:	4293      	cmp	r3, r2
  100fce:	d301      	bcc	100fd4 <xQueueSend+0xa8>
  100fd0:	6833      	ldr	r3, [r6, #0]
  100fd2:	60b3      	str	r3, [r6, #8]
  100fd4:	6cb3      	ldr	r3, [r6, #72]
  100fd6:	3301      	add	r3, #1
  100fd8:	64b3      	str	r3, [r6, #72]
  100fda:	2401      	mov	r4, #1
  100fdc:	fe08f000 	bl	101bf0 <__vPortExitCritical_from_thumb>
  100fe0:	2c00      	cmp	r4, #0
  100fe2:	d109      	bne	100ff8 <xQueueSend+0xcc>
  100fe4:	9b00      	ldr	r3, [sp, #0]
  100fe6:	2b00      	cmp	r3, #0
  100fe8:	d009      	beq	100ffe <xQueueSend+0xd2>
  100fea:	a801      	add	r0, sp, #4
  100fec:	4669      	mov	r1, sp
  100fee:	fe61f7ff 	bl	100cb4 <xTaskCheckForTimeOut>
  100ff2:	2800      	cmp	r0, #0
  100ff4:	d0ae      	beq	100f54 <xQueueSend+0x28>
  100ff6:	e002      	b	100ffe <xQueueSend+0xd2>
  100ff8:	1c63      	add	r3, r4, #1
  100ffa:	d0ab      	beq	100f54 <xQueueSend+0x28>
  100ffc:	e000      	b	101000 <xQueueSend+0xd4>
  100ffe:	2400      	mov	r4, #0
  101000:	1c30      	mov	r0, r6		(add r0, r6, #0)
  101002:	feedf7ff 	bl	100de0 <prvUnlockQueue>
  101006:	fc0bf7ff 	bl	100820 <xTaskResumeAll>
  10100a:	1c20      	mov	r0, r4		(add r0, r4, #0)
  10100c:	b003      	add	sp, #12
  10100e:	bcf0      	pop	{r4, r5, r6, r7}
  101010:	bc02      	pop	{r1}
  101012:	4708      	bx	r1

00101014 <vListInitialise>:
  101014:	2301      	mov	r3, #1
  101016:	1c02      	mov	r2, r0		(add r2, r0, #0)
  101018:	425b      	neg	r3, r3
  10101a:	6083      	str	r3, [r0, #8]
  10101c:	3208      	add	r2, #8
  10101e:	2300      	mov	r3, #0
  101020:	60c2      	str	r2, [r0, #12]
  101022:	6102      	str	r2, [r0, #16]
  101024:	6042      	str	r2, [r0, #4]
  101026:	6003      	str	r3, [r0, #0]
  101028:	4770      	bx	lr
  10102a:	46c0      	nop			(mov r8, r8)

0010102c <vListInitialiseItem>:
  10102c:	2300      	mov	r3, #0
  10102e:	6103      	str	r3, [r0, #16]
  101030:	4770      	bx	lr
  101032:	46c0      	nop			(mov r8, r8)

00101034 <vListInsertEnd>:
  101034:	6842      	ldr	r2, [r0, #4]
  101036:	6853      	ldr	r3, [r2, #4]
  101038:	604b      	str	r3, [r1, #4]
  10103a:	6853      	ldr	r3, [r2, #4]
  10103c:	608a      	str	r2, [r1, #8]
  10103e:	6099      	str	r1, [r3, #8]
  101040:	6051      	str	r1, [r2, #4]
  101042:	6803      	ldr	r3, [r0, #0]
  101044:	3301      	add	r3, #1
  101046:	6041      	str	r1, [r0, #4]
  101048:	6108      	str	r0, [r1, #16]
  10104a:	6003      	str	r3, [r0, #0]
  10104c:	4770      	bx	lr
  10104e:	46c0      	nop			(mov r8, r8)

00101050 <vListInsert>:
  101050:	b510      	push	{r4, lr}
  101052:	680c      	ldr	r4, [r1, #0]
  101054:	1c63      	add	r3, r4, #1
  101056:	d101      	bne	10105c <vListInsert+0xc>
  101058:	6902      	ldr	r2, [r0, #16]
  10105a:	e007      	b	10106c <vListInsert+0x1c>
  10105c:	1c02      	mov	r2, r0		(add r2, r0, #0)
  10105e:	3208      	add	r2, #8
  101060:	e000      	b	101064 <vListInsert+0x14>
  101062:	6852      	ldr	r2, [r2, #4]
  101064:	6853      	ldr	r3, [r2, #4]
  101066:	681b      	ldr	r3, [r3, #0]
  101068:	42a3      	cmp	r3, r4
  10106a:	d9fa      	bls	101062 <vListInsert+0x12>
  10106c:	6853      	ldr	r3, [r2, #4]
  10106e:	6099      	str	r1, [r3, #8]
  101070:	604b      	str	r3, [r1, #4]
  101072:	6051      	str	r1, [r2, #4]
  101074:	6803      	ldr	r3, [r0, #0]
  101076:	3301      	add	r3, #1
  101078:	608a      	str	r2, [r1, #8]
  10107a:	6108      	str	r0, [r1, #16]
  10107c:	6003      	str	r3, [r0, #0]
  10107e:	bc10      	pop	{r4}
  101080:	bc01      	pop	{r0}
  101082:	4700      	bx	r0

00101084 <vListRemove>:
  101084:	6843      	ldr	r3, [r0, #4]
  101086:	6882      	ldr	r2, [r0, #8]
  101088:	609a      	str	r2, [r3, #8]
  10108a:	6881      	ldr	r1, [r0, #8]
  10108c:	6902      	ldr	r2, [r0, #16]
  10108e:	604b      	str	r3, [r1, #4]
  101090:	6853      	ldr	r3, [r2, #4]
  101092:	4283      	cmp	r3, r0
  101094:	d100      	bne	101098 <vListRemove+0x14>
  101096:	6051      	str	r1, [r2, #4]
  101098:	2300      	mov	r3, #0
  10109a:	6103      	str	r3, [r0, #16]
  10109c:	6813      	ldr	r3, [r2, #0]
  10109e:	3b01      	sub	r3, #1
  1010a0:	6013      	str	r3, [r2, #0]
  1010a2:	4770      	bx	lr

001010a4 <pvPortMalloc>:
  1010a4:	b530      	push	{r4, r5, lr}
  1010a6:	1c04      	mov	r4, r0		(add r4, r0, #0)
  1010a8:	fb54f7ff 	bl	100754 <vTaskSuspendAll>
  1010ac:	4d24      	ldr	r5, [pc, #144]	(101140 <.text+0x1140>)
  1010ae:	6828      	ldr	r0, [r5, #0]
  1010b0:	2800      	cmp	r0, #0
  1010b2:	d10b      	bne	1010cc <pvPortMalloc+0x28>
  1010b4:	4923      	ldr	r1, [pc, #140]	(101144 <.text+0x1144>)
  1010b6:	4b24      	ldr	r3, [pc, #144]	(101148 <.text+0x1148>)
  1010b8:	4a24      	ldr	r2, [pc, #144]	(10114c <.text+0x114c>)
  1010ba:	6019      	str	r1, [r3, #0]
  1010bc:	6058      	str	r0, [r3, #4]
  1010be:	4b24      	ldr	r3, [pc, #144]	(101150 <.text+0x1150>)
  1010c0:	605a      	str	r2, [r3, #4]
  1010c2:	6018      	str	r0, [r3, #0]
  1010c4:	600b      	str	r3, [r1, #0]
  1010c6:	2301      	mov	r3, #1
  1010c8:	604a      	str	r2, [r1, #4]
  1010ca:	602b      	str	r3, [r5, #0]
  1010cc:	2c00      	cmp	r4, #0
  1010ce:	d005      	beq	1010dc <pvPortMalloc+0x38>
  1010d0:	3408      	add	r4, #8
  1010d2:	2303      	mov	r3, #3
  1010d4:	421c      	tst	r4, r3
  1010d6:	d001      	beq	1010dc <pvPortMalloc+0x38>
  1010d8:	439c      	bic	r4, r3
  1010da:	3404      	add	r4, #4
  1010dc:	4b1d      	ldr	r3, [pc, #116]	(101154 <.text+0x1154>)
  1010de:	1e62      	sub	r2, r4, #1
  1010e0:	429a      	cmp	r2, r3
  1010e2:	d825      	bhi	101130 <pvPortMalloc+0x8c>
  1010e4:	4b18      	ldr	r3, [pc, #96]	(101148 <.text+0x1148>)
  1010e6:	681a      	ldr	r2, [r3, #0]
  1010e8:	1c19      	mov	r1, r3		(add r1, r3, #0)
  1010ea:	6853      	ldr	r3, [r2, #4]
  1010ec:	42a3      	cmp	r3, r4
  1010ee:	d205      	bcs	1010fc <pvPortMalloc+0x58>
  1010f0:	6813      	ldr	r3, [r2, #0]
  1010f2:	2b00      	cmp	r3, #0
  1010f4:	d002      	beq	1010fc <pvPortMalloc+0x58>
  1010f6:	1c11      	mov	r1, r2		(add r1, r2, #0)
  1010f8:	1c1a      	mov	r2, r3		(add r2, r3, #0)
  1010fa:	e7f6      	b	1010ea <pvPortMalloc+0x46>
  1010fc:	4b14      	ldr	r3, [pc, #80]	(101150 <.text+0x1150>)
  1010fe:	429a      	cmp	r2, r3
  101100:	d016      	beq	101130 <pvPortMalloc+0x8c>
  101102:	680b      	ldr	r3, [r1, #0]
  101104:	1c1d      	mov	r5, r3		(add r5, r3, #0)
  101106:	6813      	ldr	r3, [r2, #0]
  101108:	600b      	str	r3, [r1, #0]
  10110a:	6853      	ldr	r3, [r2, #4]
  10110c:	1b1b      	sub	r3, r3, r4
  10110e:	3508      	add	r5, #8
  101110:	2b10      	cmp	r3, #16
  101112:	d90e      	bls	101132 <pvPortMalloc+0x8e>
  101114:	1910      	add	r0, r2, r4
  101116:	6043      	str	r3, [r0, #4]
  101118:	6054      	str	r4, [r2, #4]
  10111a:	490b      	ldr	r1, [pc, #44]	(101148 <.text+0x1148>)
  10111c:	6844      	ldr	r4, [r0, #4]
  10111e:	680a      	ldr	r2, [r1, #0]
  101120:	6853      	ldr	r3, [r2, #4]
  101122:	42a3      	cmp	r3, r4
  101124:	d201      	bcs	10112a <pvPortMalloc+0x86>
  101126:	1c11      	mov	r1, r2		(add r1, r2, #0)
  101128:	e7f9      	b	10111e <pvPortMalloc+0x7a>
  10112a:	6002      	str	r2, [r0, #0]
  10112c:	6008      	str	r0, [r1, #0]
  10112e:	e000      	b	101132 <pvPortMalloc+0x8e>
  101130:	2500      	mov	r5, #0
  101132:	fb75f7ff 	bl	100820 <xTaskResumeAll>
  101136:	1c28      	mov	r0, r5		(add r0, r5, #0)
  101138:	bc30      	pop	{r4, r5}
  10113a:	bc02      	pop	{r1}
  10113c:	4708      	bx	r1
  10113e:	0000      	lsl	r0, r0, #0
  101140:	018c      	lsl	r4, r1, #6
  101142:	0020      	lsl	r0, r4, #0
  101144:	01a4      	lsl	r4, r4, #6
  101146:	0020      	lsl	r0, r4, #0
  101148:	0198      	lsl	r0, r3, #6
  10114a:	0020      	lsl	r0, r4, #0
  10114c:	2710      	mov	r7, #16
  10114e:	0000      	lsl	r0, r0, #0
  101150:	0190      	lsl	r0, r2, #6
  101152:	0020      	lsl	r0, r4, #0
  101154:	270e      	mov	r7, #14
	...

00101158 <vPortFree>:
  101158:	b510      	push	{r4, lr}
  10115a:	2800      	cmp	r0, #0
  10115c:	d00f      	beq	10117e <vPortFree+0x26>
  10115e:	1c04      	mov	r4, r0		(add r4, r0, #0)
  101160:	3c08      	sub	r4, #8
  101162:	faf7f7ff 	bl	100754 <vTaskSuspendAll>
  101166:	6860      	ldr	r0, [r4, #4]
  101168:	4906      	ldr	r1, [pc, #24]	(101184 <.text+0x1184>)
  10116a:	680a      	ldr	r2, [r1, #0]
  10116c:	6853      	ldr	r3, [r2, #4]
  10116e:	4283      	cmp	r3, r0
  101170:	d201      	bcs	101176 <vPortFree+0x1e>
  101172:	1c11      	mov	r1, r2		(add r1, r2, #0)
  101174:	e7f9      	b	10116a <vPortFree+0x12>
  101176:	6022      	str	r2, [r4, #0]
  101178:	600c      	str	r4, [r1, #0]
  10117a:	fb51f7ff 	bl	100820 <xTaskResumeAll>
  10117e:	bc10      	pop	{r4}
  101180:	bc01      	pop	{r0}
  101182:	4700      	bx	r0
  101184:	0198      	lsl	r0, r3, #6
  101186:	0020      	lsl	r0, r4, #0

00101188 <pxPortInitialiseStack>:
  101188:	3104      	add	r1, #4
  10118a:	4b1b      	ldr	r3, [pc, #108]	(1011f8 <.text+0x11f8>)
  10118c:	6001      	str	r1, [r0, #0]
  10118e:	1f01      	sub	r1, r0, #4
  101190:	600b      	str	r3, [r1, #0]
  101192:	1c03      	mov	r3, r0		(add r3, r0, #0)
  101194:	3b08      	sub	r3, #8
  101196:	6018      	str	r0, [r3, #0]
  101198:	4b18      	ldr	r3, [pc, #96]	(1011fc <.text+0x11fc>)
  10119a:	3908      	sub	r1, #8
  10119c:	600b      	str	r3, [r1, #0]
  10119e:	4b18      	ldr	r3, [pc, #96]	(101200 <.text+0x1200>)
  1011a0:	3904      	sub	r1, #4
  1011a2:	600b      	str	r3, [r1, #0]
  1011a4:	4b17      	ldr	r3, [pc, #92]	(101204 <.text+0x1204>)
  1011a6:	3904      	sub	r1, #4
  1011a8:	600b      	str	r3, [r1, #0]
  1011aa:	4b17      	ldr	r3, [pc, #92]	(101208 <.text+0x1208>)
  1011ac:	3904      	sub	r1, #4
  1011ae:	600b      	str	r3, [r1, #0]
  1011b0:	4b16      	ldr	r3, [pc, #88]	(10120c <.text+0x120c>)
  1011b2:	3904      	sub	r1, #4
  1011b4:	600b      	str	r3, [r1, #0]
  1011b6:	4b16      	ldr	r3, [pc, #88]	(101210 <.text+0x1210>)
  1011b8:	3904      	sub	r1, #4
  1011ba:	600b      	str	r3, [r1, #0]
  1011bc:	4b15      	ldr	r3, [pc, #84]	(101214 <.text+0x1214>)
  1011be:	3904      	sub	r1, #4
  1011c0:	600b      	str	r3, [r1, #0]
  1011c2:	4b15      	ldr	r3, [pc, #84]	(101218 <.text+0x1218>)
  1011c4:	3904      	sub	r1, #4
  1011c6:	600b      	str	r3, [r1, #0]
  1011c8:	4b14      	ldr	r3, [pc, #80]	(10121c <.text+0x121c>)
  1011ca:	3904      	sub	r1, #4
  1011cc:	600b      	str	r3, [r1, #0]
  1011ce:	4b14      	ldr	r3, [pc, #80]	(101220 <.text+0x1220>)
  1011d0:	3904      	sub	r1, #4
  1011d2:	600b      	str	r3, [r1, #0]
  1011d4:	4b13      	ldr	r3, [pc, #76]	(101224 <.text+0x1224>)
  1011d6:	3904      	sub	r1, #4
  1011d8:	600b      	str	r3, [r1, #0]
  1011da:	4b13      	ldr	r3, [pc, #76]	(101228 <.text+0x1228>)
  1011dc:	3904      	sub	r1, #4
  1011de:	600b      	str	r3, [r1, #0]
  1011e0:	1c03      	mov	r3, r0		(add r3, r0, #0)
  1011e2:	3b3c      	sub	r3, #60
  1011e4:	601a      	str	r2, [r3, #0]
  1011e6:	1c02      	mov	r2, r0		(add r2, r0, #0)
  1011e8:	3a40      	sub	r2, #64
  1011ea:	233f      	mov	r3, #63
  1011ec:	6013      	str	r3, [r2, #0]
  1011ee:	3844      	sub	r0, #68
  1011f0:	2300      	mov	r3, #0
  1011f2:	6003      	str	r3, [r0, #0]
  1011f4:	4770      	bx	lr
  1011f6:	0000      	lsl	r0, r0, #0
  1011f8:	aaaa      	add	r2, sp, #680
  1011fa:	aaaa      	add	r2, sp, #680
  1011fc:	1212      	asr	r2, r2, #8
  1011fe:	1212      	asr	r2, r2, #8
  101200:	1111      	asr	r1, r2, #4
  101202:	1111      	asr	r1, r2, #4
  101204:	1010      	asr	r0, r2, #0
  101206:	1010      	asr	r0, r2, #0
  101208:	0909      	lsr	r1, r1, #4
  10120a:	0909      	lsr	r1, r1, #4
  10120c:	0808      	lsr	r0, r1, #0
  10120e:	0808      	lsr	r0, r1, #0
  101210:	0707      	lsl	r7, r0, #28
  101212:	0707      	lsl	r7, r0, #28
  101214:	0606      	lsl	r6, r0, #24
  101216:	0606      	lsl	r6, r0, #24
  101218:	0505      	lsl	r5, r0, #20
  10121a:	0505      	lsl	r5, r0, #20
  10121c:	0404      	lsl	r4, r0, #16
  10121e:	0404      	lsl	r4, r0, #16
  101220:	0303      	lsl	r3, r0, #12
  101222:	0303      	lsl	r3, r0, #12
  101224:	0202      	lsl	r2, r0, #8
  101226:	0202      	lsl	r2, r0, #8
  101228:	0101      	lsl	r1, r0, #4
  10122a:	0101      	lsl	r1, r0, #4

0010122c <xPortStartScheduler>:
  10122c:	b510      	push	{r4, lr}
  10122e:	4b0b      	ldr	r3, [pc, #44]	(10125c <.text+0x125c>)
  101230:	4c0b      	ldr	r4, [pc, #44]	(101260 <.text+0x1260>)
  101232:	b081      	sub	sp, #4
  101234:	9300      	str	r3, [sp, #0]
  101236:	2101      	mov	r1, #1
  101238:	1c20      	mov	r0, r4		(add r0, r4, #0)
  10123a:	2207      	mov	r2, #7
  10123c:	2300      	mov	r3, #0
  10123e:	fa63f7ff 	bl	100708 <AT91F_AIC_ConfigureIt>
  101242:	4a08      	ldr	r2, [pc, #32]	(101264 <.text+0x1264>)
  101244:	4b08      	ldr	r3, [pc, #32]	(101268 <.text+0x1268>)
  101246:	34fc      	add	r4, #252
  101248:	601a      	str	r2, [r3, #0]
  10124a:	2302      	mov	r3, #2
  10124c:	6263      	str	r3, [r4, #36]
  10124e:	fcd7f000 	bl	101c00 <__vPortISRStartFirstTask_from_thumb>
  101252:	2000      	mov	r0, #0
  101254:	b001      	add	sp, #4
  101256:	bc10      	pop	{r4}
  101258:	bc02      	pop	{r1}
  10125a:	4708      	bx	r1
  10125c:	02b8      	lsl	r0, r7, #10
  10125e:	0010      	lsl	r0, r2, #0
  101260:	fffff000 	bl	102262 <_etext+0x516>
  101264:	2eeb      	cmp	r6, #235
  101266:	0300      	lsl	r0, r0, #12
  101268:	fd30      	second half of BL instruction 0xfd30
  10126a:	ffff      	second half of BL instruction 0xffff

0010126c <Init_LEDs>:
  10126c:	b510      	push	{r4, lr}
  10126e:	4c06      	ldr	r4, [pc, #24]	(101288 <.text+0x1288>)
  101270:	2106      	mov	r1, #6
  101272:	1c20      	mov	r0, r4		(add r0, r4, #0)
  101274:	fa5cf7ff 	bl	100730 <AT91F_PIO_CfgOutput>
  101278:	1c20      	mov	r0, r4		(add r0, r4, #0)
  10127a:	2106      	mov	r1, #6
  10127c:	fa5ef7ff 	bl	10073c <AT91F_PIO_SetOutput>
  101280:	bc10      	pop	{r4}
  101282:	bc01      	pop	{r0}
  101284:	4700      	bx	r0
  101286:	0000      	lsl	r0, r0, #0
  101288:	fffff400 	bl	ffd0228a <PMC_USBDIV+0xcfd0228a>

0010128c <Toggle_LED>:
  10128c:	b510      	push	{r4, lr}
  10128e:	1c04      	mov	r4, r0		(add r4, r0, #0)
  101290:	4808      	ldr	r0, [pc, #32]	(1012b4 <.text+0x12b4>)
  101292:	fa51f7ff 	bl	100738 <AT91F_PIO_GetInput>
  101296:	4020      	and	r0, r4
  101298:	42a0      	cmp	r0, r4
  10129a:	d104      	bne	1012a6 <Toggle_LED+0x1a>
  10129c:	4805      	ldr	r0, [pc, #20]	(1012b4 <.text+0x12b4>)
  10129e:	1c21      	mov	r1, r4		(add r1, r4, #0)
  1012a0:	fa4ef7ff 	bl	100740 <AT91F_PIO_ClearOutput>
  1012a4:	e003      	b	1012ae <Toggle_LED+0x22>
  1012a6:	4803      	ldr	r0, [pc, #12]	(1012b4 <.text+0x12b4>)
  1012a8:	1c21      	mov	r1, r4		(add r1, r4, #0)
  1012aa:	fa47f7ff 	bl	10073c <AT91F_PIO_SetOutput>
  1012ae:	bc10      	pop	{r4}
  1012b0:	bc01      	pop	{r0}
  1012b2:	4700      	bx	r0
  1012b4:	fffff400 	bl	ffd022b6 <PMC_USBDIV+0xcfd022b6>

001012b8 <SendBytes>:
  1012b8:	b570      	push	{r4, r5, r6, lr}
  1012ba:	1c04      	mov	r4, r0		(add r4, r0, #0)
  1012bc:	1c0e      	mov	r6, r1		(add r6, r1, #0)
  1012be:	2500      	mov	r5, #0
  1012c0:	e004      	b	1012cc <SendBytes+0x14>
  1012c2:	7820      	ldrb	r0, [r4, #0]
  1012c4:	f840f000 	bl	101348 <vUSBSendByte>
  1012c8:	3401      	add	r4, #1
  1012ca:	3501      	add	r5, #1
  1012cc:	42b5      	cmp	r5, r6
  1012ce:	d1f8      	bne	1012c2 <SendBytes+0xa>
  1012d0:	bc70      	pop	{r4, r5, r6}
  1012d2:	bc01      	pop	{r0}
  1012d4:	4700      	bx	r0
  1012d6:	46c0      	nop			(mov r8, r8)

001012d8 <onUSBCommTask>:
  1012d8:	b510      	push	{r4, lr}
  1012da:	b0cc      	sub	sp, #304
  1012dc:	e002      	b	1012e4 <onUSBCommTask+0xc>
  1012de:	2001      	mov	r0, #1
  1012e0:	fb06f7ff 	bl	1008f0 <vTaskDelay>
  1012e4:	f82af000 	bl	10133c <vUSBIsInitialized>
  1012e8:	2800      	cmp	r0, #0
  1012ea:	d0f8      	beq	1012de <onUSBCommTask+0x6>
  1012ec:	4c11      	ldr	r4, [pc, #68]	(101334 <.text+0x1334>)
  1012ee:	446c      	add	r4, sp
  1012f0:	1c20      	mov	r0, r4		(add r0, r4, #0)
  1012f2:	f839f000 	bl	101368 <vUSBReceiveByte>
  1012f6:	7823      	ldrb	r3, [r4, #0]
  1012f8:	2b56      	cmp	r3, #86
  1012fa:	d109      	bne	101310 <onUSBCommTask+0x38>
  1012fc:	4668      	mov	r0, sp
  1012fe:	3003      	add	r0, #3
  101300:	2203      	mov	r2, #3
  101302:	2302      	mov	r3, #2
  101304:	7002      	strb	r2, [r0, #0]
  101306:	7043      	strb	r3, [r0, #1]
  101308:	7082      	strb	r2, [r0, #2]
  10130a:	2103      	mov	r1, #3
  10130c:	ffd4f7ff 	bl	1012b8 <SendBytes>
  101310:	7823      	ldrb	r3, [r4, #0]
  101312:	2b21      	cmp	r3, #33
  101314:	d1ea      	bne	1012ec <onUSBCommTask+0x14>
  101316:	466c      	mov	r4, sp
  101318:	3403      	add	r4, #3
  10131a:	4907      	ldr	r1, [pc, #28]	(101338 <.text+0x1338>)
  10131c:	1c20      	mov	r0, r4		(add r0, r4, #0)
  10131e:	fbbbf000 	bl	101a98 <strcpy>
  101322:	1c20      	mov	r0, r4		(add r0, r4, #0)
  101324:	fbe8f000 	bl	101af8 <strlen>
  101328:	1c01      	mov	r1, r0		(add r1, r0, #0)
  10132a:	1c20      	mov	r0, r4		(add r0, r4, #0)
  10132c:	ffc4f7ff 	bl	1012b8 <SendBytes>
  101330:	e7dc      	b	1012ec <onUSBCommTask+0x14>
  101332:	0000      	lsl	r0, r0, #0
  101334:	012f      	lsl	r7, r5, #4
  101336:	0000      	lsl	r0, r0, #0
  101338:	1c2c      	mov	r4, r5		(add r4, r5, #0)
  10133a:	0010      	lsl	r0, r2, #0

0010133c <vUSBIsInitialized>:
  10133c:	4b01      	ldr	r3, [pc, #4]	(101344 <.text+0x1344>)
  10133e:	6818      	ldr	r0, [r3, #0]
  101340:	4770      	bx	lr
  101342:	0000      	lsl	r0, r0, #0
  101344:	28b4      	cmp	r0, #180
  101346:	0020      	lsl	r0, r4, #0

00101348 <vUSBSendByte>:
  101348:	b500      	push	{lr}
  10134a:	b081      	sub	sp, #4
  10134c:	4b05      	ldr	r3, [pc, #20]	(101364 <.text+0x1364>)
  10134e:	4669      	mov	r1, sp
  101350:	2201      	mov	r2, #1
  101352:	7008      	strb	r0, [r1, #0]
  101354:	4252      	neg	r2, r2
  101356:	6818      	ldr	r0, [r3, #0]
  101358:	fde8f7ff 	bl	100f2c <xQueueSend>
  10135c:	b001      	add	sp, #4
  10135e:	bc01      	pop	{r0}
  101360:	4700      	bx	r0
  101362:	0000      	lsl	r0, r0, #0
  101364:	28d4      	cmp	r0, #212
  101366:	0020      	lsl	r0, r4, #0

00101368 <vUSBReceiveByte>:
  101368:	b500      	push	{lr}
  10136a:	4b04      	ldr	r3, [pc, #16]	(10137c <.text+0x137c>)
  10136c:	2201      	mov	r2, #1
  10136e:	1c01      	mov	r1, r0		(add r1, r0, #0)
  101370:	4252      	neg	r2, r2
  101372:	6818      	ldr	r0, [r3, #0]
  101374:	fd68f7ff 	bl	100e48 <xQueueReceive>
  101378:	bc02      	pop	{r1}
  10137a:	4708      	bx	r1
  10137c:	28d8      	cmp	r0, #216
  10137e:	0020      	lsl	r0, r4, #0

00101380 <prvSendZLP>:
  101380:	b530      	push	{r4, r5, lr}
  101382:	e002      	b	10138a <prvSendZLP+0xa>
  101384:	2001      	mov	r0, #1
  101386:	fab3f7ff 	bl	1008f0 <vTaskDelay>
  10138a:	4c0c      	ldr	r4, [pc, #48]	(1013bc <.text+0x13bc>)
  10138c:	6b23      	ldr	r3, [r4, #48]
  10138e:	2510      	mov	r5, #16
  101390:	422b      	tst	r3, r5
  101392:	d1f7      	bne	101384 <prvSendZLP+0x4>
  101394:	fc28f000 	bl	101be8 <__vPortEnterCritical_from_thumb>
  101398:	4b09      	ldr	r3, [pc, #36]	(1013c0 <.text+0x13c0>)
  10139a:	1c1a      	mov	r2, r3		(add r2, r3, #0)
  10139c:	3304      	add	r3, #4
  10139e:	6fdb      	ldr	r3, [r3, #124]
  1013a0:	3208      	add	r2, #8
  1013a2:	67d3      	str	r3, [r2, #124]
  1013a4:	6b23      	ldr	r3, [r4, #48]
  1013a6:	224f      	mov	r2, #79
  1013a8:	4313      	orr	r3, r2
  1013aa:	2230      	mov	r2, #48
  1013ac:	4393      	bic	r3, r2
  1013ae:	432b      	orr	r3, r5
  1013b0:	6323      	str	r3, [r4, #48]
  1013b2:	fc1df000 	bl	101bf0 <__vPortExitCritical_from_thumb>
  1013b6:	bc30      	pop	{r4, r5}
  1013b8:	bc01      	pop	{r0}
  1013ba:	4700      	bx	r0
  1013bc:	0000      	lsl	r0, r0, #0
  1013be:	fffb      	second half of BL instruction 0xfffb
  1013c0:	2964      	cmp	r1, #100
  1013c2:	0020      	lsl	r0, r4, #0

001013c4 <prvSendStall>:
  1013c4:	b500      	push	{lr}
  1013c6:	fc0ff000 	bl	101be8 <__vPortEnterCritical_from_thumb>
  1013ca:	4906      	ldr	r1, [pc, #24]	(1013e4 <.text+0x13e4>)
  1013cc:	6b0b      	ldr	r3, [r1, #48]
  1013ce:	224f      	mov	r2, #79
  1013d0:	4313      	orr	r3, r2
  1013d2:	2230      	mov	r2, #48
  1013d4:	4393      	bic	r3, r2
  1013d6:	2220      	mov	r2, #32
  1013d8:	4313      	orr	r3, r2
  1013da:	630b      	str	r3, [r1, #48]
  1013dc:	fc08f000 	bl	101bf0 <__vPortExitCritical_from_thumb>
  1013e0:	bc01      	pop	{r0}
  1013e2:	4700      	bx	r0
  1013e4:	0000      	lsl	r0, r0, #0
  1013e6:	fffb      	second half of BL instruction 0xfffb

001013e8 <prvSendNextSegment>:
  1013e8:	b510      	push	{r4, lr}
  1013ea:	4b25      	ldr	r3, [pc, #148]	(101480 <.text+0x1480>)
  1013ec:	1c1a      	mov	r2, r3		(add r2, r3, #0)
  1013ee:	3208      	add	r2, #8
  1013f0:	3304      	add	r3, #4
  1013f2:	6fd2      	ldr	r2, [r2, #124]
  1013f4:	6fdb      	ldr	r3, [r3, #124]
  1013f6:	b083      	sub	sp, #12
  1013f8:	429a      	cmp	r2, r3
  1013fa:	d935      	bls	101468 <prvSendNextSegment+0x80>
  1013fc:	1ad3      	sub	r3, r2, r3
  1013fe:	9300      	str	r3, [sp, #0]
  101400:	9b00      	ldr	r3, [sp, #0]
  101402:	2b08      	cmp	r3, #8
  101404:	d901      	bls	10140a <prvSendNextSegment+0x22>
  101406:	2308      	mov	r3, #8
  101408:	e000      	b	10140c <prvSendNextSegment+0x24>
  10140a:	9b00      	ldr	r3, [sp, #0]
  10140c:	9302      	str	r3, [sp, #8]
  10140e:	e002      	b	101416 <prvSendNextSegment+0x2e>
  101410:	2001      	mov	r0, #1
  101412:	fa6df7ff 	bl	1008f0 <vTaskDelay>
  101416:	4b1b      	ldr	r3, [pc, #108]	(101484 <.text+0x1484>)
  101418:	6b1b      	ldr	r3, [r3, #48]
  10141a:	06da      	lsl	r2, r3, #27
  10141c:	d4f8      	bmi	101410 <prvSendNextSegment+0x28>
  10141e:	4c18      	ldr	r4, [pc, #96]	(101480 <.text+0x1480>)
  101420:	e009      	b	101436 <prvSendNextSegment+0x4e>
  101422:	1d20      	add	r0, r4, #4
  101424:	6fc2      	ldr	r2, [r0, #124]
  101426:	4b17      	ldr	r3, [pc, #92]	(101484 <.text+0x1484>)
  101428:	5ca1      	ldrb	r1, [r4, r2]
  10142a:	6519      	str	r1, [r3, #80]
  10142c:	9b02      	ldr	r3, [sp, #8]
  10142e:	3201      	add	r2, #1
  101430:	3b01      	sub	r3, #1
  101432:	9302      	str	r3, [sp, #8]
  101434:	67c2      	str	r2, [r0, #124]
  101436:	9b02      	ldr	r3, [sp, #8]
  101438:	2b00      	cmp	r3, #0
  10143a:	d1f2      	bne	101422 <prvSendNextSegment+0x3a>
  10143c:	fbd4f000 	bl	101be8 <__vPortEnterCritical_from_thumb>
  101440:	4910      	ldr	r1, [pc, #64]	(101484 <.text+0x1484>)
  101442:	6b0b      	ldr	r3, [r1, #48]
  101444:	9301      	str	r3, [sp, #4]
  101446:	9b01      	ldr	r3, [sp, #4]
  101448:	224f      	mov	r2, #79
  10144a:	4313      	orr	r3, r2
  10144c:	9301      	str	r3, [sp, #4]
  10144e:	9b01      	ldr	r3, [sp, #4]
  101450:	2230      	mov	r2, #48
  101452:	4393      	bic	r3, r2
  101454:	9301      	str	r3, [sp, #4]
  101456:	9b01      	ldr	r3, [sp, #4]
  101458:	2210      	mov	r2, #16
  10145a:	4313      	orr	r3, r2
  10145c:	9301      	str	r3, [sp, #4]
  10145e:	9b01      	ldr	r3, [sp, #4]
  101460:	630b      	str	r3, [r1, #48]
  101462:	fbc5f000 	bl	101bf0 <__vPortExitCritical_from_thumb>
  101466:	e007      	b	101478 <prvSendNextSegment+0x90>
  101468:	4c07      	ldr	r4, [pc, #28]	(101488 <.text+0x1488>)
  10146a:	6823      	ldr	r3, [r4, #0]
  10146c:	2b04      	cmp	r3, #4
  10146e:	d103      	bne	101478 <prvSendNextSegment+0x90>
  101470:	ff86f7ff 	bl	101380 <prvSendZLP>
  101474:	2300      	mov	r3, #0
  101476:	6023      	str	r3, [r4, #0]
  101478:	b003      	add	sp, #12
  10147a:	bc10      	pop	{r4}
  10147c:	bc01      	pop	{r0}
  10147e:	4700      	bx	r0
  101480:	2964      	cmp	r1, #100
  101482:	0020      	lsl	r0, r4, #0
  101484:	0000      	lsl	r0, r0, #0
  101486:	fffb      	second half of BL instruction 0xfffb
  101488:	28b8      	cmp	r0, #184
  10148a:	0020      	lsl	r0, r4, #0

0010148c <prvSendControlData>:
  10148c:	b570      	push	{r4, r5, r6, lr}
  10148e:	0409      	lsl	r1, r1, #16
  101490:	1c15      	mov	r5, r2		(add r5, r2, #0)
  101492:	0c09      	lsr	r1, r1, #16
  101494:	1c06      	mov	r6, r0		(add r6, r0, #0)
  101496:	42a9      	cmp	r1, r5
  101498:	d201      	bcs	10149e <prvSendControlData+0x12>
  10149a:	1c0d      	mov	r5, r1		(add r5, r1, #0)
  10149c:	e009      	b	1014b2 <prvSendControlData+0x26>
  10149e:	428a      	cmp	r2, r1
  1014a0:	d207      	bcs	1014b2 <prvSendControlData+0x26>
  1014a2:	2b00      	cmp	r3, #0
  1014a4:	d005      	beq	1014b2 <prvSendControlData+0x26>
  1014a6:	2307      	mov	r3, #7
  1014a8:	421a      	tst	r2, r3
  1014aa:	d102      	bne	1014b2 <prvSendControlData+0x26>
  1014ac:	4a09      	ldr	r2, [pc, #36]	(1014d4 <.text+0x14d4>)
  1014ae:	2304      	mov	r3, #4
  1014b0:	6013      	str	r3, [r2, #0]
  1014b2:	4c09      	ldr	r4, [pc, #36]	(1014d8 <.text+0x14d8>)
  1014b4:	1c31      	mov	r1, r6		(add r1, r6, #0)
  1014b6:	1c2a      	mov	r2, r5		(add r2, r5, #0)
  1014b8:	1c20      	mov	r0, r4		(add r0, r4, #0)
  1014ba:	fa85f000 	bl	1019c8 <memcpy>
  1014be:	1c23      	mov	r3, r4		(add r3, r4, #0)
  1014c0:	3308      	add	r3, #8
  1014c2:	67dd      	str	r5, [r3, #124]
  1014c4:	3404      	add	r4, #4
  1014c6:	2300      	mov	r3, #0
  1014c8:	67e3      	str	r3, [r4, #124]
  1014ca:	ff8df7ff 	bl	1013e8 <prvSendNextSegment>
  1014ce:	bc70      	pop	{r4, r5, r6}
  1014d0:	bc01      	pop	{r0}
  1014d2:	4700      	bx	r0
  1014d4:	28b8      	cmp	r0, #184
  1014d6:	0020      	lsl	r0, r4, #0
  1014d8:	2964      	cmp	r1, #100
  1014da:	0020      	lsl	r0, r4, #0

001014dc <vUSBCDCTask>:
  1014dc:	b5f0      	push	{r4, r5, r6, r7, lr}
  1014de:	b085      	sub	sp, #20
  1014e0:	fb82f000 	bl	101be8 <__vPortEnterCritical_from_thumb>
  1014e4:	fb84f000 	bl	101bf0 <__vPortExitCritical_from_thumb>
  1014e8:	20f0      	mov	r0, #240
  1014ea:	fa01f7ff 	bl	1008f0 <vTaskDelay>
  1014ee:	fb7bf000 	bl	101be8 <__vPortEnterCritical_from_thumb>
  1014f2:	2104      	mov	r1, #4
  1014f4:	2004      	mov	r0, #4
  1014f6:	fc03f7ff 	bl	100d00 <xQueueCreate>
  1014fa:	4ccc      	ldr	r4, [pc, #816]	(10182c <.text+0x182c>)
  1014fc:	2101      	mov	r1, #1
  1014fe:	6020      	str	r0, [r4, #0]
  101500:	20c8      	mov	r0, #200
  101502:	fbfdf7ff 	bl	100d00 <xQueueCreate>
  101506:	4dca      	ldr	r5, [pc, #808]	(101830 <.text+0x1830>)
  101508:	2101      	mov	r1, #1
  10150a:	6028      	str	r0, [r5, #0]
  10150c:	20c9      	mov	r0, #201
  10150e:	fbf7f7ff 	bl	100d00 <xQueueCreate>
  101512:	4bc8      	ldr	r3, [pc, #800]	(101834 <.text+0x1834>)
  101514:	6018      	str	r0, [r3, #0]
  101516:	6823      	ldr	r3, [r4, #0]
  101518:	2b00      	cmp	r3, #0
  10151a:	d004      	beq	101526 <vUSBCDCTask+0x4a>
  10151c:	682b      	ldr	r3, [r5, #0]
  10151e:	2b00      	cmp	r3, #0
  101520:	d001      	beq	101526 <vUSBCDCTask+0x4a>
  101522:	2800      	cmp	r0, #0
  101524:	d106      	bne	101534 <vUSBCDCTask+0x58>
  101526:	2004      	mov	r0, #4
  101528:	feb0f7ff 	bl	10128c <Toggle_LED>
  10152c:	2064      	mov	r0, #100
  10152e:	f9dff7ff 	bl	1008f0 <vTaskDelay>
  101532:	e7f8      	b	101526 <vUSBCDCTask+0x4a>
  101534:	4bc0      	ldr	r3, [pc, #768]	(101838 <.text+0x1838>)
  101536:	2100      	mov	r1, #0
  101538:	3304      	add	r3, #4
  10153a:	67d9      	str	r1, [r3, #124]
  10153c:	4bbf      	ldr	r3, [pc, #764]	(10183c <.text+0x183c>)
  10153e:	3304      	add	r3, #4
  101540:	67d9      	str	r1, [r3, #124]
  101542:	4bbf      	ldr	r3, [pc, #764]	(101840 <.text+0x1840>)
  101544:	7019      	strb	r1, [r3, #0]
  101546:	4bbf      	ldr	r3, [pc, #764]	(101844 <.text+0x1844>)
  101548:	6019      	str	r1, [r3, #0]
  10154a:	4bbf      	ldr	r3, [pc, #764]	(101848 <.text+0x1848>)
  10154c:	4abf      	ldr	r2, [pc, #764]	(10184c <.text+0x184c>)
  10154e:	7019      	strb	r1, [r3, #0]
  101550:	2302      	mov	r3, #2
  101552:	6013      	str	r3, [r2, #0]
  101554:	48be      	ldr	r0, [pc, #760]	(101850 <.text+0x1850>)
  101556:	2380      	mov	r3, #128
  101558:	68c2      	ldr	r2, [r0, #12]
  10155a:	055b      	lsl	r3, r3, #21
  10155c:	431a      	orr	r2, r3
  10155e:	60c2      	str	r2, [r0, #12]
  101560:	2480      	mov	r4, #128
  101562:	4abc      	ldr	r2, [pc, #752]	(101854 <.text+0x1854>)
  101564:	2380      	mov	r3, #128
  101566:	0124      	lsl	r4, r4, #4
  101568:	6013      	str	r3, [r2, #0]
  10156a:	6114      	str	r4, [r2, #16]
  10156c:	2301      	mov	r3, #1
  10156e:	4aba      	ldr	r2, [pc, #744]	(101858 <.text+0x1858>)
  101570:	425b      	neg	r3, r3
  101572:	6153      	str	r3, [r2, #20]
  101574:	6213      	str	r3, [r2, #32]
  101576:	4bb9      	ldr	r3, [pc, #740]	(10185c <.text+0x185c>)
  101578:	6019      	str	r1, [r3, #0]
  10157a:	4bb9      	ldr	r3, [pc, #740]	(101860 <.text+0x1860>)
  10157c:	6311      	str	r1, [r2, #48]
  10157e:	6351      	str	r1, [r2, #52]
  101580:	6391      	str	r1, [r2, #56]
  101582:	63d1      	str	r1, [r2, #60]
  101584:	6051      	str	r1, [r2, #4]
  101586:	6091      	str	r1, [r2, #8]
  101588:	9302      	str	r3, [sp, #8]
  10158a:	4bb6      	ldr	r3, [pc, #728]	(101864 <.text+0x1864>)
  10158c:	2203      	mov	r2, #3
  10158e:	9300      	str	r3, [sp, #0]
  101590:	210b      	mov	r1, #11
  101592:	2300      	mov	r3, #0
  101594:	9802      	ldr	r0, [sp, #8]
  101596:	f8b7f7ff 	bl	100708 <AT91F_AIC_ConfigureIt>
  10159a:	4bb3      	ldr	r3, [pc, #716]	(101868 <.text+0x1868>)
  10159c:	20fa      	mov	r0, #250
  10159e:	625c      	str	r4, [r3, #36]
  1015a0:	f9a6f7ff 	bl	1008f0 <vTaskDelay>
  1015a4:	4ab1      	ldr	r2, [pc, #708]	(10186c <.text+0x186c>)
  1015a6:	2301      	mov	r3, #1
  1015a8:	6013      	str	r3, [r2, #0]
  1015aa:	fb21f000 	bl	101bf0 <__vPortExitCritical_from_thumb>
  1015ae:	4b9f      	ldr	r3, [pc, #636]	(10182c <.text+0x182c>)
  1015b0:	a903      	add	r1, sp, #12
  1015b2:	6818      	ldr	r0, [r3, #0]
  1015b4:	2201      	mov	r2, #1
  1015b6:	fc47f7ff 	bl	100e48 <xQueueReceive>
  1015ba:	2800      	cmp	r0, #0
  1015bc:	d100      	bne	1015c0 <vUSBCDCTask+0xe4>
  1015be:	e194      	b	1018ea <.text+0x18ea>
  1015c0:	9e03      	ldr	r6, [sp, #12]
  1015c2:	6833      	ldr	r3, [r6, #0]
  1015c4:	2101      	mov	r1, #1
  1015c6:	420b      	tst	r3, r1
  1015c8:	d100      	bne	1015cc <vUSBCDCTask+0xf0>
  1015ca:	e16b      	b	1018a4 <.text+0x18a4>
  1015cc:	6872      	ldr	r2, [r6, #4]
  1015ce:	0153      	lsl	r3, r2, #5
  1015d0:	0d5f      	lsr	r7, r3, #21
  1015d2:	420a      	tst	r2, r1
  1015d4:	d03d      	beq	101652 <vUSBCDCTask+0x176>
  1015d6:	4a9b      	ldr	r2, [pc, #620]	(101844 <.text+0x1844>)
  1015d8:	6815      	ldr	r5, [r2, #0]
  1015da:	9201      	str	r2, [sp, #4]
  1015dc:	2d02      	cmp	r5, #2
  1015de:	d122      	bne	101626 <vUSBCDCTask+0x14a>
  1015e0:	4c9d      	ldr	r4, [pc, #628]	(101858 <.text+0x1858>)
  1015e2:	6065      	str	r5, [r4, #4]
  1015e4:	fb00f000 	bl	101be8 <__vPortEnterCritical_from_thumb>
  1015e8:	6b62      	ldr	r2, [r4, #52]
  1015ea:	204f      	mov	r0, #79
  1015ec:	2130      	mov	r1, #48
  1015ee:	4302      	orr	r2, r0
  1015f0:	2382      	mov	r3, #130
  1015f2:	438a      	bic	r2, r1
  1015f4:	021b      	lsl	r3, r3, #8
  1015f6:	431a      	orr	r2, r3
  1015f8:	6362      	str	r2, [r4, #52]
  1015fa:	6125      	str	r5, [r4, #16]
  1015fc:	6ba3      	ldr	r3, [r4, #56]
  1015fe:	2286      	mov	r2, #134
  101600:	4303      	orr	r3, r0
  101602:	438b      	bic	r3, r1
  101604:	0212      	lsl	r2, r2, #8
  101606:	4313      	orr	r3, r2
  101608:	63a3      	str	r3, [r4, #56]
  10160a:	2304      	mov	r3, #4
  10160c:	6123      	str	r3, [r4, #16]
  10160e:	6be3      	ldr	r3, [r4, #60]
  101610:	2287      	mov	r2, #135
  101612:	4303      	orr	r3, r0
  101614:	0212      	lsl	r2, r2, #8
  101616:	438b      	bic	r3, r1
  101618:	4313      	orr	r3, r2
  10161a:	63e3      	str	r3, [r4, #60]
  10161c:	fae8f000 	bl	101bf0 <__vPortExitCritical_from_thumb>
  101620:	9a01      	ldr	r2, [sp, #4]
  101622:	2305      	mov	r3, #5
  101624:	e011      	b	10164a <vUSBCDCTask+0x16e>
  101626:	2d03      	cmp	r5, #3
  101628:	d111      	bne	10164e <vUSBCDCTask+0x172>
  10162a:	4b91      	ldr	r3, [pc, #580]	(101870 <.text+0x1870>)
  10162c:	681a      	ldr	r2, [r3, #0]
  10162e:	2a00      	cmp	r2, #0
  101630:	d002      	beq	101638 <vUSBCDCTask+0x15c>
  101632:	4b89      	ldr	r3, [pc, #548]	(101858 <.text+0x1858>)
  101634:	6059      	str	r1, [r3, #4]
  101636:	e001      	b	10163c <vUSBCDCTask+0x160>
  101638:	4b87      	ldr	r3, [pc, #540]	(101858 <.text+0x1858>)
  10163a:	605a      	str	r2, [r3, #4]
  10163c:	2380      	mov	r3, #128
  10163e:	005b      	lsl	r3, r3, #1
  101640:	431a      	orr	r2, r3
  101642:	4b85      	ldr	r3, [pc, #532]	(101858 <.text+0x1858>)
  101644:	609a      	str	r2, [r3, #8]
  101646:	4a7f      	ldr	r2, [pc, #508]	(101844 <.text+0x1844>)
  101648:	2300      	mov	r3, #0
  10164a:	6013      	str	r3, [r2, #0]
  10164c:	e001      	b	101652 <vUSBCDCTask+0x176>
  10164e:	fecbf7ff 	bl	1013e8 <prvSendNextSegment>
  101652:	6873      	ldr	r3, [r6, #4]
  101654:	079a      	lsl	r2, r3, #30
  101656:	d51c      	bpl	101692 <vUSBCDCTask+0x1b6>
  101658:	4b77      	ldr	r3, [pc, #476]	(101838 <.text+0x1838>)
  10165a:	1d1a      	add	r2, r3, #4
  10165c:	3308      	add	r3, #8
  10165e:	6fdb      	ldr	r3, [r3, #124]
  101660:	4876      	ldr	r0, [pc, #472]	(10183c <.text+0x183c>)
  101662:	67d3      	str	r3, [r2, #124]
  101664:	1c03      	mov	r3, r0		(add r3, r0, #0)
  101666:	3308      	add	r3, #8
  101668:	1d05      	add	r5, r0, #4
  10166a:	6fdb      	ldr	r3, [r3, #124]
  10166c:	6fea      	ldr	r2, [r5, #124]
  10166e:	1a9b      	sub	r3, r3, r2
  101670:	061b      	lsl	r3, r3, #24
  101672:	0e1c      	lsr	r4, r3, #24
  101674:	42bc      	cmp	r4, r7
  101676:	d901      	bls	10167c <vUSBCDCTask+0x1a0>
  101678:	063b      	lsl	r3, r7, #24
  10167a:	0e1c      	lsr	r4, r3, #24
  10167c:	2c00      	cmp	r4, #0
  10167e:	d100      	bne	101682 <vUSBCDCTask+0x1a6>
  101680:	e110      	b	1018a4 <.text+0x18a4>
  101682:	1c31      	mov	r1, r6		(add r1, r6, #0)
  101684:	3108      	add	r1, #8
  101686:	1c22      	mov	r2, r4		(add r2, r4, #0)
  101688:	f99ef000 	bl	1019c8 <memcpy>
  10168c:	6feb      	ldr	r3, [r5, #124]
  10168e:	191b      	add	r3, r3, r4
  101690:	67eb      	str	r3, [r5, #124]
  101692:	6873      	ldr	r3, [r6, #4]
  101694:	075a      	lsl	r2, r3, #29
  101696:	d52a      	bpl	1016ee <vUSBCDCTask+0x212>
  101698:	2f07      	cmp	r7, #7
  10169a:	d928      	bls	1016ee <vUSBCDCTask+0x212>
  10169c:	7a30      	ldrb	r0, [r6, #8]
  10169e:	4975      	ldr	r1, [pc, #468]	(101874 <.text+0x1874>)
  1016a0:	7008      	strb	r0, [r1, #0]
  1016a2:	7a73      	ldrb	r3, [r6, #9]
  1016a4:	704b      	strb	r3, [r1, #1]
  1016a6:	7af3      	ldrb	r3, [r6, #11]
  1016a8:	021b      	lsl	r3, r3, #8
  1016aa:	804b      	strh	r3, [r1, #2]
  1016ac:	7ab2      	ldrb	r2, [r6, #10]
  1016ae:	4313      	orr	r3, r2
  1016b0:	804b      	strh	r3, [r1, #2]
  1016b2:	7b73      	ldrb	r3, [r6, #13]
  1016b4:	021b      	lsl	r3, r3, #8
  1016b6:	808b      	strh	r3, [r1, #4]
  1016b8:	7b32      	ldrb	r2, [r6, #12]
  1016ba:	4313      	orr	r3, r2
  1016bc:	808b      	strh	r3, [r1, #4]
  1016be:	7bf3      	ldrb	r3, [r6, #15]
  1016c0:	021b      	lsl	r3, r3, #8
  1016c2:	80cb      	strh	r3, [r1, #6]
  1016c4:	7bb2      	ldrb	r2, [r6, #14]
  1016c6:	1c1c      	mov	r4, r3		(add r4, r3, #0)
  1016c8:	4314      	orr	r4, r2
  1016ca:	4a5c      	ldr	r2, [pc, #368]	(10183c <.text+0x183c>)
  1016cc:	80cc      	strh	r4, [r1, #6]
  1016ce:	1d13      	add	r3, r2, #4
  1016d0:	2100      	mov	r1, #0
  1016d2:	0600      	lsl	r0, r0, #24
  1016d4:	67d9      	str	r1, [r3, #124]
  1016d6:	2800      	cmp	r0, #0
  1016d8:	db06      	blt	1016e8 <vUSBCDCTask+0x20c>
  1016da:	2c80      	cmp	r4, #128
  1016dc:	d900      	bls	1016e0 <vUSBCDCTask+0x204>
  1016de:	e0df      	b	1018a0 <.text+0x18a0>
  1016e0:	1c13      	mov	r3, r2		(add r3, r2, #0)
  1016e2:	3308      	add	r3, #8
  1016e4:	67dc      	str	r4, [r3, #124]
  1016e6:	e002      	b	1016ee <vUSBCDCTask+0x212>
  1016e8:	1c13      	mov	r3, r2		(add r3, r2, #0)
  1016ea:	3308      	add	r3, #8
  1016ec:	67d9      	str	r1, [r3, #124]
  1016ee:	6872      	ldr	r2, [r6, #4]
  1016f0:	2306      	mov	r3, #6
  1016f2:	421a      	tst	r2, r3
  1016f4:	d100      	bne	1016f8 <vUSBCDCTask+0x21c>
  1016f6:	e0d5      	b	1018a4 <.text+0x18a4>
  1016f8:	4d50      	ldr	r5, [pc, #320]	(10183c <.text+0x183c>)
  1016fa:	1c2a      	mov	r2, r5		(add r2, r5, #0)
  1016fc:	1d2b      	add	r3, r5, #4
  1016fe:	3208      	add	r2, #8
  101700:	6fd9      	ldr	r1, [r3, #124]
  101702:	6fd3      	ldr	r3, [r2, #124]
  101704:	4299      	cmp	r1, r3
  101706:	d200      	bcs	10170a <vUSBCDCTask+0x22e>
  101708:	e0cc      	b	1018a4 <.text+0x18a4>
  10170a:	4c5a      	ldr	r4, [pc, #360]	(101874 <.text+0x1874>)
  10170c:	7821      	ldrb	r1, [r4, #0]
  10170e:	2360      	mov	r3, #96
  101710:	400b      	and	r3, r1
  101712:	2203      	mov	r2, #3
  101714:	10db      	asr	r3, r3, #3
  101716:	4011      	and	r1, r2
  101718:	430b      	orr	r3, r1
  10171a:	2b01      	cmp	r3, #1
  10171c:	d05f      	beq	1017de <vUSBCDCTask+0x302>
  10171e:	2b01      	cmp	r3, #1
  101720:	d306      	bcc	101730 <vUSBCDCTask+0x254>
  101722:	2b02      	cmp	r3, #2
  101724:	d100      	bne	101728 <vUSBCDCTask+0x24c>
  101726:	e0bb      	b	1018a0 <.text+0x18a0>
  101728:	2b05      	cmp	r3, #5
  10172a:	d000      	beq	10172e <vUSBCDCTask+0x252>
  10172c:	e0b8      	b	1018a0 <.text+0x18a0>
  10172e:	e05f      	b	1017f0 <vUSBCDCTask+0x314>
  101730:	ab04      	add	r3, sp, #16
  101732:	2200      	mov	r2, #0
  101734:	801a      	strh	r2, [r3, #0]
  101736:	7863      	ldrb	r3, [r4, #1]
  101738:	2b09      	cmp	r3, #9
  10173a:	d900      	bls	10173e <vUSBCDCTask+0x262>
  10173c:	e0b0      	b	1018a0 <.text+0x18a0>
  10173e:	4a4e      	ldr	r2, [pc, #312]	(101878 <.text+0x1878>)
  101740:	009b      	lsl	r3, r3, #2
  101742:	589b      	ldr	r3, [r3, r2]
  101744:	469f      	mov	pc, r3
  101746:	a804      	add	r0, sp, #16
  101748:	e04f      	b	1017ea <vUSBCDCTask+0x30e>
  10174a:	494a      	ldr	r1, [pc, #296]	(101874 <.text+0x1874>)
  10174c:	884a      	ldrh	r2, [r1, #2]
  10174e:	0a13      	lsr	r3, r2, #8
  101750:	2b02      	cmp	r3, #2
  101752:	d00a      	beq	10176a <vUSBCDCTask+0x28e>
  101754:	2b03      	cmp	r3, #3
  101756:	d00c      	beq	101772 <vUSBCDCTask+0x296>
  101758:	2b01      	cmp	r3, #1
  10175a:	d000      	beq	10175e <vUSBCDCTask+0x282>
  10175c:	e0a0      	b	1018a0 <.text+0x18a0>
  10175e:	4847      	ldr	r0, [pc, #284]	(10187c <.text+0x187c>)
  101760:	88c9      	ldrh	r1, [r1, #6]
  101762:	2212      	mov	r2, #18
  101764:	fe92f7ff 	bl	10148c <prvSendControlData>
  101768:	e09c      	b	1018a4 <.text+0x18a4>
  10176a:	4845      	ldr	r0, [pc, #276]	(101880 <.text+0x1880>)
  10176c:	88c9      	ldrh	r1, [r1, #6]
  10176e:	2243      	mov	r2, #67
  101770:	e01b      	b	1017aa <vUSBCDCTask+0x2ce>
  101772:	23ff      	mov	r3, #255
  101774:	4013      	and	r3, r2
  101776:	2b04      	cmp	r3, #4
  101778:	d900      	bls	10177c <vUSBCDCTask+0x2a0>
  10177a:	e091      	b	1018a0 <.text+0x18a0>
  10177c:	4a41      	ldr	r2, [pc, #260]	(101884 <.text+0x1884>)
  10177e:	009b      	lsl	r3, r3, #2
  101780:	589b      	ldr	r3, [r3, r2]
  101782:	469f      	mov	pc, r3
  101784:	4840      	ldr	r0, [pc, #256]	(101888 <.text+0x1888>)
  101786:	88c9      	ldrh	r1, [r1, #6]
  101788:	2204      	mov	r2, #4
  10178a:	e00e      	b	1017aa <vUSBCDCTask+0x2ce>
  10178c:	483f      	ldr	r0, [pc, #252]	(10188c <.text+0x188c>)
  10178e:	88c9      	ldrh	r1, [r1, #6]
  101790:	2212      	mov	r2, #18
  101792:	e00a      	b	1017aa <vUSBCDCTask+0x2ce>
  101794:	483e      	ldr	r0, [pc, #248]	(101890 <.text+0x1890>)
  101796:	88c9      	ldrh	r1, [r1, #6]
  101798:	2224      	mov	r2, #36
  10179a:	e006      	b	1017aa <vUSBCDCTask+0x2ce>
  10179c:	483d      	ldr	r0, [pc, #244]	(101894 <.text+0x1894>)
  10179e:	88c9      	ldrh	r1, [r1, #6]
  1017a0:	2226      	mov	r2, #38
  1017a2:	e002      	b	1017aa <vUSBCDCTask+0x2ce>
  1017a4:	483c      	ldr	r0, [pc, #240]	(101898 <.text+0x1898>)
  1017a6:	88c9      	ldrh	r1, [r1, #6]
  1017a8:	221e      	mov	r2, #30
  1017aa:	2301      	mov	r3, #1
  1017ac:	e7da      	b	101764 <vUSBCDCTask+0x288>
  1017ae:	4824      	ldr	r0, [pc, #144]	(101840 <.text+0x1840>)
  1017b0:	2101      	mov	r1, #1
  1017b2:	2201      	mov	r2, #1
  1017b4:	e031      	b	10181a <vUSBCDCTask+0x33e>
  1017b6:	fde3f7ff 	bl	101380 <prvSendZLP>
  1017ba:	4a22      	ldr	r2, [pc, #136]	(101844 <.text+0x1844>)
  1017bc:	2303      	mov	r3, #3
  1017be:	6013      	str	r3, [r2, #0]
  1017c0:	4b2c      	ldr	r3, [pc, #176]	(101874 <.text+0x1874>)
  1017c2:	4a2b      	ldr	r2, [pc, #172]	(101870 <.text+0x1870>)
  1017c4:	885b      	ldrh	r3, [r3, #2]
  1017c6:	6013      	str	r3, [r2, #0]
  1017c8:	e06c      	b	1018a4 <.text+0x18a4>
  1017ca:	4b2a      	ldr	r3, [pc, #168]	(101874 <.text+0x1874>)
  1017cc:	4a1c      	ldr	r2, [pc, #112]	(101840 <.text+0x1840>)
  1017ce:	885b      	ldrh	r3, [r3, #2]
  1017d0:	7013      	strb	r3, [r2, #0]
  1017d2:	4a1c      	ldr	r2, [pc, #112]	(101844 <.text+0x1844>)
  1017d4:	2302      	mov	r3, #2
  1017d6:	6013      	str	r3, [r2, #0]
  1017d8:	fdd2f7ff 	bl	101380 <prvSendZLP>
  1017dc:	e062      	b	1018a4 <.text+0x18a4>
  1017de:	2300      	mov	r3, #0
  1017e0:	a804      	add	r0, sp, #16
  1017e2:	8003      	strh	r3, [r0, #0]
  1017e4:	7863      	ldrb	r3, [r4, #1]
  1017e6:	2b00      	cmp	r3, #0
  1017e8:	d15a      	bne	1018a0 <.text+0x18a0>
  1017ea:	2102      	mov	r1, #2
  1017ec:	2202      	mov	r2, #2
  1017ee:	e014      	b	10181a <vUSBCDCTask+0x33e>
  1017f0:	7863      	ldrb	r3, [r4, #1]
  1017f2:	2b20      	cmp	r3, #32
  1017f4:	d006      	beq	101804 <vUSBCDCTask+0x328>
  1017f6:	2b20      	cmp	r3, #32
  1017f8:	d952      	bls	1018a0 <.text+0x18a0>
  1017fa:	2b21      	cmp	r3, #33
  1017fc:	d00a      	beq	101814 <vUSBCDCTask+0x338>
  1017fe:	2b22      	cmp	r3, #34
  101800:	d14e      	bne	1018a0 <.text+0x18a0>
  101802:	e00c      	b	10181e <vUSBCDCTask+0x342>
  101804:	fdbcf7ff 	bl	101380 <prvSendZLP>
  101808:	1c29      	mov	r1, r5		(add r1, r5, #0)
  10180a:	2207      	mov	r2, #7
  10180c:	4823      	ldr	r0, [pc, #140]	(10189c <.text+0x189c>)
  10180e:	f8dbf000 	bl	1019c8 <memcpy>
  101812:	e047      	b	1018a4 <.text+0x18a4>
  101814:	4821      	ldr	r0, [pc, #132]	(10189c <.text+0x189c>)
  101816:	88e1      	ldrh	r1, [r4, #6]
  101818:	2207      	mov	r2, #7
  10181a:	2300      	mov	r3, #0
  10181c:	e7a2      	b	101764 <vUSBCDCTask+0x288>
  10181e:	fdaff7ff 	bl	101380 <prvSendZLP>
  101822:	4a09      	ldr	r2, [pc, #36]	(101848 <.text+0x1848>)
  101824:	8863      	ldrh	r3, [r4, #2]
  101826:	7013      	strb	r3, [r2, #0]
  101828:	e03c      	b	1018a4 <.text+0x18a4>
  10182a:	0000      	lsl	r0, r0, #0
  10182c:	005c      	lsl	r4, r3, #1
  10182e:	0020      	lsl	r0, r4, #0
  101830:	28d8      	cmp	r0, #216
  101832:	0020      	lsl	r0, r4, #0
  101834:	28d4      	cmp	r0, #212
  101836:	0020      	lsl	r0, r4, #0
  101838:	2964      	cmp	r1, #100
  10183a:	0020      	lsl	r0, r4, #0
  10183c:	28dc      	cmp	r0, #220
  10183e:	0020      	lsl	r0, r4, #0
  101840:	28bc      	cmp	r0, #188
  101842:	0020      	lsl	r0, r4, #0
  101844:	28b8      	cmp	r0, #184
  101846:	0020      	lsl	r0, r4, #0
  101848:	28d0      	cmp	r0, #208
  10184a:	0020      	lsl	r0, r4, #0
  10184c:	28cc      	cmp	r0, #204
  10184e:	0020      	lsl	r0, r4, #0
  101850:	fc20      	second half of BL instruction 0xfc20
  101852:	ffff      	second half of BL instruction 0xffff
  101854:	fc00      	second half of BL instruction 0xfc00
  101856:	ffff      	second half of BL instruction 0xffff
  101858:	0000      	lsl	r0, r0, #0
  10185a:	fffb      	second half of BL instruction 0xfffb
  10185c:	0074      	lsl	r4, r6, #1
  10185e:	fffb      	second half of BL instruction 0xfffb
  101860:	fffff000 	bl	102862 <_etext+0xb16>
  101864:	0400      	lsl	r0, r0, #16
  101866:	0010      	lsl	r0, r2, #0
  101868:	fffff0fc 	bl	1fe86a <PMC_PLLR_Val+0x6cc65>
  10186c:	28b4      	cmp	r0, #180
  10186e:	0020      	lsl	r0, r4, #0
  101870:	28c0      	cmp	r0, #192
  101872:	0020      	lsl	r0, r4, #0
  101874:	28c4      	cmp	r0, #196
  101876:	0020      	lsl	r0, r4, #0
  101878:	1d10      	add	r0, r2, #4
  10187a:	0010      	lsl	r0, r2, #0
  10187c:	1c76      	add	r6, r6, #1
  10187e:	0010      	lsl	r0, r2, #0
  101880:	1c33      	mov	r3, r6		(add r3, r6, #0)
  101882:	0010      	lsl	r0, r2, #0
  101884:	1d38      	add	r0, r7, #4
  101886:	0010      	lsl	r0, r2, #0
  101888:	1d02      	add	r2, r0, #4
  10188a:	0010      	lsl	r0, r2, #0
  10188c:	1cf0      	add	r0, r6, #3
  10188e:	0010      	lsl	r0, r2, #0
  101890:	1ccc      	add	r4, r1, #3
  101892:	0010      	lsl	r0, r2, #0
  101894:	1ca6      	add	r6, r4, #2
  101896:	0010      	lsl	r0, r2, #0
  101898:	1c88      	add	r0, r1, #2
  10189a:	0010      	lsl	r0, r2, #0
  10189c:	1d06      	add	r6, r0, #4
  10189e:	0010      	lsl	r0, r2, #0
  1018a0:	fd90f7ff 	bl	1013c4 <prvSendStall>
  1018a4:	9b03      	ldr	r3, [sp, #12]
  1018a6:	681b      	ldr	r3, [r3, #0]
  1018a8:	04da      	lsl	r2, r3, #19
  1018aa:	d51e      	bpl	1018ea <.text+0x18ea>
  1018ac:	4b40      	ldr	r3, [pc, #256]	(1019b0 <.text+0x19b0>)
  1018ae:	4a41      	ldr	r2, [pc, #260]	(1019b4 <.text+0x19b4>)
  1018b0:	2501      	mov	r5, #1
  1018b2:	4c41      	ldr	r4, [pc, #260]	(1019b8 <.text+0x19b8>)
  1018b4:	601d      	str	r5, [r3, #0]
  1018b6:	2300      	mov	r3, #0
  1018b8:	7013      	strb	r3, [r2, #0]
  1018ba:	230f      	mov	r3, #15
  1018bc:	62a3      	str	r3, [r4, #40]
  1018be:	2300      	mov	r3, #0
  1018c0:	62a3      	str	r3, [r4, #40]
  1018c2:	2380      	mov	r3, #128
  1018c4:	005b      	lsl	r3, r3, #1
  1018c6:	60a3      	str	r3, [r4, #8]
  1018c8:	f98ef000 	bl	101be8 <__vPortEnterCritical_from_thumb>
  1018cc:	6b22      	ldr	r2, [r4, #48]
  1018ce:	234f      	mov	r3, #79
  1018d0:	431a      	orr	r2, r3
  1018d2:	2330      	mov	r3, #48
  1018d4:	439a      	bic	r2, r3
  1018d6:	2380      	mov	r3, #128
  1018d8:	021b      	lsl	r3, r3, #8
  1018da:	431a      	orr	r2, r3
  1018dc:	6322      	str	r2, [r4, #48]
  1018de:	6125      	str	r5, [r4, #16]
  1018e0:	f986f000 	bl	101bf0 <__vPortExitCritical_from_thumb>
  1018e4:	4a35      	ldr	r2, [pc, #212]	(1019bc <.text+0x19bc>)
  1018e6:	2302      	mov	r3, #2
  1018e8:	6013      	str	r3, [r2, #0]
  1018ea:	4b31      	ldr	r3, [pc, #196]	(1019b0 <.text+0x19b0>)
  1018ec:	681b      	ldr	r3, [r3, #0]
  1018ee:	2b05      	cmp	r3, #5
  1018f0:	d000      	beq	1018f4 <.text+0x18f4>
  1018f2:	e65c      	b	1015ae <vUSBCDCTask+0xd2>
  1018f4:	4b2f      	ldr	r3, [pc, #188]	(1019b4 <.text+0x19b4>)
  1018f6:	781b      	ldrb	r3, [r3, #0]
  1018f8:	2b00      	cmp	r3, #0
  1018fa:	d100      	bne	1018fe <.text+0x18fe>
  1018fc:	e657      	b	1015ae <vUSBCDCTask+0xd2>
  1018fe:	4b2e      	ldr	r3, [pc, #184]	(1019b8 <.text+0x19b8>)
  101900:	6b9b      	ldr	r3, [r3, #56]
  101902:	06da      	lsl	r2, r3, #27
  101904:	d44e      	bmi	1019a4 <.text+0x19a4>
  101906:	4b2e      	ldr	r3, [pc, #184]	(1019c0 <.text+0x19c0>)
  101908:	6818      	ldr	r0, [r3, #0]
  10190a:	fa5df7ff 	bl	100dc8 <uxQueueMessagesWaiting>
  10190e:	2800      	cmp	r0, #0
  101910:	d048      	beq	1019a4 <.text+0x19a4>
  101912:	2400      	mov	r4, #0
  101914:	4b2a      	ldr	r3, [pc, #168]	(1019c0 <.text+0x19c0>)
  101916:	466d      	mov	r5, sp
  101918:	3513      	add	r5, #19
  10191a:	6818      	ldr	r0, [r3, #0]
  10191c:	1c29      	mov	r1, r5		(add r1, r5, #0)
  10191e:	2200      	mov	r2, #0
  101920:	fa92f7ff 	bl	100e48 <xQueueReceive>
  101924:	2800      	cmp	r0, #0
  101926:	d005      	beq	101934 <.text+0x1934>
  101928:	782a      	ldrb	r2, [r5, #0]
  10192a:	4b23      	ldr	r3, [pc, #140]	(1019b8 <.text+0x19b8>)
  10192c:	3401      	add	r4, #1
  10192e:	659a      	str	r2, [r3, #88]
  101930:	2c40      	cmp	r4, #64
  101932:	d1ef      	bne	101914 <.text+0x1914>
  101934:	4b20      	ldr	r3, [pc, #128]	(1019b8 <.text+0x19b8>)
  101936:	6b9a      	ldr	r2, [r3, #56]
  101938:	2110      	mov	r1, #16
  10193a:	430a      	orr	r2, r1
  10193c:	639a      	str	r2, [r3, #56]
  10193e:	e031      	b	1019a4 <.text+0x19a4>
  101940:	6b4b      	ldr	r3, [r1, #52]
  101942:	015b      	lsl	r3, r3, #5
  101944:	0d5d      	lsr	r5, r3, #21
  101946:	4b1f      	ldr	r3, [pc, #124]	(1019c4 <.text+0x19c4>)
  101948:	6818      	ldr	r0, [r3, #0]
  10194a:	fa3df7ff 	bl	100dc8 <uxQueueMessagesWaiting>
  10194e:	23c8      	mov	r3, #200
  101950:	1a1b      	sub	r3, r3, r0
  101952:	429d      	cmp	r5, r3
  101954:	d300      	bcc	101958 <.text+0x1958>
  101956:	e62a      	b	1015ae <vUSBCDCTask+0xd2>
  101958:	2400      	mov	r4, #0
  10195a:	e00a      	b	101972 <.text+0x1972>
  10195c:	4b16      	ldr	r3, [pc, #88]	(1019b8 <.text+0x19b8>)
  10195e:	4669      	mov	r1, sp
  101960:	6d5b      	ldr	r3, [r3, #84]
  101962:	3113      	add	r1, #19
  101964:	700b      	strb	r3, [r1, #0]
  101966:	4b17      	ldr	r3, [pc, #92]	(1019c4 <.text+0x19c4>)
  101968:	2200      	mov	r2, #0
  10196a:	6818      	ldr	r0, [r3, #0]
  10196c:	fadef7ff 	bl	100f2c <xQueueSend>
  101970:	3401      	add	r4, #1
  101972:	42ac      	cmp	r4, r5
  101974:	d1f2      	bne	10195c <.text+0x195c>
  101976:	4c10      	ldr	r4, [pc, #64]	(1019b8 <.text+0x19b8>)
  101978:	f936f000 	bl	101be8 <__vPortEnterCritical_from_thumb>
  10197c:	6b63      	ldr	r3, [r4, #52]
  10197e:	4d0f      	ldr	r5, [pc, #60]	(1019bc <.text+0x19bc>)
  101980:	224f      	mov	r2, #79
  101982:	4313      	orr	r3, r2
  101984:	2230      	mov	r2, #48
  101986:	4393      	bic	r3, r2
  101988:	682a      	ldr	r2, [r5, #0]
  10198a:	4393      	bic	r3, r2
  10198c:	6363      	str	r3, [r4, #52]
  10198e:	f92ff000 	bl	101bf0 <__vPortExitCritical_from_thumb>
  101992:	2202      	mov	r2, #2
  101994:	6122      	str	r2, [r4, #16]
  101996:	682b      	ldr	r3, [r5, #0]
  101998:	2b02      	cmp	r3, #2
  10199a:	d102      	bne	1019a2 <.text+0x19a2>
  10199c:	2340      	mov	r3, #64
  10199e:	602b      	str	r3, [r5, #0]
  1019a0:	e000      	b	1019a4 <.text+0x19a4>
  1019a2:	602a      	str	r2, [r5, #0]
  1019a4:	4904      	ldr	r1, [pc, #16]	(1019b8 <.text+0x19b8>)
  1019a6:	6b4a      	ldr	r2, [r1, #52]
  1019a8:	2342      	mov	r3, #66
  1019aa:	421a      	tst	r2, r3
  1019ac:	d1c8      	bne	101940 <.text+0x1940>
  1019ae:	e5fe      	b	1015ae <vUSBCDCTask+0xd2>
  1019b0:	28b8      	cmp	r0, #184
  1019b2:	0020      	lsl	r0, r4, #0
  1019b4:	28d0      	cmp	r0, #208
  1019b6:	0020      	lsl	r0, r4, #0
  1019b8:	0000      	lsl	r0, r0, #0
  1019ba:	fffb      	second half of BL instruction 0xfffb
  1019bc:	28cc      	cmp	r0, #204
  1019be:	0020      	lsl	r0, r4, #0
  1019c0:	28d4      	cmp	r0, #212
  1019c2:	0020      	lsl	r0, r4, #0
  1019c4:	28d8      	cmp	r0, #216
  1019c6:	0020      	lsl	r0, r4, #0

001019c8 <memcpy>:
  1019c8:	b530      	push	{r4, r5, lr}
  1019ca:	1c05      	mov	r5, r0		(add r5, r0, #0)
  1019cc:	4684      	mov	ip, r0
  1019ce:	1c14      	mov	r4, r2		(add r4, r2, #0)
  1019d0:	1c10      	mov	r0, r2		(add r0, r2, #0)
  1019d2:	2a0f      	cmp	r2, #15
  1019d4:	d904      	bls	1019e0 <memcpy+0x18>
  1019d6:	1c0a      	mov	r2, r1		(add r2, r1, #0)
  1019d8:	432a      	orr	r2, r5
  1019da:	2303      	mov	r3, #3
  1019dc:	421a      	tst	r2, r3
  1019de:	d00e      	beq	1019fe <memcpy+0x36>
  1019e0:	1e63      	sub	r3, r4, #1
  1019e2:	d308      	bcc	1019f6 <memcpy+0x2e>
  1019e4:	4662      	mov	r2, ip
  1019e6:	189b      	add	r3, r3, r2
  1019e8:	1c58      	add	r0, r3, #1
  1019ea:	780b      	ldrb	r3, [r1, #0]
  1019ec:	7013      	strb	r3, [r2, #0]
  1019ee:	3201      	add	r2, #1
  1019f0:	3101      	add	r1, #1
  1019f2:	4282      	cmp	r2, r0
  1019f4:	d1f9      	bne	1019ea <memcpy+0x22>
  1019f6:	1c28      	mov	r0, r5		(add r0, r5, #0)
  1019f8:	bc30      	pop	{r4, r5}
  1019fa:	bc02      	pop	{r1}
  1019fc:	4708      	bx	r1
  1019fe:	1c2a      	mov	r2, r5		(add r2, r5, #0)
  101a00:	680b      	ldr	r3, [r1, #0]
  101a02:	6013      	str	r3, [r2, #0]
  101a04:	684b      	ldr	r3, [r1, #4]
  101a06:	6053      	str	r3, [r2, #4]
  101a08:	688b      	ldr	r3, [r1, #8]
  101a0a:	6093      	str	r3, [r2, #8]
  101a0c:	68cb      	ldr	r3, [r1, #12]
  101a0e:	3810      	sub	r0, #16
  101a10:	60d3      	str	r3, [r2, #12]
  101a12:	3110      	add	r1, #16
  101a14:	3210      	add	r2, #16
  101a16:	280f      	cmp	r0, #15
  101a18:	d8f2      	bhi	101a00 <memcpy+0x38>
  101a1a:	1c04      	mov	r4, r0		(add r4, r0, #0)
  101a1c:	2803      	cmp	r0, #3
  101a1e:	d905      	bls	101a2c <memcpy+0x64>
  101a20:	c908      	ldmia	r1!,{r3}
  101a22:	3804      	sub	r0, #4
  101a24:	c208      	stmia	r2!,{r3}
  101a26:	2803      	cmp	r0, #3
  101a28:	d8fa      	bhi	101a20 <memcpy+0x58>
  101a2a:	1c04      	mov	r4, r0		(add r4, r0, #0)
  101a2c:	4694      	mov	ip, r2
  101a2e:	e7d7      	b	1019e0 <memcpy+0x18>

00101a30 <memset>:
  101a30:	b530      	push	{r4, r5, lr}
  101a32:	1c04      	mov	r4, r0		(add r4, r0, #0)
  101a34:	23ff      	mov	r3, #255
  101a36:	1c0d      	mov	r5, r1		(add r5, r1, #0)
  101a38:	1c10      	mov	r0, r2		(add r0, r2, #0)
  101a3a:	46a4      	mov	ip, r4
  101a3c:	401d      	and	r5, r3
  101a3e:	2a03      	cmp	r2, #3
  101a40:	d902      	bls	101a48 <memset+0x18>
  101a42:	2303      	mov	r3, #3
  101a44:	421c      	tst	r4, r3
  101a46:	d00d      	beq	101a64 <memset+0x34>
  101a48:	1e43      	sub	r3, r0, #1
  101a4a:	d307      	bcc	101a5c <memset+0x2c>
  101a4c:	4662      	mov	r2, ip
  101a4e:	189b      	add	r3, r3, r2
  101a50:	1c29      	mov	r1, r5		(add r1, r5, #0)
  101a52:	3301      	add	r3, #1
  101a54:	7011      	strb	r1, [r2, #0]
  101a56:	3201      	add	r2, #1
  101a58:	429a      	cmp	r2, r3
  101a5a:	d1fb      	bne	101a54 <memset+0x24>
  101a5c:	1c20      	mov	r0, r4		(add r0, r4, #0)
  101a5e:	bc30      	pop	{r4, r5}
  101a60:	bc02      	pop	{r1}
  101a62:	4708      	bx	r1
  101a64:	022b      	lsl	r3, r5, #8
  101a66:	1c2a      	mov	r2, r5		(add r2, r5, #0)
  101a68:	431a      	orr	r2, r3
  101a6a:	0413      	lsl	r3, r2, #16
  101a6c:	1c21      	mov	r1, r4		(add r1, r4, #0)
  101a6e:	431a      	orr	r2, r3
  101a70:	280f      	cmp	r0, #15
  101a72:	d805      	bhi	101a80 <memset+0x50>
  101a74:	3804      	sub	r0, #4
  101a76:	c104      	stmia	r1!,{r2}
  101a78:	2803      	cmp	r0, #3
  101a7a:	d8fb      	bhi	101a74 <memset+0x44>
  101a7c:	468c      	mov	ip, r1
  101a7e:	e7e3      	b	101a48 <memset+0x18>
  101a80:	3810      	sub	r0, #16
  101a82:	600a      	str	r2, [r1, #0]
  101a84:	604a      	str	r2, [r1, #4]
  101a86:	608a      	str	r2, [r1, #8]
  101a88:	60ca      	str	r2, [r1, #12]
  101a8a:	3110      	add	r1, #16
  101a8c:	280f      	cmp	r0, #15
  101a8e:	d8f7      	bhi	101a80 <memset+0x50>
  101a90:	2803      	cmp	r0, #3
  101a92:	d8ef      	bhi	101a74 <memset+0x44>
  101a94:	468c      	mov	ip, r1
  101a96:	e7d7      	b	101a48 <memset+0x18>

00101a98 <strcpy>:
  101a98:	b570      	push	{r4, r5, r6, lr}
  101a9a:	1c0a      	mov	r2, r1		(add r2, r1, #0)
  101a9c:	4302      	orr	r2, r0
  101a9e:	2303      	mov	r3, #3
  101aa0:	1c04      	mov	r4, r0		(add r4, r0, #0)
  101aa2:	421a      	tst	r2, r3
  101aa4:	d00a      	beq	101abc <strcpy+0x24>
  101aa6:	1c02      	mov	r2, r0		(add r2, r0, #0)
  101aa8:	780b      	ldrb	r3, [r1, #0]
  101aaa:	3101      	add	r1, #1
  101aac:	7013      	strb	r3, [r2, #0]
  101aae:	3201      	add	r2, #1
  101ab0:	2b00      	cmp	r3, #0
  101ab2:	d1f9      	bne	101aa8 <strcpy+0x10>
  101ab4:	1c20      	mov	r0, r4		(add r0, r4, #0)
  101ab6:	bc70      	pop	{r4, r5, r6}
  101ab8:	bc02      	pop	{r1}
  101aba:	4708      	bx	r1
  101abc:	680a      	ldr	r2, [r1, #0]
  101abe:	4d0c      	ldr	r5, [pc, #48]	(101af0 <.text+0x1af0>)
  101ac0:	1953      	add	r3, r2, r5
  101ac2:	4d0c      	ldr	r5, [pc, #48]	(101af4 <.text+0x1af4>)
  101ac4:	4393      	bic	r3, r2
  101ac6:	422b      	tst	r3, r5
  101ac8:	d001      	beq	101ace <strcpy+0x36>
  101aca:	1c02      	mov	r2, r0		(add r2, r0, #0)
  101acc:	e7ec      	b	101aa8 <strcpy+0x10>
  101ace:	c004      	stmia	r0!,{r2}
  101ad0:	3104      	add	r1, #4
  101ad2:	680a      	ldr	r2, [r1, #0]
  101ad4:	4e06      	ldr	r6, [pc, #24]	(101af0 <.text+0x1af0>)
  101ad6:	1993      	add	r3, r2, r6
  101ad8:	4393      	bic	r3, r2
  101ada:	422b      	tst	r3, r5
  101adc:	d1f5      	bne	101aca <strcpy+0x32>
  101ade:	c004      	stmia	r0!,{r2}
  101ae0:	3104      	add	r1, #4
  101ae2:	680a      	ldr	r2, [r1, #0]
  101ae4:	4e02      	ldr	r6, [pc, #8]	(101af0 <.text+0x1af0>)
  101ae6:	1993      	add	r3, r2, r6
  101ae8:	4393      	bic	r3, r2
  101aea:	422b      	tst	r3, r5
  101aec:	d0ef      	beq	101ace <strcpy+0x36>
  101aee:	e7ec      	b	101aca <strcpy+0x32>
  101af0:	feff      	second half of BL instruction 0xfeff
  101af2:	fefe      	second half of BL instruction 0xfefe
  101af4:	8080      	strh	r0, [r0, #4]
  101af6:	8080      	strh	r0, [r0, #4]

00101af8 <strlen>:
  101af8:	b530      	push	{r4, r5, lr}
  101afa:	2303      	mov	r3, #3
  101afc:	1c04      	mov	r4, r0		(add r4, r0, #0)
  101afe:	4218      	tst	r0, r3
  101b00:	d112      	bne	101b28 <strlen+0x30>
  101b02:	6802      	ldr	r2, [r0, #0]
  101b04:	490c      	ldr	r1, [pc, #48]	(101b38 <.text+0x1b38>)
  101b06:	1853      	add	r3, r2, r1
  101b08:	4393      	bic	r3, r2
  101b0a:	4a0c      	ldr	r2, [pc, #48]	(101b3c <.text+0x1b3c>)
  101b0c:	4213      	tst	r3, r2
  101b0e:	d10b      	bne	101b28 <strlen+0x30>
  101b10:	1c11      	mov	r1, r2		(add r1, r2, #0)
  101b12:	3004      	add	r0, #4
  101b14:	6802      	ldr	r2, [r0, #0]
  101b16:	4d08      	ldr	r5, [pc, #32]	(101b38 <.text+0x1b38>)
  101b18:	1953      	add	r3, r2, r5
  101b1a:	4393      	bic	r3, r2
  101b1c:	420b      	tst	r3, r1
  101b1e:	d0f8      	beq	101b12 <strlen+0x1a>
  101b20:	7803      	ldrb	r3, [r0, #0]
  101b22:	2b00      	cmp	r3, #0
  101b24:	d003      	beq	101b2e <strlen+0x36>
  101b26:	3001      	add	r0, #1
  101b28:	7803      	ldrb	r3, [r0, #0]
  101b2a:	2b00      	cmp	r3, #0
  101b2c:	d1fb      	bne	101b26 <strlen+0x2e>
  101b2e:	1b00      	sub	r0, r0, r4
  101b30:	bc30      	pop	{r4, r5}
  101b32:	bc02      	pop	{r1}
  101b34:	4708      	bx	r1
  101b36:	0000      	lsl	r0, r0, #0
  101b38:	feff      	second half of BL instruction 0xfeff
  101b3a:	fefe      	second half of BL instruction 0xfefe
  101b3c:	8080      	strh	r0, [r0, #4]
  101b3e:	8080      	strh	r0, [r0, #4]

00101b40 <strncpy>:
  101b40:	b5f0      	push	{r4, r5, r6, r7, lr}
  101b42:	1c05      	mov	r5, r0		(add r5, r0, #0)
  101b44:	1c08      	mov	r0, r1		(add r0, r1, #0)
  101b46:	1c11      	mov	r1, r2		(add r1, r2, #0)
  101b48:	1c02      	mov	r2, r0		(add r2, r0, #0)
  101b4a:	432a      	orr	r2, r5
  101b4c:	2303      	mov	r3, #3
  101b4e:	421a      	tst	r2, r3
  101b50:	d101      	bne	101b56 <strncpy+0x16>
  101b52:	2903      	cmp	r1, #3
  101b54:	d821      	bhi	101b9a <strncpy+0x5a>
  101b56:	1c2a      	mov	r2, r5		(add r2, r5, #0)
  101b58:	1c04      	mov	r4, r0		(add r4, r0, #0)
  101b5a:	2900      	cmp	r1, #0
  101b5c:	d019      	beq	101b92 <strncpy+0x52>
  101b5e:	7823      	ldrb	r3, [r4, #0]
  101b60:	3901      	sub	r1, #1
  101b62:	7013      	strb	r3, [r2, #0]
  101b64:	1c60      	add	r0, r4, #1
  101b66:	3201      	add	r2, #1
  101b68:	2b00      	cmp	r3, #0
  101b6a:	d009      	beq	101b80 <strncpy+0x40>
  101b6c:	188c      	add	r4, r1, r2
  101b6e:	42a2      	cmp	r2, r4
  101b70:	d006      	beq	101b80 <strncpy+0x40>
  101b72:	7803      	ldrb	r3, [r0, #0]
  101b74:	3901      	sub	r1, #1
  101b76:	7013      	strb	r3, [r2, #0]
  101b78:	3001      	add	r0, #1
  101b7a:	3201      	add	r2, #1
  101b7c:	2b00      	cmp	r3, #0
  101b7e:	d1f6      	bne	101b6e <strncpy+0x2e>
  101b80:	1e4b      	sub	r3, r1, #1
  101b82:	d306      	bcc	101b92 <strncpy+0x52>
  101b84:	18d3      	add	r3, r2, r3
  101b86:	2100      	mov	r1, #0
  101b88:	3301      	add	r3, #1
  101b8a:	7011      	strb	r1, [r2, #0]
  101b8c:	3201      	add	r2, #1
  101b8e:	429a      	cmp	r2, r3
  101b90:	d1fb      	bne	101b8a <strncpy+0x4a>
  101b92:	1c28      	mov	r0, r5		(add r0, r5, #0)
  101b94:	bcf0      	pop	{r4, r5, r6, r7}
  101b96:	bc02      	pop	{r1}
  101b98:	4708      	bx	r1
  101b9a:	4e08      	ldr	r6, [pc, #32]	(101bbc <.text+0x1bbc>)
  101b9c:	1c2c      	mov	r4, r5		(add r4, r5, #0)
  101b9e:	6802      	ldr	r2, [r0, #0]
  101ba0:	4f07      	ldr	r7, [pc, #28]	(101bc0 <.text+0x1bc0>)
  101ba2:	19d3      	add	r3, r2, r7
  101ba4:	4393      	bic	r3, r2
  101ba6:	4233      	tst	r3, r6
  101ba8:	d104      	bne	101bb4 <strncpy+0x74>
  101baa:	3904      	sub	r1, #4
  101bac:	c404      	stmia	r4!,{r2}
  101bae:	3004      	add	r0, #4
  101bb0:	2903      	cmp	r1, #3
  101bb2:	d8f4      	bhi	101b9e <strncpy+0x5e>
  101bb4:	1c22      	mov	r2, r4		(add r2, r4, #0)
  101bb6:	1c04      	mov	r4, r0		(add r4, r0, #0)
  101bb8:	e7cf      	b	101b5a <strncpy+0x1a>
  101bba:	0000      	lsl	r0, r0, #0
  101bbc:	8080      	strh	r0, [r0, #4]
  101bbe:	8080      	strh	r0, [r0, #4]
  101bc0:	feff      	second half of BL instruction 0xfeff
  101bc2:	fefe      	second half of BL instruction 0xfefe

00101bc4 <__vTaskSwitchContext_from_arm>:
  101bc4:	e59fc000 	ldr	ip, [pc, #0]	; 101bcc <__vTaskSwitchContext_from_arm+0x8>
  101bc8:	e12fff1c 	bx	ip
  101bcc:	00100949 	andeqs	r0, r0, r9, asr #18

00101bd0 <__vTaskIncrementTick_from_arm>:
  101bd0:	e59fc000 	ldr	ip, [pc, #0]	; 101bd8 <__vTaskIncrementTick_from_arm+0x8>
  101bd4:	e12fff1c 	bx	ip
  101bd8:	00100771 	andeqs	r0, r0, r1, ror r7

00101bdc <__xQueueSendFromISR_from_arm>:
  101bdc:	e59fc000 	ldr	ip, [pc, #0]	; 101be4 <__xQueueSendFromISR_from_arm+0x8>
  101be0:	e12fff1c 	bx	ip
  101be4:	00100d69 	andeqs	r0, r0, r9, ror #26

00101be8 <__vPortEnterCritical_from_thumb>:
  101be8:	4778      	bx	pc
  101bea:	46c0      	nop			(mov r8, r8)

00101bec <__vPortEnterCritical_change_to_arm>:
  101bec:	eafff9e7 	b	100390 <vPortEnterCritical>

00101bf0 <__vPortExitCritical_from_thumb>:
  101bf0:	4778      	bx	pc
  101bf2:	46c0      	nop			(mov r8, r8)

00101bf4 <__vPortExitCritical_change_to_arm>:
  101bf4:	eafff9f0 	b	1003bc <vPortExitCritical>

00101bf8 <__vPortDisableInterruptsFromThumb_from_thumb>:
  101bf8:	4778      	bx	pc
  101bfa:	46c0      	nop			(mov r8, r8)

00101bfc <__vPortDisableInterruptsFromThumb_change_to_arm>:
  101bfc:	eafff9dd 	b	100378 <vPortDisableInterruptsFromThumb>

00101c00 <__vPortISRStartFirstTask_from_thumb>:
  101c00:	4778      	bx	pc
  101c02:	46c0      	nop			(mov r8, r8)

00101c04 <__vPortISRStartFirstTask_change_to_arm>:
  101c04:	eafff96b 	b	1001b8 <vPortISRStartFirstTask>
Disassembly of section .data:

00200000 <_data>:
  200000:	e59ff018 	ldr	pc, [pc, #24]	; 200020 <Reset_AddrR>
  200004:	e59ff018 	ldr	pc, [pc, #24]	; 200024 <Undef_AddrR>
  200008:	e59ff018 	ldr	pc, [pc, #24]	; 200028 <SWI_AddrR>
  20000c:	e59ff018 	ldr	pc, [pc, #24]	; 20002c <PAbt_AddrR>
  200010:	e59ff018 	ldr	pc, [pc, #24]	; 200030 <DAbt_AddrR>
  200014:	e1a00000 	nop			(mov r0,r0)
  200018:	e51fff20 	ldr	pc, [pc, #-3872]	; 1ff100 <PMC_PLLR_Val+0x6d4fb>
  20001c:	e51fff20 	ldr	pc, [pc, #-3872]	; 1ff104 <PMC_PLLR_Val+0x6d4ff>

00200020 <Reset_AddrR>:
  200020:	0010005c 	andeqs	r0, r0, ip, asr r0

00200024 <Undef_AddrR>:
  200024:	00200040 	eoreq	r0, r0, r0, asr #32

00200028 <SWI_AddrR>:
  200028:	0010020c 	andeqs	r0, r0, ip, lsl #4

0020002c <PAbt_AddrR>:
  20002c:	00200048 	eoreq	r0, r0, r8, asr #32

00200030 <DAbt_AddrR>:
  200030:	0020004c 	eoreq	r0, r0, ip, asr #32
  200034:	00000000 	andeq	r0, r0, r0

00200038 <IRQ_AddrR>:
  200038:	00200050 	eoreq	r0, r0, r0, asr r0

0020003c <FIQ_AddrR>:
  20003c:	00200054 	eoreq	r0, r0, r4, asr r0

00200040 <Undef_HandlerR>:
  200040:	eafffffe 	b	200040 <Undef_HandlerR>

00200044 <SWI_HandlerR>:
  200044:	eafffffe 	b	200044 <SWI_HandlerR>

00200048 <PAbt_HandlerR>:
  200048:	eafffffe 	b	200048 <PAbt_HandlerR>

0020004c <DAbt_HandlerR>:
  20004c:	eafffffe 	b	20004c <DAbt_HandlerR>

00200050 <IRQ_HandlerR>:
  200050:	eafffffe 	b	200050 <IRQ_HandlerR>

00200054 <FIQ_HandlerR>:
  200054:	eafffffe 	b	200054 <FIQ_HandlerR>
